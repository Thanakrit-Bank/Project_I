{"ast":null,"code":"import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n/**\n * Takes input features and flips all of their coordinates from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {GeoJSON} geojson input features\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = turf.point([20.566406, 43.421008]);\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //addToMap\n * var addToMap = [serbia, saudiArabia];\n */\n\nfunction flip(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var mutate = options.mutate;\n  if (!geojson) throw new Error(\"geojson is required\"); // ensure that we don't modify features in-place and changes to the\n  // output do not change the previous feature, including changes to nested\n  // properties.\n\n  if (mutate === false || mutate === undefined) geojson = clone(geojson);\n  coordEach(geojson, function (coord) {\n    var x = coord[0];\n    var y = coord[1];\n    coord[0] = y;\n    coord[1] = x;\n  });\n  return geojson;\n}\n\nexport default flip;","map":{"version":3,"names":["coordEach","isObject","clone","flip","geojson","options","Error","mutate","undefined","coord","x","y"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/flip/dist/es/index.js"],"sourcesContent":["import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n\n/**\n * Takes input features and flips all of their coordinates from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {GeoJSON} geojson input features\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = turf.point([20.566406, 43.421008]);\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //addToMap\n * var addToMap = [serbia, saudiArabia];\n */\nfunction flip(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var mutate = options.mutate;\n\n  if (!geojson) throw new Error(\"geojson is required\");\n  // ensure that we don't modify features in-place and changes to the\n  // output do not change the previous feature, including changes to nested\n  // properties.\n  if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n  coordEach(geojson, function (coord) {\n    var x = coord[0];\n    var y = coord[1];\n    coord[0] = y;\n    coord[1] = x;\n  });\n  return geojson;\n}\n\nexport default flip;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,OAAd,EAAuBC,OAAvB,EAAgC;EAC9B;EACAA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,IAAI,CAACJ,QAAQ,CAACI,OAAD,CAAb,EAAwB,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;EACxB,IAAIC,MAAM,GAAGF,OAAO,CAACE,MAArB;EAEA,IAAI,CAACH,OAAL,EAAc,MAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN,CANgB,CAO9B;EACA;EACA;;EACA,IAAIC,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAKC,SAAnC,EAA8CJ,OAAO,GAAGF,KAAK,CAACE,OAAD,CAAf;EAE9CJ,SAAS,CAACI,OAAD,EAAU,UAAUK,KAAV,EAAiB;IAClC,IAAIC,CAAC,GAAGD,KAAK,CAAC,CAAD,CAAb;IACA,IAAIE,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;IACAA,KAAK,CAAC,CAAD,CAAL,GAAWE,CAAX;IACAF,KAAK,CAAC,CAAD,CAAL,GAAWC,CAAX;EACD,CALQ,CAAT;EAMA,OAAON,OAAP;AACD;;AAED,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}