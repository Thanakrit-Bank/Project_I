{"ast":null,"code":"import transform from \"./transform.js\";\nexport default function (topology) {\n  var t = transform(topology.transform),\n      key,\n      x0 = Infinity,\n      y0 = x0,\n      x1 = -x0,\n      y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  topology.arcs.forEach(function (arc) {\n    var i = -1,\n        n = arc.length,\n        p;\n\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}","map":{"version":3,"names":["transform","topology","t","key","x0","Infinity","y0","x1","y1","bboxPoint","p","bboxGeometry","o","type","geometries","forEach","coordinates","arcs","arc","i","n","length","objects"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/topojson-client/src/bbox.js"],"sourcesContent":["import transform from \"./transform.js\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,eAAe,UAASC,QAAT,EAAmB;EAChC,IAAIC,CAAC,GAAGF,SAAS,CAACC,QAAQ,CAACD,SAAV,CAAjB;EAAA,IAAuCG,GAAvC;EAAA,IACIC,EAAE,GAAGC,QADT;EAAA,IACmBC,EAAE,GAAGF,EADxB;EAAA,IAC4BG,EAAE,GAAG,CAACH,EADlC;EAAA,IACsCI,EAAE,GAAG,CAACJ,EAD5C;;EAGA,SAASK,SAAT,CAAmBC,CAAnB,EAAsB;IACpBA,CAAC,GAAGR,CAAC,CAACQ,CAAD,CAAL;IACA,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAON,EAAX,EAAeA,EAAE,GAAGM,CAAC,CAAC,CAAD,CAAN;IACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOH,EAAX,EAAeA,EAAE,GAAGG,CAAC,CAAC,CAAD,CAAN;IACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOJ,EAAX,EAAeA,EAAE,GAAGI,CAAC,CAAC,CAAD,CAAN;IACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOF,EAAX,EAAeA,EAAE,GAAGE,CAAC,CAAC,CAAD,CAAN;EAChB;;EAED,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACvB,QAAQA,CAAC,CAACC,IAAV;MACE,KAAK,oBAAL;QAA2BD,CAAC,CAACE,UAAF,CAAaC,OAAb,CAAqBJ,YAArB;QAAoC;;MAC/D,KAAK,OAAL;QAAcF,SAAS,CAACG,CAAC,CAACI,WAAH,CAAT;QAA0B;;MACxC,KAAK,YAAL;QAAmBJ,CAAC,CAACI,WAAF,CAAcD,OAAd,CAAsBN,SAAtB;QAAkC;IAHvD;EAKD;;EAEDR,QAAQ,CAACgB,IAAT,CAAcF,OAAd,CAAsB,UAASG,GAAT,EAAc;IAClC,IAAIC,CAAC,GAAG,CAAC,CAAT;IAAA,IAAYC,CAAC,GAAGF,GAAG,CAACG,MAApB;IAAA,IAA4BX,CAA5B;;IACA,OAAO,EAAES,CAAF,GAAMC,CAAb,EAAgB;MACdV,CAAC,GAAGR,CAAC,CAACgB,GAAG,CAACC,CAAD,CAAJ,EAASA,CAAT,CAAL;MACA,IAAIT,CAAC,CAAC,CAAD,CAAD,GAAON,EAAX,EAAeA,EAAE,GAAGM,CAAC,CAAC,CAAD,CAAN;MACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOH,EAAX,EAAeA,EAAE,GAAGG,CAAC,CAAC,CAAD,CAAN;MACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOJ,EAAX,EAAeA,EAAE,GAAGI,CAAC,CAAC,CAAD,CAAN;MACf,IAAIA,CAAC,CAAC,CAAD,CAAD,GAAOF,EAAX,EAAeA,EAAE,GAAGE,CAAC,CAAC,CAAD,CAAN;IAChB;EACF,CATD;;EAWA,KAAKP,GAAL,IAAYF,QAAQ,CAACqB,OAArB,EAA8B;IAC5BX,YAAY,CAACV,QAAQ,CAACqB,OAAT,CAAiBnB,GAAjB,CAAD,CAAZ;EACD;;EAED,OAAO,CAACC,EAAD,EAAKE,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAP;AACD"},"metadata":{},"sourceType":"module"}