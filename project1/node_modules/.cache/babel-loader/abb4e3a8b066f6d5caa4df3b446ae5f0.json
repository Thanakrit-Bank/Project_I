{"ast":null,"code":"import _slicedToArray from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\Project\\\\Mix_Project\\\\Project_I\\\\project1\\\\src\\\\components\\\\SelectProvince.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelectProvince() {\n  _s();\n\n  var _this = this;\n\n  var all_P = ['Amnat Charoen', 'Ang Thong', 'Bangkok Metropolis', 'Bueng Kan', 'Buri Ram', 'Chachoengsao', 'Chai Nat', 'Chaiyaphum', 'Chanthaburi', 'Chiang Mai', 'Chiang Rai', 'Chon Buri', 'Chumphon', 'Kalasin', 'Kamphaeng Phet', 'Kanchanaburi', 'Khon Kaen', 'Krabi', 'Lampang', 'Lamphun', 'Loei', 'Lop Buri', 'Mae Hong Son', 'Maha Sarakham', 'Mukdahan', 'Nakhon Nayok', 'Nakhon Pathom', 'Nakhon Phanom', 'Nakhon Ratchasima', 'Nakhon Sawan', 'Nakhon Si Thammarat', 'Nan', 'Narathiwat', 'Nong Bua Lam Phu', 'Nong Khai', 'Nonthaburi', 'Pathum Thani', 'Pattani', 'Phangnga', 'Phatthalung', 'Phayao', 'Phetchabun', 'Phetchaburi', 'Phichit', 'Phitsanulok', 'Phra Nakhon Si Ayutthaya', 'Phrae', 'Phuket', 'Prachin Buri', 'Prachuap Khiri Khan', 'Ranong', 'Ratchaburi', 'Rayong', 'Roi Et', 'Sa Kaeo', 'Sakon Nakhon', 'Samut Prakan', 'Samut Sakhon', 'Samut Songkhram', 'Saraburi', 'Satun', 'Si Sa Ket', 'Sing Buri', 'Songkhla', 'Sukhothai', 'Suphan Buri', 'Surat Thani', 'Surin', 'Tak', 'Trang', 'Trat', 'Ubon Ratchathani', 'Udon Thani', 'Uthai Thani', 'Uttaradit', 'Yala', 'Yasothon'];\n  var mapInstance = useMap();\n\n  var _useState = useState('all'),\n      _useState2 = _slicedToArray(_useState, 2),\n      province = _useState2[0],\n      setProvince = _useState2[1];\n\n  useEffect(function () {\n    var select = L.control({\n      position: \"topright\"\n    });\n\n    select.onAdd = function () {\n      var div = L.DomUtil.create(\"div\", \"info select\");\n      var province = '';\n      all_P.forEach(function (p) {\n        var option = \"<option value=\".concat(p, \">\").concat(p, \"</option>\");\n        province += option;\n      });\n      div.innerHTML = /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          defaultValue: true,\n          children: \"All Province\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, _this), all_P.map(function (p) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p,\n            children: p\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 45\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }, _this);\n      return div;\n    };\n\n    select.addTo(mapInstance);\n  }, []);\n}\n\n_s(SelectProvince, \"H6tG73RmKoNg0IIEmzHZGWsbG6o=\", false, function () {\n  return [useMap];\n});\n\n_c = SelectProvince;\nexport default SelectProvince;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectProvince\");","map":{"version":3,"names":["useMap","L","useEffect","useState","SelectProvince","all_P","mapInstance","province","setProvince","select","control","position","onAdd","div","DomUtil","create","forEach","p","option","innerHTML","map","addTo"],"sources":["D:/Project/Mix_Project/Project_I/project1/src/components/SelectProvince.jsx"],"sourcesContent":["import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  { useEffect, useState} from 'react';\r\n\r\nfunction SelectProvince() {\r\n    const all_P = ['Amnat Charoen', 'Ang Thong', 'Bangkok Metropolis', 'Bueng Kan', 'Buri Ram', 'Chachoengsao', 'Chai Nat', 'Chaiyaphum', 'Chanthaburi', 'Chiang Mai', 'Chiang Rai', 'Chon Buri', 'Chumphon', 'Kalasin', 'Kamphaeng Phet', 'Kanchanaburi', 'Khon Kaen', 'Krabi', 'Lampang', 'Lamphun', 'Loei', 'Lop Buri', 'Mae Hong Son', 'Maha Sarakham', 'Mukdahan', 'Nakhon Nayok', 'Nakhon Pathom', 'Nakhon Phanom', 'Nakhon Ratchasima', 'Nakhon Sawan', 'Nakhon Si Thammarat', 'Nan', 'Narathiwat', 'Nong Bua Lam Phu', 'Nong Khai', 'Nonthaburi', 'Pathum Thani', 'Pattani', 'Phangnga', 'Phatthalung', 'Phayao', 'Phetchabun', 'Phetchaburi', 'Phichit', 'Phitsanulok', 'Phra Nakhon Si Ayutthaya', 'Phrae', 'Phuket', 'Prachin Buri', 'Prachuap Khiri Khan', 'Ranong', 'Ratchaburi', 'Rayong', 'Roi Et', 'Sa Kaeo', 'Sakon Nakhon', 'Samut Prakan', 'Samut Sakhon', 'Samut Songkhram', 'Saraburi', 'Satun', 'Si Sa Ket', 'Sing Buri', 'Songkhla', 'Sukhothai', 'Suphan Buri', 'Surat Thani', 'Surin', 'Tak', 'Trang', 'Trat', 'Ubon Ratchathani', 'Udon Thani', 'Uthai Thani', 'Uttaradit', 'Yala', 'Yasothon']\r\n    const mapInstance = useMap();\r\n    const [province, setProvince] = useState('all')\r\n\r\n    useEffect(() => {\r\n      const select = L.control({ position: \"topright\" });\r\n\r\n\r\n      select.onAdd = () => {\r\n        const div = L.DomUtil.create(\"div\", \"info select\");\r\n  \r\n        let province = ''\r\n        all_P.forEach((p) => {\r\n          let option = `<option value=${p}>${p}</option>`\r\n          province += option\r\n        })\r\n  \r\n        div.innerHTML = \r\n                            <select  >\r\n                                <option value='all' defaultValue>All Province</option>\r\n                                {all_P.map((p) => {\r\n                                    return (<option value={p}>{p}</option>) \r\n                                })}\r\n                            </select>\r\n                        \r\n                                \r\n                            \r\n        return div;\r\n      };\r\n      select.addTo(mapInstance);\r\n    }, [])\r\n    \r\n}\r\n\r\nexport default SelectProvince;"],"mappings":"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"},"metadata":{},"sourceType":"module"}