{"ast":null,"code":"/**\r\n * BezierSpline\r\n * https://github.com/leszekr/bezier-spline-js\r\n *\r\n * @private\r\n * @copyright\r\n * Copyright (c) 2013 Leszek Rybicki\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\nvar Spline =\n/** @class */\nfunction () {\n  function Spline(options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0; // this is to ensure compatibility with the 2d version\n\n    for (var i = 0; i < this.length; i++) {\n      this.points[i].z = this.points[i].z || 0;\n    }\n\n    for (var i = 0; i < this.length - 1; i++) {\n      var p1 = this.points[i];\n      var p2 = this.points[i + 1];\n      this.centers.push({\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n        z: (p1.z + p2.z) / 2\n      });\n    }\n\n    this.controls.push([this.points[0], this.points[0]]);\n\n    for (var i = 0; i < this.centers.length - 1; i++) {\n      var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n      var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n      var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n      this.controls.push([{\n        x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n        y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n        z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)\n      }, {\n        x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n        y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n        z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)\n      }]);\n    }\n\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n  }\n  /**\r\n   * Caches an array of equidistant (more or less) points on the curve.\r\n   */\n\n\n  Spline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n\n    for (var t = 0; t < this.duration; t += 10) {\n      var step = this.pos(t);\n      var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n\n      if (dist > mindist) {\n        steps.push(t);\n        laststep = step;\n      }\n    }\n\n    return steps;\n  };\n  /**\r\n   * returns angle and speed in the given point in the curve\r\n   */\n\n\n  Spline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n      angle: 180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n      speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n  };\n  /**\r\n   * Gets the position of the point, given time.\r\n   *\r\n   * WARNING: The speed is not constant. The time it takes between control points is constant.\r\n   *\r\n   * For constant speed, use Spline.steps[i];\r\n   */\n\n\n  Spline.prototype.pos = function (time) {\n    var t = time - this.delay;\n\n    if (t < 0) {\n      t = 0;\n    }\n\n    if (t > this.duration) {\n      t = this.duration - 1;\n    } // t = t-this.delay;\n\n\n    var t2 = t / this.duration;\n\n    if (t2 >= 1) {\n      return this.points[this.length - 1];\n    }\n\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n  };\n\n  return Spline;\n}();\n\nexport default Spline;\n\nfunction bezier(t, p1, c1, c2, p2) {\n  var b = B(t);\n  var pos = {\n    x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n    y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n    z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n  };\n  return pos;\n}\n\nfunction B(t) {\n  var t2 = t * t;\n  var t3 = t2 * t;\n  return [t3, 3 * t2 * (1 - t), 3 * t * (1 - t) * (1 - t), (1 - t) * (1 - t) * (1 - t)];\n}","map":{"version":3,"names":["Spline","options","points","duration","sharpness","centers","controls","stepLength","length","delay","i","z","p1","p2","push","x","y","dx","dy","dz","steps","cacheSteps","prototype","mindist","laststep","pos","t","step","dist","Math","sqrt","vector","angle","atan2","speed","time","t2","n","floor","t1","bezier","c1","c2","b","B","t3"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/bezier-spline/dist/es/lib/spline.js"],"sourcesContent":["/**\r\n * BezierSpline\r\n * https://github.com/leszekr/bezier-spline-js\r\n *\r\n * @private\r\n * @copyright\r\n * Copyright (c) 2013 Leszek Rybicki\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    function Spline(options) {\r\n        this.points = options.points || [];\r\n        this.duration = options.duration || 10000;\r\n        this.sharpness = options.sharpness || 0.85;\r\n        this.centers = [];\r\n        this.controls = [];\r\n        this.stepLength = options.stepLength || 60;\r\n        this.length = this.points.length;\r\n        this.delay = 0;\r\n        // this is to ensure compatibility with the 2d version\r\n        for (var i = 0; i < this.length; i++) {\r\n            this.points[i].z = this.points[i].z || 0;\r\n        }\r\n        for (var i = 0; i < this.length - 1; i++) {\r\n            var p1 = this.points[i];\r\n            var p2 = this.points[i + 1];\r\n            this.centers.push({\r\n                x: (p1.x + p2.x) / 2,\r\n                y: (p1.y + p2.y) / 2,\r\n                z: (p1.z + p2.z) / 2,\r\n            });\r\n        }\r\n        this.controls.push([this.points[0], this.points[0]]);\r\n        for (var i = 0; i < this.centers.length - 1; i++) {\r\n            var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\r\n            var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\r\n            var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\r\n            this.controls.push([\r\n                {\r\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\r\n                        this.sharpness * (this.centers[i].x + dx),\r\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\r\n                        this.sharpness * (this.centers[i].y + dy),\r\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\r\n                        this.sharpness * (this.centers[i].z + dz),\r\n                },\r\n                {\r\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\r\n                        this.sharpness * (this.centers[i + 1].x + dx),\r\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\r\n                        this.sharpness * (this.centers[i + 1].y + dy),\r\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\r\n                        this.sharpness * (this.centers[i + 1].z + dz),\r\n                },\r\n            ]);\r\n        }\r\n        this.controls.push([\r\n            this.points[this.length - 1],\r\n            this.points[this.length - 1],\r\n        ]);\r\n        this.steps = this.cacheSteps(this.stepLength);\r\n        return this;\r\n    }\r\n    /**\r\n     * Caches an array of equidistant (more or less) points on the curve.\r\n     */\r\n    Spline.prototype.cacheSteps = function (mindist) {\r\n        var steps = [];\r\n        var laststep = this.pos(0);\r\n        steps.push(0);\r\n        for (var t = 0; t < this.duration; t += 10) {\r\n            var step = this.pos(t);\r\n            var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) +\r\n                (step.y - laststep.y) * (step.y - laststep.y) +\r\n                (step.z - laststep.z) * (step.z - laststep.z));\r\n            if (dist > mindist) {\r\n                steps.push(t);\r\n                laststep = step;\r\n            }\r\n        }\r\n        return steps;\r\n    };\r\n    /**\r\n     * returns angle and speed in the given point in the curve\r\n     */\r\n    Spline.prototype.vector = function (t) {\r\n        var p1 = this.pos(t + 10);\r\n        var p2 = this.pos(t - 10);\r\n        return {\r\n            angle: (180 * Math.atan2(p1.y - p2.y, p1.x - p2.x)) / 3.14,\r\n            speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) +\r\n                (p2.y - p1.y) * (p2.y - p1.y) +\r\n                (p2.z - p1.z) * (p2.z - p1.z)),\r\n        };\r\n    };\r\n    /**\r\n     * Gets the position of the point, given time.\r\n     *\r\n     * WARNING: The speed is not constant. The time it takes between control points is constant.\r\n     *\r\n     * For constant speed, use Spline.steps[i];\r\n     */\r\n    Spline.prototype.pos = function (time) {\r\n        var t = time - this.delay;\r\n        if (t < 0) {\r\n            t = 0;\r\n        }\r\n        if (t > this.duration) {\r\n            t = this.duration - 1;\r\n        }\r\n        // t = t-this.delay;\r\n        var t2 = t / this.duration;\r\n        if (t2 >= 1) {\r\n            return this.points[this.length - 1];\r\n        }\r\n        var n = Math.floor((this.points.length - 1) * t2);\r\n        var t1 = (this.length - 1) * t2 - n;\r\n        return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\r\n    };\r\n    return Spline;\r\n}());\r\nexport default Spline;\r\nfunction bezier(t, p1, c1, c2, p2) {\r\n    var b = B(t);\r\n    var pos = {\r\n        x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\r\n        y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\r\n        z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3],\r\n    };\r\n    return pos;\r\n}\r\nfunction B(t) {\r\n    var t2 = t * t;\r\n    var t3 = t2 * t;\r\n    return [\r\n        t3,\r\n        3 * t2 * (1 - t),\r\n        3 * t * (1 - t) * (1 - t),\r\n        (1 - t) * (1 - t) * (1 - t),\r\n    ];\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}