{"ast":null,"code":"import { lineString, multiLineString, multiPolygon, polygon } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\nimport { lineclip, polygonclip } from \"./lib/lineclip.js\";\n/**\n * Takes a {@link Feature} and a bbox and clips the feature to the bbox using\n * [lineclip](https://github.com/mapbox/lineclip).\n * May result in degenerate edges when clipping Polygons.\n *\n * @name bboxClip\n * @param {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} feature feature to clip to the bbox\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} clipped Feature\n * @example\n * var bbox = [0, 0, 10, 10];\n * var poly = turf.polygon([[[2, 2], [8, 4], [12, 8], [3, 7], [2, 2]]]);\n *\n * var clipped = turf.bboxClip(poly, bbox);\n *\n * //addToMap\n * var addToMap = [bbox, poly, clipped]\n */\n\nexport default function bboxClip(feature, bbox) {\n  var geom = getGeom(feature);\n  var type = geom.type;\n  var properties = feature.type === \"Feature\" ? feature.properties : {};\n  var coords = geom.coordinates;\n\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\":\n      {\n        var lines_1 = [];\n\n        if (type === \"LineString\") {\n          coords = [coords];\n        }\n\n        coords.forEach(function (line) {\n          lineclip(line, bbox, lines_1);\n        });\n\n        if (lines_1.length === 1) {\n          return lineString(lines_1[0], properties);\n        }\n\n        return multiLineString(lines_1, properties);\n      }\n\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n\n    case \"MultiPolygon\":\n      return multiPolygon(coords.map(function (poly) {\n        return clipPolygon(poly, bbox);\n      }), properties);\n\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\n\nfunction clipPolygon(rings, bbox) {\n  var outRings = [];\n\n  for (var _i = 0, rings_1 = rings; _i < rings_1.length; _i++) {\n    var ring = rings_1[_i];\n    var clipped = polygonclip(ring, bbox);\n\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n\n  return outRings;\n}","map":{"version":3,"names":["lineString","multiLineString","multiPolygon","polygon","getGeom","lineclip","polygonclip","bboxClip","feature","bbox","geom","type","properties","coords","coordinates","lines_1","forEach","line","length","clipPolygon","map","poly","Error","rings","outRings","_i","rings_1","ring","clipped","push"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/bbox-clip/dist/es/index.js"],"sourcesContent":["import { lineString, multiLineString, multiPolygon, polygon, } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\nimport { lineclip, polygonclip } from \"./lib/lineclip.js\";\n/**\n * Takes a {@link Feature} and a bbox and clips the feature to the bbox using\n * [lineclip](https://github.com/mapbox/lineclip).\n * May result in degenerate edges when clipping Polygons.\n *\n * @name bboxClip\n * @param {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} feature feature to clip to the bbox\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} clipped Feature\n * @example\n * var bbox = [0, 0, 10, 10];\n * var poly = turf.polygon([[[2, 2], [8, 4], [12, 8], [3, 7], [2, 2]]]);\n *\n * var clipped = turf.bboxClip(poly, bbox);\n *\n * //addToMap\n * var addToMap = [bbox, poly, clipped]\n */\nexport default function bboxClip(feature, bbox) {\n    var geom = getGeom(feature);\n    var type = geom.type;\n    var properties = feature.type === \"Feature\" ? feature.properties : {};\n    var coords = geom.coordinates;\n    switch (type) {\n        case \"LineString\":\n        case \"MultiLineString\": {\n            var lines_1 = [];\n            if (type === \"LineString\") {\n                coords = [coords];\n            }\n            coords.forEach(function (line) {\n                lineclip(line, bbox, lines_1);\n            });\n            if (lines_1.length === 1) {\n                return lineString(lines_1[0], properties);\n            }\n            return multiLineString(lines_1, properties);\n        }\n        case \"Polygon\":\n            return polygon(clipPolygon(coords, bbox), properties);\n        case \"MultiPolygon\":\n            return multiPolygon(coords.map(function (poly) {\n                return clipPolygon(poly, bbox);\n            }), properties);\n        default:\n            throw new Error(\"geometry \" + type + \" not supported\");\n    }\n}\nfunction clipPolygon(rings, bbox) {\n    var outRings = [];\n    for (var _i = 0, rings_1 = rings; _i < rings_1.length; _i++) {\n        var ring = rings_1[_i];\n        var clipped = polygonclip(ring, bbox);\n        if (clipped.length > 0) {\n            if (clipped[0][0] !== clipped[clipped.length - 1][0] ||\n                clipped[0][1] !== clipped[clipped.length - 1][1]) {\n                clipped.push(clipped[0]);\n            }\n            if (clipped.length >= 4) {\n                outRings.push(clipped);\n            }\n        }\n    }\n    return outRings;\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,YAAtC,EAAoDC,OAApD,QAAoE,eAApE;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,mBAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;EAC5C,IAAIC,IAAI,GAAGN,OAAO,CAACI,OAAD,CAAlB;EACA,IAAIG,IAAI,GAAGD,IAAI,CAACC,IAAhB;EACA,IAAIC,UAAU,GAAGJ,OAAO,CAACG,IAAR,KAAiB,SAAjB,GAA6BH,OAAO,CAACI,UAArC,GAAkD,EAAnE;EACA,IAAIC,MAAM,GAAGH,IAAI,CAACI,WAAlB;;EACA,QAAQH,IAAR;IACI,KAAK,YAAL;IACA,KAAK,iBAAL;MAAwB;QACpB,IAAII,OAAO,GAAG,EAAd;;QACA,IAAIJ,IAAI,KAAK,YAAb,EAA2B;UACvBE,MAAM,GAAG,CAACA,MAAD,CAAT;QACH;;QACDA,MAAM,CAACG,OAAP,CAAe,UAAUC,IAAV,EAAgB;UAC3BZ,QAAQ,CAACY,IAAD,EAAOR,IAAP,EAAaM,OAAb,CAAR;QACH,CAFD;;QAGA,IAAIA,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;UACtB,OAAOlB,UAAU,CAACe,OAAO,CAAC,CAAD,CAAR,EAAaH,UAAb,CAAjB;QACH;;QACD,OAAOX,eAAe,CAACc,OAAD,EAAUH,UAAV,CAAtB;MACH;;IACD,KAAK,SAAL;MACI,OAAOT,OAAO,CAACgB,WAAW,CAACN,MAAD,EAASJ,IAAT,CAAZ,EAA4BG,UAA5B,CAAd;;IACJ,KAAK,cAAL;MACI,OAAOV,YAAY,CAACW,MAAM,CAACO,GAAP,CAAW,UAAUC,IAAV,EAAgB;QAC3C,OAAOF,WAAW,CAACE,IAAD,EAAOZ,IAAP,CAAlB;MACH,CAFmB,CAAD,EAEfG,UAFe,CAAnB;;IAGJ;MACI,MAAM,IAAIU,KAAJ,CAAU,cAAcX,IAAd,GAAqB,gBAA/B,CAAN;EAtBR;AAwBH;;AACD,SAASQ,WAAT,CAAqBI,KAArB,EAA4Bd,IAA5B,EAAkC;EAC9B,IAAIe,QAAQ,GAAG,EAAf;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGH,KAA3B,EAAkCE,EAAE,GAAGC,OAAO,CAACR,MAA/C,EAAuDO,EAAE,EAAzD,EAA6D;IACzD,IAAIE,IAAI,GAAGD,OAAO,CAACD,EAAD,CAAlB;IACA,IAAIG,OAAO,GAAGtB,WAAW,CAACqB,IAAD,EAAOlB,IAAP,CAAzB;;IACA,IAAImB,OAAO,CAACV,MAAR,GAAiB,CAArB,EAAwB;MACpB,IAAIU,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,MAAkBA,OAAO,CAACA,OAAO,CAACV,MAAR,GAAiB,CAAlB,CAAP,CAA4B,CAA5B,CAAlB,IACAU,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,MAAkBA,OAAO,CAACA,OAAO,CAACV,MAAR,GAAiB,CAAlB,CAAP,CAA4B,CAA5B,CADtB,EACsD;QAClDU,OAAO,CAACC,IAAR,CAAaD,OAAO,CAAC,CAAD,CAApB;MACH;;MACD,IAAIA,OAAO,CAACV,MAAR,IAAkB,CAAtB,EAAyB;QACrBM,QAAQ,CAACK,IAAT,CAAcD,OAAd;MACH;IACJ;EACJ;;EACD,OAAOJ,QAAP;AACH"},"metadata":{},"sourceType":"module"}