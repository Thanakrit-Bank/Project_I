{"ast":null,"code":"import _classCallCheck from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"D:\\\\Project\\\\Mix_Project\\\\Project_I\\\\project1\\\\src\\\\components\\\\MyMapClass.jsx\";\nimport React, { Component } from \"react\";\nimport { GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup, LayersControl } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'; // import getGridNC from \"./getGrid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapGeoJson = /*#__PURE__*/function (_Component) {\n  _inherits(MapGeoJson, _Component);\n\n  var _super = _createSuper(MapGeoJson);\n\n  function MapGeoJson() {\n    var _this;\n\n    _classCallCheck(this, MapGeoJson);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      center: [13.2955977, 102.2090103],\n      zoom: 6,\n      url: 'http://127.0.0.1:5000/get_grid' // url: 'http://127.0.0.1:5000/get_spei/Bangkok Metropolis&1902-02',\n      // url:'http://127.0.0.1:5000/get_province/',\n\n    };\n    return _this;\n  }\n\n  _createClass(MapGeoJson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(this.state.url);\n      console.log('did mount');\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(url) {\n      var _this2 = this;\n\n      var reqOptions = {\n        method: \"get\",\n        headers: {\n          \"x-access-token\": \"test\"\n        }\n      };\n      var request = fetch(url, reqOptions);\n      console.log('feching');\n      request.then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        _this2.setState({\n          data: data\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var BaseLayer = LayersControl.BaseLayer;\n      return /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: this.state.center,\n        zoom: this.state.zoom,\n        scrollWheelZoom: true,\n        style: {\n          height: '95vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU\",\n          attribution: \"<a href=\\\"https://www.maptiler.com/copyright/\\\" target=\\\"_blank\\\">\\xA9 MapTiler</a> <a href=\\\"https://www.openstreetmap.org/copyright\\\" target=\\\"_blank\\\">\\xA9 OpenStreetMap contributors</a>\",\n          maxZoom: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n          children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n            checked: true,\n            name: \"Satellite View\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n              maxZoom: 20,\n              subdomains: ['mt1', 'mt2', 'mt3']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"OpenStreetMap.Mapik\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), console.log('render!!'), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          children: this.state.data.map(function (data) {\n            var myStyleGrid = {\n              color: \"white\",\n              weight: 0,\n              opacity: 0.5,\n              fillColor: 'white'\n            };\n\n            if (data.properties.index < 600) {\n              myStyleGrid.fillColor = '#FFEDA0';\n            } else if (data.properties.index < 700) {\n              myStyleGrid.fillColor = '#FED976';\n            } else if (data.properties.index < 800) {\n              myStyleGrid.fillColor = '#FEB24C';\n            } else if (data.properties.index < 900) {\n              myStyleGrid.fillColor = '#FD8D3C';\n            } else if (data.properties.index < 1000) {\n              myStyleGrid.fillColor = '#FC4E2A';\n            } else if (data.properties.index < 1100) {\n              myStyleGrid.fillColor = '#E31A1C';\n            } else if (data.properties.index < 1200) {\n              myStyleGrid.fillColor = '#BD0026';\n            } else if (data.properties.index < 1300) {\n              myStyleGrid.fillColor = '#800026';\n            }\n\n            return /*#__PURE__*/_jsxDEV(GeoJSON, {\n              data: data,\n              style: myStyleGrid,\n              children: [console.log(data), /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\" \", data.properties.index, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, _this3)]\n            }, data.properties.grid_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MapGeoJson;\n}(Component);\n\nexport default MapGeoJson;","map":{"version":3,"names":["React","Component","GeoJSON","MapContainer","TileLayer","Popup","FeatureGroup","LayersControl","MapGeoJson","state","data","center","zoom","url","fetchData","console","log","reqOptions","method","headers","request","fetch","then","r","json","setState","error","BaseLayer","height","map","myStyleGrid","color","weight","opacity","fillColor","properties","index","grid_id"],"sources":["D:/Project/Mix_Project/Project_I/project1/src/components/MyMapClass.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup,LayersControl} from 'react-leaflet' \r\nimport 'leaflet/dist/leaflet.css' \r\n// import getGridNC from \"./getGrid\";\r\n\r\nclass MapGeoJson extends Component {\r\n        state = { \r\n                    data:[],\r\n                    center:[13.2955977,102.2090103],\r\n                    zoom:6,\r\n                    url: 'http://127.0.0.1:5000/get_grid',\r\n                    // url: 'http://127.0.0.1:5000/get_spei/Bangkok Metropolis&1902-02',\r\n                    // url:'http://127.0.0.1:5000/get_province/',\r\n                    } \r\n  \r\n    componentDidMount() {\r\n        this.fetchData(this.state.url);\r\n        \r\n        console.log('did mount');\r\n    }\r\n\r\n    fetchData(url) {\r\n      const reqOptions ={\r\n        method:\"get\", \r\n        headers:{\"x-access-token\": \"test\"},\r\n      }\r\n        let request = fetch(url, reqOptions);\r\n        console.log('feching');\r\n        request\r\n          .then(r => r.json())\r\n          .then(data => {\r\n            this.setState({\r\n              data: data\r\n            });\r\n          }, (error) => {\r\n            console.error(error);\r\n          });\r\n    }\r\n    \r\n    render() { \r\n      const {BaseLayer} = LayersControl;\r\n\r\n        return (\r\n            <MapContainer center={this.state.center} zoom={this.state.zoom} scrollWheelZoom={true} style={{height:'95vh'}}>\r\n                <TileLayer\r\n                    url='https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU'\r\n                    attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n                    maxZoom= {20}\r\n                /> \r\n\r\n                <LayersControl>\r\n                    <BaseLayer checked name=\"Satellite View\">\r\n                        <TileLayer\r\n                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                            maxZoom= {20}\r\n                            subdomains={['mt1','mt2','mt3']}\r\n                        />\r\n                    </BaseLayer>\r\n\r\n                    <BaseLayer name=\"OpenStreetMap.Mapik\">\r\n                        <TileLayer\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        />\r\n                    </BaseLayer>\r\n                </LayersControl>\r\n\r\n                {console.log('render!!')}\r\n                <FeatureGroup>\r\n\r\n                  {this.state.data.map(data => {\r\n\r\n                    var myStyleGrid = {\r\n                        color: \"white\",\r\n                        weight: 0,\r\n                        opacity: 0.5,\r\n                        fillColor: 'white',\r\n                    }\r\n                    \r\n                    if(data.properties.index < 600){\r\n                      myStyleGrid.fillColor = '#FFEDA0'\r\n                    }else if(data.properties.index < 700){\r\n                      myStyleGrid.fillColor = '#FED976'\r\n                    }else if(data.properties.index < 800){\r\n                      myStyleGrid.fillColor = '#FEB24C'\r\n                    }else if(data.properties.index < 900){\r\n                      myStyleGrid.fillColor = '#FD8D3C'\r\n                    }else if(data.properties.index < 1000){\r\n                      myStyleGrid.fillColor = '#FC4E2A'\r\n                    }else if(data.properties.index < 1100){\r\n                      myStyleGrid.fillColor = '#E31A1C'\r\n                    }else if(data.properties.index < 1200){\r\n                      myStyleGrid.fillColor = '#BD0026'\r\n                    }else if(data.properties.index < 1300){\r\n                      myStyleGrid.fillColor = '#800026'\r\n                    }\r\n                    \r\n                    return (\r\n                    <GeoJSON key={data.properties.grid_id}  data={data} style={myStyleGrid}>\r\n                      {console.log(data)}\r\n                      <Popup> {data.properties.index} </Popup>\r\n                    </GeoJSON>)\r\n                  })}\r\n                \r\n                </FeatureGroup>\r\n               \r\n            </MapContainer>\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapGeoJson;"],"mappings":"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"},"metadata":{},"sourceType":"module"}