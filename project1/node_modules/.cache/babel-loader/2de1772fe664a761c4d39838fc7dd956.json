{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Project_I\\\\project1\\\\src\\\\components\\\\MyMapClass.jsx\";\nimport React, { Component, L } from \"react\";\nimport { GeoJSON, MapContainer, TileLayer, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'; // import getGridNC from \"./getGrid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapGeoJson = /*#__PURE__*/function (_Component) {\n  _inherits(MapGeoJson, _Component);\n\n  var _super = _createSuper(MapGeoJson);\n\n  function MapGeoJson() {\n    var _this;\n\n    _classCallCheck(this, MapGeoJson);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      center: [13.2955977, 102.2090103],\n      zoom: 6,\n      // url:'http://127.0.0.1:5000/get_province/',\n      url: 'http://127.0.0.1:5000/get_grid' // province:'all',\n      // all_P:['Amnat Charoen', 'Ang Thong', 'Bangkok Metropolis', 'Bueng Kan', 'Buri Ram', 'Chachoengsao', 'Chai Nat', 'Chaiyaphum', 'Chanthaburi', 'Chiang Mai', 'Chiang Rai', 'Chon Buri', 'Chumphon', 'Kalasin', 'Kamphaeng Phet', 'Kanchanaburi', 'Khon Kaen', 'Krabi', 'Lampang', 'Lamphun', 'Loei', 'Lop Buri', 'Mae Hong Son', 'Maha Sarakham', 'Mukdahan', 'Nakhon Nayok', 'Nakhon Pathom', 'Nakhon Phanom', 'Nakhon Ratchasima', 'Nakhon Sawan', 'Nakhon Si Thammarat', 'Nan', 'Narathiwat', 'Nong Bua Lam Phu', 'Nong Khai', 'Nonthaburi', 'Pathum Thani', 'Pattani', 'Phangnga', 'Phatthalung', 'Phayao', 'Phetchabun', 'Phetchaburi', 'Phichit', 'Phitsanulok', 'Phra Nakhon Si Ayutthaya', 'Phrae', 'Phuket', 'Prachin Buri', 'Prachuap Khiri Khan', 'Ranong', 'Ratchaburi', 'Rayong', 'Roi Et', 'Sa Kaeo', 'Sakon Nakhon', 'Samut Prakan', 'Samut Sakhon', 'Samut Songkhram', 'Saraburi', 'Satun', 'Si Sa Ket', 'Sing Buri', 'Songkhla', 'Sukhothai', 'Suphan Buri', 'Surat Thani', 'Surin', 'Tak', 'Trang', 'Trat', 'Ubon Ratchathani', 'Udon Thani', 'Uthai Thani', 'Uttaradit', 'Yala', 'Yasothon']\n\n    };\n\n    _this.myStyle = function () {\n      return {\n        color: \"white\",\n        weight: 1,\n        opacity: 1,\n        fillColor: 'none' // dashArray: '8 5'\n\n      };\n    };\n\n    _this.onLatChange = function (e) {\n      _this.fetchData(_this.state.url + _this.state.province);\n\n      _this.setState({\n        province: e.target.value\n      });\n\n      console.log('go to fech');\n    };\n\n    return _this;\n  }\n\n  _createClass(MapGeoJson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(this.state.url);\n      console.log('did mount');\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(url) {\n      var _this2 = this;\n\n      var reqOptions = {\n        method: \"get\",\n        headers: {\n          \"x-access-token\": \"test\"\n        }\n      };\n      var request = fetch(url, reqOptions);\n      console.log('feching'); // return request\n\n      request.then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        _this2.setState({\n          data: data.features\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        // <div>\n        //   <div style={{textAlign:'right'}}>\n        //       <span >\n        //         <select onChange={(e) => this.onLatChange(e)}>\n        //           <option value='all' defaultValue>All Province</option>\n        //           {this.state.all_P.map((p) => {\n        //             return (<option value={p}>{p}</option>) \n        //           })}\n        //         </select>\n        //       </span>\n        //   </div>\n        _jsxDEV(MapContainer, {\n          center: this.state.center,\n          zoom: this.state.zoom,\n          scrollWheelZoom: true,\n          style: {\n            height: '95vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU\",\n            attribution: \"<a href=\\\"https://www.maptiler.com/copyright/\\\" target=\\\"_blank\\\">\\xA9 MapTiler</a> <a href=\\\"https://www.openstreetmap.org/copyright\\\" target=\\\"_blank\\\">\\xA9 OpenStreetMap contributors</a>\",\n            maxZoom: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), console.log('render!!'), /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: this.state.data,\n            style: this.myStyle,\n            children: [console.log(this.state.data), console.log(this.state.province)]\n          }, this.properties.gridid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) // </div>\n\n      );\n    }\n  }]);\n\n  return MapGeoJson;\n}(Component);\n\nexport default MapGeoJson;","map":{"version":3,"names":["React","Component","L","GeoJSON","MapContainer","TileLayer","Popup","MapGeoJson","state","data","center","zoom","url","myStyle","color","weight","opacity","fillColor","onLatChange","e","fetchData","province","setState","target","value","console","log","reqOptions","method","headers","request","fetch","then","r","json","features","error","height","properties","gridid"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/src/components/MyMapClass.jsx"],"sourcesContent":["import React, {Component, L} from \"react\";\r\nimport {GeoJSON, MapContainer, TileLayer, Popup} from 'react-leaflet' \r\nimport 'leaflet/dist/leaflet.css' \r\n// import getGridNC from \"./getGrid\";\r\n\r\nclass MapGeoJson extends Component {\r\n        state = { \r\n                    data:[],\r\n                    center:[13.2955977,102.2090103],\r\n                    zoom:6,\r\n                    // url:'http://127.0.0.1:5000/get_province/',\r\n                    url: 'http://127.0.0.1:5000/get_grid',\r\n                    // province:'all',\r\n                    // all_P:['Amnat Charoen', 'Ang Thong', 'Bangkok Metropolis', 'Bueng Kan', 'Buri Ram', 'Chachoengsao', 'Chai Nat', 'Chaiyaphum', 'Chanthaburi', 'Chiang Mai', 'Chiang Rai', 'Chon Buri', 'Chumphon', 'Kalasin', 'Kamphaeng Phet', 'Kanchanaburi', 'Khon Kaen', 'Krabi', 'Lampang', 'Lamphun', 'Loei', 'Lop Buri', 'Mae Hong Son', 'Maha Sarakham', 'Mukdahan', 'Nakhon Nayok', 'Nakhon Pathom', 'Nakhon Phanom', 'Nakhon Ratchasima', 'Nakhon Sawan', 'Nakhon Si Thammarat', 'Nan', 'Narathiwat', 'Nong Bua Lam Phu', 'Nong Khai', 'Nonthaburi', 'Pathum Thani', 'Pattani', 'Phangnga', 'Phatthalung', 'Phayao', 'Phetchabun', 'Phetchaburi', 'Phichit', 'Phitsanulok', 'Phra Nakhon Si Ayutthaya', 'Phrae', 'Phuket', 'Prachin Buri', 'Prachuap Khiri Khan', 'Ranong', 'Ratchaburi', 'Rayong', 'Roi Et', 'Sa Kaeo', 'Sakon Nakhon', 'Samut Prakan', 'Samut Sakhon', 'Samut Songkhram', 'Saraburi', 'Satun', 'Si Sa Ket', 'Sing Buri', 'Songkhla', 'Sukhothai', 'Suphan Buri', 'Surat Thani', 'Surin', 'Tak', 'Trang', 'Trat', 'Ubon Ratchathani', 'Udon Thani', 'Uthai Thani', 'Uttaradit', 'Yala', 'Yasothon']\r\n                    } \r\n  \r\n    componentDidMount() {\r\n        this.fetchData(this.state.url);\r\n        \r\n        console.log('did mount');\r\n    }\r\n\r\n    fetchData(url) {\r\n      const reqOptions ={\r\n        method:\"get\", \r\n        headers:{\"x-access-token\": \"test\"},\r\n      }\r\n        let request = fetch(url, reqOptions);\r\n        console.log('feching');\r\n        // return request\r\n        request\r\n          .then(r => r.json())\r\n          .then(data => {\r\n            this.setState({\r\n              data: data.features\r\n            });\r\n          }, (error) => {\r\n            console.error(error);\r\n          });\r\n    }\r\n\r\n    myStyle = () => {\r\n        return {\r\n          color: \"white\",\r\n          weight: 1,\r\n          opacity: 1,\r\n          fillColor: 'none',\r\n          // dashArray: '8 5'\r\n        }\r\n      }\r\n\r\n      \r\n    onLatChange = (e) => {\r\n      this.fetchData(this.state.url + this.state.province);\r\n      this.setState({\r\n        province: e.target.value,\r\n      })\r\n      console.log('go to fech');\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n          // <div>\r\n          //   <div style={{textAlign:'right'}}>\r\n          //       <span >\r\n          //         <select onChange={(e) => this.onLatChange(e)}>\r\n          //           <option value='all' defaultValue>All Province</option>\r\n          //           {this.state.all_P.map((p) => {\r\n          //             return (<option value={p}>{p}</option>) \r\n          //           })}\r\n          //         </select>\r\n          //       </span>\r\n          //   </div>\r\n\r\n            <MapContainer center={this.state.center} zoom={this.state.zoom} scrollWheelZoom={true} style={{height:'95vh'}}>\r\n                <TileLayer\r\n                    url='https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU'\r\n                    attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n                    maxZoom= {20}\r\n                /> \r\n                {/* this.state.data */}\r\n                {console.log('render!!')}\r\n                <GeoJSON key={this.properties.gridid}  data={this.state.data} style={this.myStyle}>\r\n                    {console.log(this.state.data)}\r\n                    {console.log(this.state.province)}\r\n                    {/* <Popup> {getGridNC().properties.index} </Popup> */}\r\n                </GeoJSON>\r\n                \r\n                \r\n            </MapContainer>\r\n\r\n          // </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapGeoJson;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,CAA1B,QAAkC,OAAlC;AACA,SAAQC,OAAR,EAAiBC,YAAjB,EAA+BC,SAA/B,EAA0CC,KAA1C,QAAsD,eAAtD;AACA,OAAO,0BAAP,C,CACA;;;;IAEMC,U;;;;;;;;;;;;;;;UACEC,K,GAAQ;MACIC,IAAI,EAAC,EADT;MAEIC,MAAM,EAAC,CAAC,UAAD,EAAY,WAAZ,CAFX;MAGIC,IAAI,EAAC,CAHT;MAII;MACAC,GAAG,EAAE,gCALT,CAMI;MACA;;IAPJ,C;;UAmCZC,O,GAAU,YAAM;MACZ,OAAO;QACLC,KAAK,EAAE,OADF;QAELC,MAAM,EAAE,CAFH;QAGLC,OAAO,EAAE,CAHJ;QAILC,SAAS,EAAE,MAJN,CAKL;;MALK,CAAP;IAOD,C;;UAGHC,W,GAAc,UAACC,CAAD,EAAO;MACnB,MAAKC,SAAL,CAAe,MAAKZ,KAAL,CAAWI,GAAX,GAAiB,MAAKJ,KAAL,CAAWa,QAA3C;;MACA,MAAKC,QAAL,CAAc;QACZD,QAAQ,EAAEF,CAAC,CAACI,MAAF,CAASC;MADP,CAAd;;MAGAC,OAAO,CAACC,GAAR,CAAY,YAAZ;IACD,C;;;;;;;WA1CD,6BAAoB;MAChB,KAAKN,SAAL,CAAe,KAAKZ,KAAL,CAAWI,GAA1B;MAEAa,OAAO,CAACC,GAAR,CAAY,WAAZ;IACH;;;WAED,mBAAUd,GAAV,EAAe;MAAA;;MACb,IAAMe,UAAU,GAAE;QAChBC,MAAM,EAAC,KADS;QAEhBC,OAAO,EAAC;UAAC,kBAAkB;QAAnB;MAFQ,CAAlB;MAIE,IAAIC,OAAO,GAAGC,KAAK,CAACnB,GAAD,EAAMe,UAAN,CAAnB;MACAF,OAAO,CAACC,GAAR,CAAY,SAAZ,EANW,CAOX;;MACAI,OAAO,CACJE,IADH,CACQ,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,IAAF,EAAJ;MAAA,CADT,EAEGF,IAFH,CAEQ,UAAAvB,IAAI,EAAI;QACZ,MAAI,CAACa,QAAL,CAAc;UACZb,IAAI,EAAEA,IAAI,CAAC0B;QADC,CAAd;MAGD,CANH,EAMK,UAACC,KAAD,EAAW;QACZX,OAAO,CAACW,KAAR,CAAcA,KAAd;MACD,CARH;IASH;;;WAqBD,kBAAS;MACL;QAAA;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEE,QAAC,YAAD;UAAc,MAAM,EAAE,KAAK5B,KAAL,CAAWE,MAAjC;UAAyC,IAAI,EAAE,KAAKF,KAAL,CAAWG,IAA1D;UAAgE,eAAe,EAAE,IAAjF;UAAuF,KAAK,EAAE;YAAC0B,MAAM,EAAC;UAAR,CAA9F;UAAA,wBACI,QAAC,SAAD;YACI,GAAG,EAAC,+EADR;YAEI,WAAW,EAAC,+LAFhB;YAGI,OAAO,EAAG;UAHd;YAAA;YAAA;YAAA;UAAA,QADJ,EAOKZ,OAAO,CAACC,GAAR,CAAY,UAAZ,CAPL,eAQI,QAAC,OAAD;YAAuC,IAAI,EAAE,KAAKlB,KAAL,CAAWC,IAAxD;YAA8D,KAAK,EAAE,KAAKI,OAA1E;YAAA,WACKY,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,IAAvB,CADL,EAEKgB,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWa,QAAvB,CAFL;UAAA,GAAc,KAAKiB,UAAL,CAAgBC,MAA9B;YAAA;YAAA;YAAA;UAAA,QARJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAbJ,CA8BE;;MA9BF;IAgCH;;;;EAxFoBtC,S;;AA2FzB,eAAeM,UAAf"},"metadata":{},"sourceType":"module"}