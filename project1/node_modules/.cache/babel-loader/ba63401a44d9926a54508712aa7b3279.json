{"ast":null,"code":"import polygonClipping from \"polygon-clipping\";\nimport { getGeom } from \"@turf/invariant\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\n\nfunction union(poly1, poly2, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var geom1 = getGeom(poly1);\n  var geom2 = getGeom(poly2);\n  var unioned = polygonClipping.union(geom1.coordinates, geom2.coordinates);\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return polygon(unioned[0], options.properties);else return multiPolygon(unioned, options.properties);\n}\n\nexport default union;","map":{"version":3,"names":["polygonClipping","getGeom","multiPolygon","polygon","union","poly1","poly2","options","geom1","geom2","unioned","coordinates","length","properties"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/union/dist/es/index.js"],"sourcesContent":["import polygonClipping from \"polygon-clipping\";\r\nimport { getGeom } from \"@turf/invariant\";\r\nimport { multiPolygon, polygon } from \"@turf/helpers\";\r\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\r\nfunction union(poly1, poly2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var geom1 = getGeom(poly1);\r\n    var geom2 = getGeom(poly2);\r\n    var unioned = polygonClipping.union(geom1.coordinates, geom2.coordinates);\r\n    if (unioned.length === 0)\r\n        return null;\r\n    if (unioned.length === 1)\r\n        return polygon(unioned[0], options.properties);\r\n    else\r\n        return multiPolygon(unioned, options.properties);\r\n}\r\nexport default union;\r\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,eAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;EAClC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,KAAK,GAAGP,OAAO,CAACI,KAAD,CAAnB;EACA,IAAII,KAAK,GAAGR,OAAO,CAACK,KAAD,CAAnB;EACA,IAAII,OAAO,GAAGV,eAAe,CAACI,KAAhB,CAAsBI,KAAK,CAACG,WAA5B,EAAyCF,KAAK,CAACE,WAA/C,CAAd;EACA,IAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EACI,OAAO,IAAP;EACJ,IAAIF,OAAO,CAACE,MAAR,KAAmB,CAAvB,EACI,OAAOT,OAAO,CAACO,OAAO,CAAC,CAAD,CAAR,EAAaH,OAAO,CAACM,UAArB,CAAd,CADJ,KAGI,OAAOX,YAAY,CAACQ,OAAD,EAAUH,OAAO,CAACM,UAAlB,CAAnB;AACP;;AACD,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}