{"ast":null,"code":"export default function (size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = index + 1 & mask];\n    }\n\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet,\n    // set if unset\n    get: get,\n    keys: keys\n  };\n}","map":{"version":3,"names":["size","hash","equal","keyType","keyEmpty","valueType","arguments","length","Array","keystore","Math","max","ceil","log","LN2","valstore","mask","i","set","key","value","index","matchKey","collisions","Error","maybeSet","get","missingValue","keys","n","push"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/topojson-server/src/hash/hashmap.js"],"sourcesContent":["export default function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}