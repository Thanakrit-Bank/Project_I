{"ast":null,"code":"import bbox from \"@turf/bbox\";\nimport { point } from \"@turf/helpers\";\n/**\r\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\r\n *\r\n * @name center\r\n * @param {GeoJSON} geojson GeoJSON to be centered\r\n * @param {Object} [options={}] Optional parameters\r\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\r\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\r\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\r\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\r\n * @example\r\n * var features = turf.points([\r\n *   [-97.522259, 35.4691],\r\n *   [-97.502754, 35.463455],\r\n *   [-97.508269, 35.463245]\r\n * ]);\r\n *\r\n * var center = turf.center(features);\r\n *\r\n * //addToMap\r\n * var addToMap = [features, center]\r\n * center.properties['marker-size'] = 'large';\r\n * center.properties['marker-color'] = '#000';\r\n */\n\nfunction center(geojson, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ext = bbox(geojson);\n  var x = (ext[0] + ext[2]) / 2;\n  var y = (ext[1] + ext[3]) / 2;\n  return point([x, y], options.properties, options);\n}\n\nexport default center;","map":{"version":3,"names":["bbox","point","center","geojson","options","ext","x","y","properties"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/center/dist/es/index.js"],"sourcesContent":["import bbox from \"@turf/bbox\";\r\nimport { point, } from \"@turf/helpers\";\r\n/**\r\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\r\n *\r\n * @name center\r\n * @param {GeoJSON} geojson GeoJSON to be centered\r\n * @param {Object} [options={}] Optional parameters\r\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\r\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\r\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\r\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\r\n * @example\r\n * var features = turf.points([\r\n *   [-97.522259, 35.4691],\r\n *   [-97.502754, 35.463455],\r\n *   [-97.508269, 35.463245]\r\n * ]);\r\n *\r\n * var center = turf.center(features);\r\n *\r\n * //addToMap\r\n * var addToMap = [features, center]\r\n * center.properties['marker-size'] = 'large';\r\n * center.properties['marker-color'] = '#000';\r\n */\r\nfunction center(geojson, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var ext = bbox(geojson);\r\n    var x = (ext[0] + ext[2]) / 2;\r\n    var y = (ext[1] + ext[3]) / 2;\r\n    return point([x, y], options.properties, options);\r\n}\r\nexport default center;\r\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,KAAT,QAAuB,eAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,GAAG,GAAGL,IAAI,CAACG,OAAD,CAAd;EACA,IAAIG,CAAC,GAAG,CAACD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB,CAA5B;EACA,IAAIE,CAAC,GAAG,CAACF,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB,CAA5B;EACA,OAAOJ,KAAK,CAAC,CAACK,CAAD,EAAIC,CAAJ,CAAD,EAASH,OAAO,CAACI,UAAjB,EAA6BJ,OAA7B,CAAZ;AACH;;AACD,eAAeF,MAAf"},"metadata":{},"sourceType":"module"}