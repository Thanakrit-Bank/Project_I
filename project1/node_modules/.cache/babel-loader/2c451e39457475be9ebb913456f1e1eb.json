{"ast":null,"code":"import { coordEach } from \"@turf/meta\";\n/**\r\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\r\n *\r\n * @name bbox\r\n * @param {GeoJSON} geojson any GeoJSON object\r\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\r\n * @example\r\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\r\n * var bbox = turf.bbox(line);\r\n * var bboxPolygon = turf.bboxPolygon(bbox);\r\n *\r\n * //addToMap\r\n * var addToMap = [line, bboxPolygon]\r\n */\n\nfunction bbox(geojson) {\n  var result = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, function (coord) {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\n\nbbox[\"default\"] = bbox;\nexport default bbox;","map":{"version":3,"names":["coordEach","bbox","geojson","result","Infinity","coord"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/bbox/dist/es/index.js"],"sourcesContent":["import { coordEach } from \"@turf/meta\";\r\n/**\r\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\r\n *\r\n * @name bbox\r\n * @param {GeoJSON} geojson any GeoJSON object\r\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\r\n * @example\r\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\r\n * var bbox = turf.bbox(line);\r\n * var bboxPolygon = turf.bboxPolygon(bbox);\r\n *\r\n * //addToMap\r\n * var addToMap = [line, bboxPolygon]\r\n */\r\nfunction bbox(geojson) {\r\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\r\n    coordEach(geojson, function (coord) {\r\n        if (result[0] > coord[0]) {\r\n            result[0] = coord[0];\r\n        }\r\n        if (result[1] > coord[1]) {\r\n            result[1] = coord[1];\r\n        }\r\n        if (result[2] < coord[0]) {\r\n            result[2] = coord[0];\r\n        }\r\n        if (result[3] < coord[1]) {\r\n            result[3] = coord[1];\r\n        }\r\n    });\r\n    return result;\r\n}\r\nbbox[\"default\"] = bbox;\r\nexport default bbox;\r\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,OAAd,EAAuB;EACnB,IAAIC,MAAM,GAAG,CAACC,QAAD,EAAWA,QAAX,EAAqB,CAACA,QAAtB,EAAgC,CAACA,QAAjC,CAAb;EACAJ,SAAS,CAACE,OAAD,EAAU,UAAUG,KAAV,EAAiB;IAChC,IAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;IACH;EACJ,CAbQ,CAAT;EAcA,OAAOF,MAAP;AACH;;AACDF,IAAI,CAAC,SAAD,CAAJ,GAAkBA,IAAlB;AACA,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}