{"ast":null,"code":"import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","map":{"version":3,"names":["atan","cos","sin","azimuthalInvert","projection","gnomonicRaw","x","y","cy","k","invert","scale","clipAngle"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/d3-geo/src/projection/gnomonic.js"],"sourcesContent":["import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,QAA6B,SAA7B;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,OAAOC,UAAP,MAAuB,SAAvB;AAEA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;EAChC,IAAIC,EAAE,GAAGP,GAAG,CAACM,CAAD,CAAZ;EAAA,IAAiBE,CAAC,GAAGR,GAAG,CAACK,CAAD,CAAH,GAASE,EAA9B;EACA,OAAO,CAACA,EAAE,GAAGN,GAAG,CAACI,CAAD,CAAR,GAAcG,CAAf,EAAkBP,GAAG,CAACK,CAAD,CAAH,GAASE,CAA3B,CAAP;AACD;AAEDJ,WAAW,CAACK,MAAZ,GAAqBP,eAAe,CAACH,IAAD,CAApC;AAEA,eAAe,YAAW;EACxB,OAAOI,UAAU,CAACC,WAAD,CAAV,CACFM,KADE,CACI,OADJ,EAEFC,SAFE,CAEQ,EAFR,CAAP;AAGD"},"metadata":{},"sourceType":"module"}