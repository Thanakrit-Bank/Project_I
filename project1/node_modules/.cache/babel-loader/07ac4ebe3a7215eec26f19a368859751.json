{"ast":null,"code":"import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { isObject, multiPolygon, featureCollection, polygon } from '@turf/helpers';\nimport objectAssign from 'object-assign';\nimport { featureEach } from '@turf/meta';\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\n\nfunction gridToMatrix(grid, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags; // validation\n\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n  var matrix = []; // create property matrix from sorted points\n  // looping order matters here\n\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c]; // Check if zProperty exist\n\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);else row.push(0); // add flags\n\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n\n    matrix.push(row);\n  }\n\n  return matrix;\n}\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\n\n\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {}; // divide points by rows with the same latitude\n\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  }); // sort points (with the same latitude) by longitude\n\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  }); // sort rows (of points with the same latitude) by latitude\n\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n  return pointMatrix;\n}\n/*!\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n *\n * MarchingSquaresJS is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * MarchingSquaresJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * As additional permission under GNU Affero General Public License version 3\n * section 7, third-party projects (personal or commercial) may distribute,\n * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the\n * requirement that said third-party project for that reason alone becomes\n * subject to any requirement of the GNU Affero General Public License version 3.\n * Any modifications to MarchingSquaresJS, however, must be shared with the public\n * and made available.\n *\n * In summary this:\n * - allows you to use MarchingSquaresJS at no cost\n * - allows you to use MarchingSquaresJS for both personal and commercial purposes\n * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any\n *   license as long as this license notice is included\n * - enables you to keep the source code of your program that uses MarchingSquaresJS\n *   undisclosed\n * - forces you to share any modifications you have made to MarchingSquaresJS,\n *   e.g. bug-fixes\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nvar defaultSettings = {\n  successCallback: null,\n  verbose: false,\n  polygons: false\n};\nvar settings = {};\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\n\nfunction isoBands(data, minV, bandwidth, options) {\n  /* process options */\n  options = options ? options : {};\n  var optionKeys = Object.keys(defaultSettings);\n\n  for (var i = 0; i < optionKeys.length; i++) {\n    var key = optionKeys[i];\n    var val = options[key];\n    val = typeof val !== \"undefined\" && val !== null ? val : defaultSettings[key];\n    settings[key] = val;\n  }\n\n  if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: computing isobands for [\" + minV + \":\" + (minV + bandwidth) + \"]\");\n  var grid = computeBandGrid(data, minV, bandwidth);\n  var ret;\n\n  if (settings.polygons) {\n    if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\");\n    ret = BandGrid2Areas(grid);\n  } else {\n    if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\");\n    ret = BandGrid2AreaPaths(grid);\n  }\n\n  if (typeof settings.successCallback === \"function\") settings.successCallback(ret);\n  return ret;\n}\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\n\n\nvar Node0 = 64,\n    Node1 = 16,\n    Node2 = 4,\n    Node3 = 1;\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n/* triangle cases */\n\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n/* single trapezoid cases */\n\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n/* single rectangle cases */\n\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n/* single hexagon cases */\n\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n/* single pentagon cases */\n\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n/* 8-sided cases */\n\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n/* 6-sided cases */\n\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n/* 7-sided cases */\n\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\n\nvar p00 = function p00(cell) {\n  return [[cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\n\nvar p01 = function p01(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0]];\n};\n\nvar p02 = function p02(cell) {\n  return [[cell.topright, 1], [1, 1], [1, cell.righttop]];\n};\n\nvar p03 = function p03(cell) {\n  return [[0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* trapezoid cases */\n\n\nvar p04 = function p04(cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n\nvar p05 = function p05(cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [1, cell.righttop], [1, cell.rightbottom]];\n};\n\nvar p06 = function p06(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n\nvar p07 = function p07(cell) {\n  return [[0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* rectangle cases */\n\n\nvar p08 = function p08(cell) {\n  return [[0, 0], [0, cell.leftbottom], [1, cell.rightbottom], [1, 0]];\n};\n\nvar p09 = function p09(cell) {\n  return [[1, 0], [cell.bottomright, 0], [cell.topright, 1], [1, 1]];\n};\n\nvar p10 = function p10(cell) {\n  return [[1, 1], [1, cell.righttop], [0, cell.lefttop], [0, 1]];\n};\n\nvar p11 = function p11(cell) {\n  return [[cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n\nvar p12 = function p12(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n\nvar p13 = function p13(cell) {\n  return [[cell.topleft, 1], [cell.topright, 1], [cell.bottomright, 0], [cell.bottomleft, 0]];\n};\n/* square case */\n\n\nvar p14 = function p14() {\n  return [[0, 0], [0, 1], [1, 1], [1, 0]];\n};\n/* pentagon cases */\n\n\nvar p15 = function p15(cell) {\n  return [[1, cell.rightbottom], [1, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1211 || 1011 */\n\n\nvar p16 = function p16(cell) {\n  return [[cell.topright, 1], [1, 1], [1, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 2111 || 0111 */\n\n\nvar p17 = function p17(cell) {\n  return [[1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [1, 1]];\n};\n/* 1112 || 1110 */\n\n\nvar p18 = function p18(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, 1]];\n};\n/* 1121 || 1101 */\n\n\nvar p19 = function p19(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1200 || 1022 */\n\n\nvar p20 = function p20(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [cell.topright, 1]];\n};\n/* 0120 || 2102 */\n\n\nvar p21 = function p21(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n/* 0012 || 2210 */\n\n\nvar p22 = function p22(cell) {\n  return [[cell.topright, 1], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1]];\n};\n/* 2001 || 0221 */\n\n\nvar p23 = function p23(cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1002 || 1220 */\n\n\nvar p24 = function p24(cell) {\n  return [[1, 1], [1, cell.righttop], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2100 || 0122 */\n\n\nvar p25 = function p25(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0210 || 2012 */\n\n\nvar p26 = function p26(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 0021 || 2201 */\n\n/*hexagon cases */\n\n\nvar p27 = function p27(cell) {\n  return [[1, cell.rightbottom], [1, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0211 || 2011 */\n\n\nvar p28 = function p28(cell) {\n  return [[1, 1], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2110 || 0112 */\n\n\nvar p29 = function p29(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1]];\n};\n/* 1102 || 1120 */\n\n\nvar p30 = function p30(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1021 || 1201 */\n\n\nvar p31 = function p31(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 2101 || 0121 */\n\n\nvar p32 = function p32(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1012 || 1210 */\n\n/* 8-sided cases */\n\n\nvar p33 = function p33(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* flipped == 1 state for 0202 and 2020 */\n\n/* 6-sided cases */\n\n\nvar p34 = function p34(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\n\n\nvar p35 = function p35(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\n\n\nvar p36 = function p36(cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\n\n\nvar p37 = function p37(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\n\n\nvar p38 = function p38(cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\n\n\nvar p39 = function p39(cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n/* triangle cases */\n\nisoBandEdgeBL[1] = isoBandEdgeLB[1] = 18;\nisoBandEdgeBL[169] = isoBandEdgeLB[169] = 18;\nisoBandEdgeBR[4] = isoBandEdgeRB[4] = 12;\nisoBandEdgeBR[166] = isoBandEdgeRB[166] = 12;\nisoBandEdgeRT[16] = isoBandEdgeTR[16] = 4;\nisoBandEdgeRT[154] = isoBandEdgeTR[154] = 4;\nisoBandEdgeLT[64] = isoBandEdgeTL[64] = 22;\nisoBandEdgeLT[106] = isoBandEdgeTL[106] = 22;\n/* trapezoid cases */\n\nisoBandEdgeBR[2] = isoBandEdgeLT[2] = 17;\nisoBandEdgeBL[2] = isoBandEdgeLB[2] = 18;\nisoBandEdgeBR[168] = isoBandEdgeLT[168] = 17;\nisoBandEdgeBL[168] = isoBandEdgeLB[168] = 18;\nisoBandEdgeRT[8] = isoBandEdgeBL[8] = 9;\nisoBandEdgeRB[8] = isoBandEdgeBR[8] = 12;\nisoBandEdgeRT[162] = isoBandEdgeBL[162] = 9;\nisoBandEdgeRB[162] = isoBandEdgeBR[162] = 12;\nisoBandEdgeRT[32] = isoBandEdgeTR[32] = 4;\nisoBandEdgeRB[32] = isoBandEdgeTL[32] = 1;\nisoBandEdgeRT[138] = isoBandEdgeTR[138] = 4;\nisoBandEdgeRB[138] = isoBandEdgeTL[138] = 1;\nisoBandEdgeLB[128] = isoBandEdgeTR[128] = 21;\nisoBandEdgeLT[128] = isoBandEdgeTL[128] = 22;\nisoBandEdgeLB[42] = isoBandEdgeTR[42] = 21;\nisoBandEdgeLT[42] = isoBandEdgeTL[42] = 22;\n/* rectangle cases */\n\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n/* pentagon cases */\n\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n/* hexagon cases */\n\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n/* 8-sided cases */\n\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n/* 6-sided cases */\n\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n/* 7-sided cases */\n\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n/* triangle cases */\n\npolygon_table[1] = polygon_table[169] = p00;\n/* 2221 || 0001 */\n\npolygon_table[4] = polygon_table[166] = p01;\n/* 2212 || 0010 */\n\npolygon_table[16] = polygon_table[154] = p02;\n/* 2122 || 0100 */\n\npolygon_table[64] = polygon_table[106] = p03;\n/* 1222 || 1000 */\n\n/* trapezoid cases */\n\npolygon_table[168] = polygon_table[2] = p04;\n/* 2220 || 0002 */\n\npolygon_table[162] = polygon_table[8] = p05;\n/* 2202 || 0020 */\n\npolygon_table[138] = polygon_table[32] = p06;\n/* 2022 || 0200 */\n\npolygon_table[42] = polygon_table[128] = p07;\n/* 0222 || 2000 */\n\n/* rectangle cases */\n\npolygon_table[5] = polygon_table[165] = p08;\n/* 0011 || 2211 */\n\npolygon_table[20] = polygon_table[150] = p09;\n/* 0110 || 2112 */\n\npolygon_table[80] = polygon_table[90] = p10;\n/* 1100 || 1122 */\n\npolygon_table[65] = polygon_table[105] = p11;\n/* 1001 || 1221 */\n\npolygon_table[160] = polygon_table[10] = p12;\n/* 2200 || 0022 */\n\npolygon_table[130] = polygon_table[40] = p13;\n/* 2002 || 0220 */\n\n/* square case */\n\npolygon_table[85] = p14;\n/* 1111 */\n\n/* pentagon cases */\n\npolygon_table[101] = polygon_table[69] = p15;\n/* 1211 || 1011 */\n\npolygon_table[149] = polygon_table[21] = p16;\n/* 2111 || 0111 */\n\npolygon_table[86] = polygon_table[84] = p17;\n/* 1112 || 1110 */\n\npolygon_table[89] = polygon_table[81] = p18;\n/* 1121 || 1101 */\n\npolygon_table[96] = polygon_table[74] = p19;\n/* 1200 || 1022 */\n\npolygon_table[24] = polygon_table[146] = p20;\n/* 0120 || 2102 */\n\npolygon_table[6] = polygon_table[164] = p21;\n/* 0012 || 2210 */\n\npolygon_table[129] = polygon_table[41] = p22;\n/* 2001 || 0221 */\n\npolygon_table[66] = polygon_table[104] = p23;\n/* 1002 || 1220 */\n\npolygon_table[144] = polygon_table[26] = p24;\n/* 2100 || 0122 */\n\npolygon_table[36] = polygon_table[134] = p25;\n/* 0210 || 2012 */\n\npolygon_table[9] = polygon_table[161] = p26;\n/* 0021 || 2201 */\n\n/* hexagon cases */\n\npolygon_table[37] = polygon_table[133] = p27;\n/* 0211 || 2011 */\n\npolygon_table[148] = polygon_table[22] = p28;\n/* 2110 || 0112 */\n\npolygon_table[82] = polygon_table[88] = p29;\n/* 1102 || 1120 */\n\npolygon_table[73] = polygon_table[97] = p30;\n/* 1021 || 1201 */\n\npolygon_table[145] = polygon_table[25] = p31;\n/* 2101 || 0121 */\n\npolygon_table[70] = polygon_table[100] = p32;\n/* 1012 || 1210 */\n\n/* 8-sided cases */\n\npolygon_table[34] = function (c) {\n  return [p07(c), p05(c)];\n};\n/* 0202 || 2020 with flipped == 0 */\n\n\npolygon_table[35] = p33;\n/* flipped == 1 state for 0202 and 2020 */\n\npolygon_table[136] = function (c) {\n  return [p06(c), p04(c)];\n};\n/* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\n\n\npolygon_table[153] = function (c) {\n  return [p02(c), p00(c)];\n};\n/* 0101 with flipped == 0 || 2121 with flipped == 2 */\n\n\npolygon_table[102] = function (c) {\n  return [p01(c), p03(c)];\n};\n/* 1010 with flipped == 0 || 1212 with flipped == 2 */\n\n\npolygon_table[155] = p34;\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\n\npolygon_table[103] = p35;\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\n\npolygon_table[152] = function (c) {\n  return [p02(c), p04(c)];\n};\n/* 2120 with flipped == 2 || 0102 with flipped == 0 */\n\n\npolygon_table[156] = p36;\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\n\npolygon_table[137] = function (c) {\n  return [p06(c), p00(c)];\n};\n/* 2021 with flipped == 2 || 0201 with flipped == 0 */\n\n\npolygon_table[139] = p37;\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\n\npolygon_table[98] = function (c) {\n  return [p05(c), p03(c)];\n};\n/* 1202 with flipped == 2 || 1020 with flipped == 0 */\n\n\npolygon_table[99] = p38;\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\n\npolygon_table[38] = function (c) {\n  return [p01(c), p07(c)];\n};\n/* 0212 with flipped == 2 || 2010 with flipped == 0 */\n\n\npolygon_table[39] = p39;\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\n\nfunction interpolateX(y, y0, y1) {\n  return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") > -1;\n}\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\n\nfunction computeBandGrid(data, minV, bandwidth) {\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n  var BandGrid = {\n    rows: rows,\n    cols: cols,\n    cells: []\n  };\n  var maxV = minV + Math.abs(bandwidth);\n\n  for (var j = 0; j < rows; ++j) {\n    BandGrid.cells[j] = [];\n\n    for (var i = 0; i < cols; ++i) {\n      /*  compose the 4-trit corner representation */\n      var cval = 0;\n      var tl = data[j + 1][i];\n      var tr = data[j + 1][i + 1];\n      var br = data[j][i + 1];\n      var bl = data[j][i];\n\n      if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n        continue;\n      }\n\n      cval |= tl < minV ? 0 : tl > maxV ? 128 : 64;\n      cval |= tr < minV ? 0 : tr > maxV ? 32 : 16;\n      cval |= br < minV ? 0 : br > maxV ? 8 : 4;\n      cval |= bl < minV ? 0 : bl > maxV ? 2 : 1;\n      var cval_real = +cval;\n      /* resolve ambiguity via averaging */\n\n      var flipped = 0;\n\n      if (cval === 17\n      /* 0101 */\n      || cval === 18\n      /* 0102 */\n      || cval === 33\n      /* 0201 */\n      || cval === 34\n      /* 0202 */\n      || cval === 38\n      /* 0212 */\n      || cval === 68\n      /* 1010 */\n      || cval === 72\n      /* 1020 */\n      || cval === 98\n      /* 1202 */\n      || cval === 102\n      /* 1212 */\n      || cval === 132\n      /* 2010 */\n      || cval === 136\n      /* 2020 */\n      || cval === 137\n      /* 2021 */\n      || cval === 152\n      /* 2120 */\n      || cval === 153\n      /* 2121 */\n      ) {\n        var average = (tl + tr + br + bl) / 4;\n        /* set flipped state */\n\n        flipped = average > maxV ? 2 : average < minV ? 0 : 1;\n        /* adjust cval for flipped cases */\n\n        /* 8-sided cases */\n\n        if (cval === 34) {\n          if (flipped === 1) {\n            cval = 35;\n          } else if (flipped === 0) {\n            cval = 136;\n          }\n        } else if (cval === 136) {\n          if (flipped === 1) {\n            cval = 35;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 34;\n          }\n        } else if (cval === 17) {\n          /* 6-sided polygon cases */\n          if (flipped === 1) {\n            cval = 155;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 153;\n          }\n        } else if (cval === 68) {\n          if (flipped === 1) {\n            cval = 103;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 102;\n          }\n        } else if (cval === 153) {\n          if (flipped === 1) cval = 155;\n        } else if (cval === 102) {\n          if (flipped === 1) cval = 103;\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          if (flipped < 2) {\n            cval = 156;\n            flipped = 1;\n          }\n        } else if (cval === 137) {\n          if (flipped < 2) {\n            cval = 139;\n            flipped = 1;\n          }\n        } else if (cval === 98) {\n          if (flipped < 2) {\n            cval = 99;\n            flipped = 1;\n          }\n        } else if (cval === 38) {\n          if (flipped < 2) {\n            cval = 39;\n            flipped = 1;\n          }\n        } else if (cval === 18) {\n          if (flipped > 0) {\n            cval = 156;\n            flipped = 4;\n          } else {\n            cval = 152;\n          }\n        } else if (cval === 33) {\n          if (flipped > 0) {\n            cval = 139;\n            flipped = 4;\n          } else {\n            cval = 137;\n          }\n        } else if (cval === 72) {\n          if (flipped > 0) {\n            cval = 99;\n            flipped = 4;\n          } else {\n            cval = 98;\n          }\n        } else if (cval === 132) {\n          if (flipped > 0) {\n            cval = 39;\n            flipped = 4;\n          } else {\n            cval = 38;\n          }\n        }\n      }\n      /* add cell to BandGrid if it contains at least one polygon-side */\n\n\n      if (cval != 0 && cval != 170) {\n        var topleft, topright, bottomleft, bottomright, righttop, rightbottom, lefttop, leftbottom;\n        topleft = topright = bottomleft = bottomright = righttop = rightbottom = lefttop = leftbottom = 0.5;\n        var edges = [];\n        /* do interpolation here */\n\n        /* 1st Triangles */\n\n        if (cval === 1) {\n          /* 0001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 169) {\n          /* 2221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 4) {\n          /* 0010 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 166) {\n          /* 2212 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 16) {\n          /* 0100 */\n          righttop = interpolateX(minV, br, tr);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 154) {\n          /* 2122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 64) {\n          /* 1000 */\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 106) {\n          /* 1222 */\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 168) {\n          /* 2nd Trapezoids */\n\n          /* 2220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 2) {\n          /* 0002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 162) {\n          /* 2202 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 8) {\n          /* 0020 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 138) {\n          /* 2022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 32) {\n          /* 0200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 42) {\n          /* 0222 */\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 128) {\n          /* 2000 */\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        }\n        /* 3rd rectangle cases */\n\n\n        if (cval === 5) {\n          /* 0011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 165) {\n          /* 2211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 20) {\n          /* 0110 */\n          bottomright = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 150) {\n          /* 2112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 80) {\n          /* 1100 */\n          righttop = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 90) {\n          /* 1122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 65) {\n          /* 1001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 105) {\n          /* 1221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 160) {\n          /* 2200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 10) {\n          /* 0022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 130) {\n          /* 2002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 40) {\n          /* 0220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 101) {\n          /* 4th single pentagon cases */\n\n          /* 1211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 69) {\n          /* 1011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 149) {\n          /* 2111 */\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 21) {\n          /* 0111 */\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 86) {\n          /* 1112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 84) {\n          /* 1110 */\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 89) {\n          /* 1121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 81) {\n          /* 1101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 96) {\n          /* 1200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 74) {\n          /* 1022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 24) {\n          /* 0120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 146) {\n          /* 2102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 6) {\n          /* 0012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 164) {\n          /* 2210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 129) {\n          /* 2001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 41) {\n          /* 0221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 66) {\n          /* 1002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 104) {\n          /* 1220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeTL[cval]);\n        } else if (cval === 144) {\n          /* 2100 */\n          righttop = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 26) {\n          /* 0122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 36) {\n          /* 0210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 134) {\n          /* 2012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 9) {\n          /* 0021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 161) {\n          /* 2201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 37) {\n          /* 5th single hexagon cases */\n\n          /* 0211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 133) {\n          /* 2011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 148) {\n          /* 2110 */\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 22) {\n          /* 0112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 82) {\n          /* 1102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 88) {\n          /* 1120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 73) {\n          /* 1021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 97) {\n          /* 1201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 145) {\n          /* 2101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 25) {\n          /* 0121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 70) {\n          /* 1012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 100) {\n          /* 1210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 34) {\n          /* 8-sided cases */\n\n          /* 0202 || 2020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 35) {\n          /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 136) {\n          /* 2020 || 0202 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 153) {\n          /* 6-sided polygon cases */\n\n          /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 102) {\n          /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 155) {\n          /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 103) {\n          /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n\n          /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 156) {\n          /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 137) {\n          /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 139) {\n          /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 98) {\n          /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 99) {\n          /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 38) {\n          /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 39) {\n          /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 85) {\n          righttop = 1;\n          rightbottom = 0;\n          bottomright = 1;\n          bottomleft = 0;\n          leftbottom = 0;\n          lefttop = 1;\n          topleft = 0;\n          topright = 1;\n        }\n\n        if (topleft < 0 || topleft > 1 || topright < 0 || topright > 1 || righttop < 0 || righttop > 1 || bottomright < 0 || bottomright > 1 || leftbottom < 0 || leftbottom > 1 || lefttop < 0 || lefttop > 1) {\n          console.log(\"MarchingSquaresJS-isoBands: \" + cval + \" \" + cval_real + \" \" + tl + \",\" + tr + \",\" + br + \",\" + bl + \" \" + flipped + \" \" + topleft + \" \" + topright + \" \" + righttop + \" \" + rightbottom + \" \" + bottomright + \" \" + bottomleft + \" \" + leftbottom + \" \" + lefttop);\n        }\n\n        BandGrid.cells[j][i] = {\n          cval: cval,\n          cval_real: cval_real,\n          flipped: flipped,\n          topleft: topleft,\n          topright: topright,\n          righttop: righttop,\n          rightbottom: rightbottom,\n          bottomright: bottomright,\n          bottomleft: bottomleft,\n          leftbottom: leftbottom,\n          lefttop: lefttop,\n          edges: edges\n        };\n      }\n    }\n  }\n\n  return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n  var areas = [];\n  var rows = grid.rows;\n  var cols = grid.cols;\n  var currentPolygon = [];\n\n  for (var j = 0; j < rows; j++) {\n    for (var i = 0; i < cols; i++) {\n      if (typeof grid.cells[j][i] !== \"undefined\" && grid.cells[j][i].edges.length > 0) {\n        /* trace back polygon path starting from this cell */\n        var cell = grid.cells[j][i];\n        /* get start coordinates */\n\n        var prev = getStartXY(cell),\n            next = null,\n            p = i,\n            q = j;\n\n        if (prev !== null) {\n          currentPolygon.push([prev.p[0] + p, prev.p[1] + q]); //console.log(cell);\n          //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n        }\n\n        do {\n          //console.log(p + \",\" + q);\n          //console.log(grid.cells[q][p]);\n          //console.log(grid.cells[q][p].edges);\n          //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n          next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n\n          if (next !== null) {\n            //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n            currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n            p += next.x;\n            q += next.y;\n            prev = next;\n          } else {\n            //console.log(\"getExitXY() returned null!\");\n            break;\n          } //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n\n          /* special case, where we've reached the grid boundaries */\n\n\n          if (q < 0 || q >= rows || p < 0 || p >= cols || typeof grid.cells[q][p] === \"undefined\") {\n            /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n            /* set back coordinates of current cell */\n            p -= next.x;\n            q -= next.y; //console.log(\"reached boundary at \" + p + \" \" + q);\n\n            var missing = traceOutOfGridPath(grid, p, q, next.x, next.y, next.o);\n\n            if (missing !== null) {\n              missing.path.forEach(function (pp) {\n                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                currentPolygon.push(pp);\n              });\n              p = missing.i;\n              q = missing.j;\n              prev = missing;\n            } else {\n              break;\n            } //console.log(grid.cells[q][p]);\n\n          }\n        } while (typeof grid.cells[q][p] !== \"undefined\" && grid.cells[q][p].edges.length > 0);\n\n        areas.push(currentPolygon); //console.log(\"next polygon\");\n        //console.log(currentPolygon);\n\n        currentPolygon = [];\n        if (grid.cells[j][i].edges.length > 0) i--;\n      }\n    }\n  }\n\n  return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n  var cell = grid.cells[j][i];\n  var cval = cell.cval_real;\n  var p = i + d_x,\n      q = j + d_y;\n  var path = [];\n  var closed = false;\n\n  while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    if (typeof grid.cells[q] === \"undefined\" || typeof grid.cells[q][p] === \"undefined\") {\n      //console.log(\"which is undefined\");\n\n      /* we can't move on, so we have to change direction to proceed further */\n\n      /* go back to previous cell */\n      q -= d_y;\n      p -= d_x;\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n      /* check where we've left defined cells of the grid... */\n\n      if (d_y === -1) {\n        /* we came from top */\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node3) {\n            /* lower left node is within range, so we move left */\n            path.push([p, q]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node2) {\n            /* lower right node is within range, so we move right */\n            path.push([p + 1, q]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n          } else {\n            /* close the path */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node3) {\n          path.push([p, q]);\n          d_x = -1;\n          d_y = 0;\n          d_o = 0;\n        } else if (cval & Node2) {\n          path.push([p + cell.bottomright, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 1;\n          closed = true;\n          break;\n        } else {\n          path.push([p + cell.bottomleft, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 0;\n          closed = true;\n          break;\n        }\n      } else if (d_y === 1) {\n        /* we came from bottom */\n        //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node1) {\n            /* top right node is within range, so we move right */\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (!(cval & Node0)) {\n            /* found entry within same cell */\n            path.push([p + cell.topright, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n            closed = true; //console.log(\"found entry from bottom at \" + p + \",\" + q);\n\n            break;\n          } else {\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node1) {\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n        } else {\n          /* move right */\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1; //console.log(\"wtf\");\n          //break;\n        }\n      } else if (d_x === -1) {\n        /* we came from right */\n        //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          //console.log(\"continue at bottom\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0; //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else if (!(cval & Node3)) {\n            /* there has to be an entry into the regular grid again! */\n            //console.log(\"exiting top\");\n            path.push([p, q + cell.lefttop]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            break;\n          } else {\n            //console.log(\"exiting bottom\");\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          //console.log(\"continue at top\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0; //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else {\n            /* */\n            console.log(\"MarchingSquaresJS-isoBands: wtf\");\n            break;\n          }\n        }\n      } else if (d_x === 1) {\n        /* we came from left */\n        //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit bottom */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          /* exit top */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (!(cval & Node1)) {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          } else {\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            break;\n          }\n        }\n      } else {\n        /* we came from the same cell */\n        console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");\n        break;\n      }\n    } else {\n      /* try to find an entry into the regular grid again! */\n      cell = grid.cells[q][p];\n      cval = cell.cval_real; //console.log(\"which is defined\");\n\n      if (d_x === -1) {\n        if (d_o === 0) {\n          /* try to go downwards */\n          if (typeof grid.cells[q - 1] !== \"undefined\" && typeof grid.cells[q - 1][p] !== \"undefined\") {\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (cval & Node3) {\n            /* proceed searching in x-direction */\n            //console.log(\"proceeding in x-direction!\");\n            path.push([p, q]);\n          } else {\n            /* we must have found an entry into the regular grid */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true; //console.log(\"found entry from bottom at \" + p + \",\" + q);\n\n            break;\n          }\n        } else if (cval & Node0) {\n          /* proceed searchin in x-direction */\n          console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\");\n        } else {\n          /* we must have found an entry into the regular grid */\n          console.log(\"MarchingSquaresJS-isoBands: found entry from top at \" + p + \",\" + q);\n          break;\n        }\n      } else if (d_x === 1) {\n        if (d_o === 0) {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        } else {\n          /* try to go upwards */\n          if (typeof grid.cells[q + 1] !== \"undefined\" && typeof grid.cells[q + 1][p] !== \"undefined\") {\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else if (cval & Node1) {\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true; //console.log(\"found entry from bottom at \" + p + \",\" + q);\n\n            break;\n          }\n        }\n      } else if (d_y === -1) {\n        if (d_o === 1) {\n          /* try to go right */\n          if (typeof grid.cells[q][p + 1] !== \"undefined\") {\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            /* found entry into regular grid! */\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            closed = true; //console.log(\"found entry from top at \" + p + \",\" + q);\n\n            break;\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else if (d_y === 1) {\n        if (d_o === 0) {\n          //console.log(\"we came from bottom left and proceed to the left\");\n\n          /* try to go left */\n          if (typeof grid.cells[q][p - 1] !== \"undefined\") {\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true; //console.log(\"found entry from bottom at \" + p + \",\" + q);\n\n            break;\n          }\n        } else {\n          //console.log(\"we came from bottom right and proceed to the right\");\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else {\n        console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");\n        break;\n      }\n    }\n\n    p += d_x;\n    q += d_y; //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n    if (p === i && q === j) {\n      /* bail out, once we've closed a circle path */\n      break;\n    }\n  } //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n\n\n  return {\n    path: path,\n    i: p,\n    j: q,\n    x: d_x,\n    y: d_y,\n    o: d_o\n  };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n  delete cell.edges[edgeIdx];\n\n  for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n    cell.edges[k - 1] = cell.edges[k];\n  }\n\n  cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n  if (cell.edges.length > 0) {\n    var e = cell.edges[cell.edges.length - 1]; //console.log(\"starting with edge \" + e);\n\n    var cval = cell.cval_real;\n\n    switch (e) {\n      case 0:\n        if (cval & Node1) {\n          /* node 1 within range */\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          /* node 1 below or above threshold */\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        }\n\n      case 1:\n        if (cval & Node2) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 2:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        }\n\n      case 3:\n        if (cval & Node3) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n\n      case 4:\n        if (cval & Node1) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n\n      case 5:\n        if (cval & Node2) {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 6:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n\n      case 7:\n        if (cval & Node3) {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n\n      case 8:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 9:\n        if (cval & Node3) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n\n      case 10:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 11:\n        if (cval & Node0) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 12:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 13:\n        if (cval & Node3) {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n\n      case 14:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 15:\n        if (cval & Node0) {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 16:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 17:\n        if (cval & Node0) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 18:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n\n      case 19:\n        if (cval & Node0) {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 20:\n        if (cval & Node0) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        }\n\n      case 21:\n        if (cval & Node1) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n\n      case 22:\n        if (cval & Node0) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n\n      case 23:\n        if (cval & Node1) {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n\n      default:\n        console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n        console.log(cell);\n        break;\n    }\n  }\n\n  return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n  var e,\n      id_x,\n      d_x,\n      d_y,\n      cval = cell.cval;\n  var d_o;\n\n  switch (x) {\n    case -1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeRB[cval];\n          d_x = isoBandNextXRB[cval];\n          d_y = isoBandNextYRB[cval];\n          d_o = isoBandNextORB[cval];\n          break;\n\n        default:\n          e = isoBandEdgeRT[cval];\n          d_x = isoBandNextXRT[cval];\n          d_y = isoBandNextYRT[cval];\n          d_o = isoBandNextORT[cval];\n          break;\n      }\n\n      break;\n\n    case 1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeLB[cval];\n          d_x = isoBandNextXLB[cval];\n          d_y = isoBandNextYLB[cval];\n          d_o = isoBandNextOLB[cval];\n          break;\n\n        default:\n          e = isoBandEdgeLT[cval];\n          d_x = isoBandNextXLT[cval];\n          d_y = isoBandNextYLT[cval];\n          d_o = isoBandNextOLT[cval];\n          break;\n      }\n\n      break;\n\n    default:\n      switch (y) {\n        case -1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeTL[cval];\n              d_x = isoBandNextXTL[cval];\n              d_y = isoBandNextYTL[cval];\n              d_o = isoBandNextOTL[cval];\n              break;\n\n            default:\n              e = isoBandEdgeTR[cval];\n              d_x = isoBandNextXTR[cval];\n              d_y = isoBandNextYTR[cval];\n              d_o = isoBandNextOTR[cval];\n              break;\n          }\n\n          break;\n\n        case 1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeBL[cval];\n              d_x = isoBandNextXBL[cval];\n              d_y = isoBandNextYBL[cval];\n              d_o = isoBandNextOBL[cval];\n              break;\n\n            default:\n              e = isoBandEdgeBR[cval];\n              d_x = isoBandNextXBR[cval];\n              d_y = isoBandNextYBR[cval];\n              d_o = isoBandNextOBR[cval];\n              break;\n          }\n\n          break;\n      }\n\n      break;\n  }\n\n  id_x = cell.edges.indexOf(e);\n\n  if (typeof cell.edges[id_x] !== \"undefined\") {\n    deleteEdge(cell, id_x);\n  } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n    return null;\n  }\n\n  cval = cell.cval_real;\n\n  switch (e) {\n    case 0:\n      if (cval & Node1) {\n        /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n      } else {\n        /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n      }\n\n      break;\n\n    case 1:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n\n      break;\n\n    case 2:\n      if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 3:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n\n      break;\n\n    case 4:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n\n      break;\n\n    case 5:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n\n      break;\n\n    case 6:\n      if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 7:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n\n      break;\n\n    case 8:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 9:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n\n      break;\n\n    case 10:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n\n      break;\n\n    case 11:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n\n      break;\n\n    case 12:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 13:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n\n      break;\n\n    case 14:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n\n      break;\n\n    case 15:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n\n      break;\n\n    case 16:\n      if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 17:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n\n      break;\n\n    case 18:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n\n      break;\n\n    case 19:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomleft;\n        y = 0;\n      }\n\n      break;\n\n    case 20:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n\n      break;\n\n    case 21:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n\n      break;\n\n    case 22:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n\n      break;\n\n    case 23:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.lefttop;\n      }\n\n      break;\n\n    default:\n      console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n      console.log(cell);\n      return null;\n  }\n\n  if (typeof x === \"undefined\" || typeof y === \"undefined\" || typeof d_x === \"undefined\" || typeof d_y === \"undefined\" || typeof d_o === \"undefined\") {\n    console.log(\"MarchingSquaresJS-isoBands: undefined value!\");\n    console.log(cell);\n    console.log(x + \" \" + y + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  }\n\n  return {\n    p: [x, y],\n    x: d_x,\n    y: d_y,\n    o: d_o\n  };\n}\n\nfunction BandGrid2Areas(grid) {\n  var areas = [];\n  var area_idx = 0;\n  grid.cells.forEach(function (g, j) {\n    g.forEach(function (gg, i) {\n      if (typeof gg !== \"undefined\") {\n        var a = polygon_table[gg.cval](gg);\n\n        if (typeof a === \"object\" && isArray(a)) {\n          if (typeof a[0] === \"object\" && isArray(a[0])) {\n            if (typeof a[0][0] === \"object\" && isArray(a[0][0])) {\n              a.forEach(function (aa) {\n                aa.forEach(function (aaa) {\n                  aaa[0] += i;\n                  aaa[1] += j;\n                });\n                areas[area_idx++] = aa;\n              });\n            } else {\n              a.forEach(function (aa) {\n                aa[0] += i;\n                aa[1] += j;\n              });\n              areas[area_idx++] = a;\n            }\n          } else {\n            console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\");\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\");\n        }\n      }\n    });\n  });\n  return areas;\n}\n/**\n * Takes a square or rectangular grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points - must be square or rectangular\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\n\n\nfunction isobands(pointGrid, breaks, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var commonProperties = options.commonProperties || {};\n  var breaksProperties = options.breaksProperties || []; // Validation\n\n  collectionOf(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject(commonProperties)) throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties)) throw new Error(\"breaksProperties is not an Array\"); // Isoband methods\n\n  var matrix = gridToMatrix(pointGrid, {\n    zProperty: zProperty,\n    flip: true\n  });\n  var contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n  var multipolygons = contours.map(function (contour, index) {\n    if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    } // collect all properties\n\n\n    var contourProperties = objectAssign({}, commonProperties, breaksProperties[index]);\n    contourProperties[zProperty] = contour[zProperty];\n    var multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n  return featureCollection(multipolygons);\n}\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\n\n\nfunction createContourLines(matrix, breaks, property) {\n  var contours = [];\n\n  for (var i = 1; i < breaks.length; i++) {\n    var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n\n    var upperBand = +breaks[i];\n    var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand); // as per GeoJson rules for creating a Polygon, make sure the first element\n    // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n    // and any subsequent elements represent interior rings (i.e. smaller area);\n    // this avoids rendering issues of the MultiPolygons on the map\n\n    var nestedRings = orderByArea(isobandsCoords);\n    var groupedRings = groupNestedRings(nestedRings);\n    var obj = {};\n    obj[\"groupedRings\"] = groupedRings;\n    obj[property] = lowerBand + \"-\" + upperBand;\n    contours.push(obj);\n  }\n\n  return contours;\n}\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\n\n\nfunction rescaleContours(contours, matrix, points) {\n  // get dimensions (on the map) of the original grid\n  var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n\n  var originalWidth = gridBbox[2] - gridBbox[0];\n  var originalHeigth = gridBbox[3] - gridBbox[1]; // get origin, which is the first point of the last row on the rectangular data on the map\n\n  var x0 = gridBbox[0];\n  var y0 = gridBbox[1]; // get number of cells per side\n\n  var matrixWidth = matrix[0].length - 1;\n  var matrixHeight = matrix.length - 1; // calculate the scaling factor between matrix and rectangular grid on the map\n\n  var scaleX = originalWidth / matrixWidth;\n  var scaleY = originalHeigth / matrixHeight;\n\n  var resize = function resize(point) {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  }; // resize and shift each point/line of the isobands\n\n\n  contours.forEach(function (contour) {\n    contour.groupedRings.forEach(function (lineRingSet) {\n      lineRingSet.forEach(function (lineRing) {\n        lineRing.forEach(resize);\n      });\n    });\n  });\n  return contours;\n}\n/*  utility functions */\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\n\n\nfunction orderByArea(ringsCoords) {\n  var ringsWithArea = [];\n  var areas = [];\n  ringsCoords.forEach(function (coords) {\n    // var poly = polygon([points]);\n    var ringArea = area(polygon([coords])); // create an array of areas value\n\n    areas.push(ringArea); // associate each lineRing with its area\n\n    ringsWithArea.push({\n      ring: coords,\n      area: ringArea\n    });\n  });\n  areas.sort(function (a, b) {\n    // bigger --> smaller\n    return b - a;\n  }); // create a new array of linearRings coordinates ordered by their area\n\n  var orderedByArea = [];\n  areas.forEach(function (area) {\n    for (var lr = 0; lr < ringsWithArea.length; lr++) {\n      if (ringsWithArea[lr].area === area) {\n        orderedByArea.push(ringsWithArea[lr].ring);\n        ringsWithArea.splice(lr, 1);\n        break;\n      }\n    }\n  });\n  return orderedByArea;\n}\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\n\n\nfunction groupNestedRings(orderedLinearRings) {\n  // create a list of the (coordinates of) LinearRings\n  var lrList = orderedLinearRings.map(function (lr) {\n    return {\n      lrCoordinates: lr,\n      grouped: false\n    };\n  });\n  var groupedLinearRingsCoords = [];\n\n  while (!allGrouped(lrList)) {\n    for (var i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        // create new group starting with the larger not already grouped ring\n        var group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        var outerMostPoly = polygon([lrList[i].lrCoordinates]); // group all the rings contained by the outermost ring\n\n        for (var j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            var lrPoly = polygon([lrList[j].lrCoordinates]);\n\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        } // insert the new group\n\n\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n\n  return groupedLinearRingsCoords;\n}\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\n\n\nfunction isInside(testPolygon, targetPolygon) {\n  var points = explode(testPolygon);\n\n  for (var i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\n\n\nfunction allGrouped(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isobands;","map":{"version":3,"names":["bbox","area","booleanPointInPolygon","explode","collectionOf","getCoords","isObject","multiPolygon","featureCollection","polygon","objectAssign","featureEach","gridToMatrix","grid","options","Error","zProperty","flip","flags","pointsMatrix","sortPointsByLatLng","matrix","r","length","pointRow","row","c","point","properties","push","matrixPosition","points","pointsByLatitude","lat","orderedRowsByLatitude","Object","keys","map","rowOrderedByLongitude","sort","a","b","pointMatrix","defaultSettings","successCallback","verbose","polygons","settings","isoBands","data","minV","bandwidth","optionKeys","i","key","val","console","log","computeBandGrid","ret","BandGrid2Areas","BandGrid2AreaPaths","Node0","Node1","Node2","Node3","isoBandNextXTL","isoBandNextYTL","isoBandNextOTL","isoBandNextXTR","isoBandNextYTR","isoBandNextOTR","isoBandNextXRT","isoBandNextYRT","isoBandNextORT","isoBandNextXRB","isoBandNextYRB","isoBandNextORB","isoBandNextXBL","isoBandNextYBL","isoBandNextOBL","isoBandNextXBR","isoBandNextYBR","isoBandNextOBR","isoBandNextXLT","isoBandNextYLT","isoBandNextOLT","isoBandNextXLB","isoBandNextYLB","isoBandNextOLB","p00","cell","bottomleft","leftbottom","p01","rightbottom","bottomright","p02","topright","righttop","p03","lefttop","topleft","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","p21","p22","p23","p24","p25","p26","p27","p28","p29","p30","p31","p32","p33","p34","p35","p36","p37","p38","p39","isoBandEdgeRT","isoBandEdgeRB","isoBandEdgeBR","isoBandEdgeBL","isoBandEdgeLB","isoBandEdgeLT","isoBandEdgeTL","isoBandEdgeTR","polygon_table","interpolateX","y","y0","y1","isArray","myArray","constructor","toString","indexOf","rows","cols","BandGrid","cells","maxV","Math","abs","j","cval","tl","tr","br","bl","isNaN","cval_real","flipped","average","edges","areas","currentPolygon","prev","getStartXY","next","p","q","getExitXY","x","o","missing","traceOutOfGridPath","path","forEach","pp","d_x","d_y","d_o","closed","deleteEdge","edgeIdx","k","pop","e","id_x","area_idx","g","gg","aa","aaa","isobands","pointGrid","breaks","commonProperties","breaksProperties","Array","contours","createContourLines","rescaleContours","multipolygons","contour","index","contourProperties","multiP","groupedRings","property","lowerBand","upperBand","isobandsCoords","nestedRings","orderByArea","groupNestedRings","obj","gridBbox","originalWidth","originalHeigth","x0","matrixWidth","matrixHeight","scaleX","scaleY","resize","lineRingSet","lineRing","ringsCoords","ringsWithArea","coords","ringArea","ring","orderedByArea","lr","splice","orderedLinearRings","lrList","lrCoordinates","grouped","groupedLinearRingsCoords","allGrouped","group","outerMostPoly","lrPoly","isInside","testPolygon","targetPolygon","features","list"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/isobands/dist/es/index.js"],"sourcesContent":["import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { isObject, multiPolygon, featureCollection, polygon } from '@turf/helpers';\nimport objectAssign from 'object-assign';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n\n  // validation\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n  var matrix = [];\n  // create property matrix from sorted points\n  // looping order matters here\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      // Check if zProperty exist\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);\n      else row.push(0);\n      // add flags\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n\n  return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n\n  // divide points by rows with the same latitude\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n\n  // sort points (with the same latitude) by longitude\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n\n  // sort rows (of points with the same latitude) by latitude\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n    else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n\n  return pointMatrix;\n}\n\n/*!\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n *\n * MarchingSquaresJS is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * MarchingSquaresJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * As additional permission under GNU Affero General Public License version 3\n * section 7, third-party projects (personal or commercial) may distribute,\n * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the\n * requirement that said third-party project for that reason alone becomes\n * subject to any requirement of the GNU Affero General Public License version 3.\n * Any modifications to MarchingSquaresJS, however, must be shared with the public\n * and made available.\n *\n * In summary this:\n * - allows you to use MarchingSquaresJS at no cost\n * - allows you to use MarchingSquaresJS for both personal and commercial purposes\n * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any\n *   license as long as this license notice is included\n * - enables you to keep the source code of your program that uses MarchingSquaresJS\n *   undisclosed\n * - forces you to share any modifications you have made to MarchingSquaresJS,\n *   e.g. bug-fixes\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.\n */\nvar defaultSettings = {\n  successCallback: null,\n  verbose: false,\n  polygons: false,\n};\n\nvar settings = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n  /* process options */\n  options = options ? options : {};\n\n  var optionKeys = Object.keys(defaultSettings);\n\n  for (var i = 0; i < optionKeys.length; i++) {\n    var key = optionKeys[i];\n    var val = options[key];\n    val =\n      typeof val !== \"undefined\" && val !== null ? val : defaultSettings[key];\n\n    settings[key] = val;\n  }\n\n  if (settings.verbose)\n    console.log(\n      \"MarchingSquaresJS-isoBands: computing isobands for [\" +\n        minV +\n        \":\" +\n        (minV + bandwidth) +\n        \"]\"\n    );\n\n  var grid = computeBandGrid(data, minV, bandwidth);\n\n  var ret;\n  if (settings.polygons) {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\"\n      );\n    ret = BandGrid2Areas(grid);\n  } else {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\"\n      );\n    ret = BandGrid2AreaPaths(grid);\n  }\n\n  if (typeof settings.successCallback === \"function\")\n    settings.successCallback(ret);\n\n  return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64,\n  Node1 = 16,\n  Node2 = 4,\n  Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\n\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\n\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\n\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\n\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\n\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\n\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\n\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\n\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\n\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\n\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\n\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\n\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\n\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\n\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\n\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\n\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\n\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\n\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\n\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\n\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\n\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\n\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\n\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\n\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\n\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\n\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\n\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\n\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\n\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\n\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\n\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\n\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\n\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\n\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\n\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\n\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\n\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\n\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\n\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\n\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\n\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\n\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\n\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\n\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\n\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\n\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\n\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\n\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\nvar p01 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n  ];\n};\nvar p02 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, cell.righttop],\n  ];\n};\nvar p03 = function (cell) {\n  return [\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p05 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n  ];\n};\nvar p06 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\nvar p07 = function (cell) {\n  return [\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n  return [\n    [0, 0],\n    [0, cell.leftbottom],\n    [1, cell.rightbottom],\n    [1, 0],\n  ];\n};\nvar p09 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topright, 1],\n    [1, 1],\n  ];\n};\nvar p10 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\nvar p11 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\nvar p12 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p13 = function (cell) {\n  return [\n    [cell.topleft, 1],\n    [cell.topright, 1],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n  ];\n};\n/* square case */\nvar p14 = function () {\n  return [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n  ];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [1, 1],\n  ];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n  ];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [cell.topright, 1],\n  ];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n  ];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n  return [\n    [1, 1],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1] = isoBandEdgeLB[1] = 18;\nisoBandEdgeBL[169] = isoBandEdgeLB[169] = 18;\nisoBandEdgeBR[4] = isoBandEdgeRB[4] = 12;\nisoBandEdgeBR[166] = isoBandEdgeRB[166] = 12;\nisoBandEdgeRT[16] = isoBandEdgeTR[16] = 4;\nisoBandEdgeRT[154] = isoBandEdgeTR[154] = 4;\nisoBandEdgeLT[64] = isoBandEdgeTL[64] = 22;\nisoBandEdgeLT[106] = isoBandEdgeTL[106] = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2] = isoBandEdgeLT[2] = 17;\nisoBandEdgeBL[2] = isoBandEdgeLB[2] = 18;\nisoBandEdgeBR[168] = isoBandEdgeLT[168] = 17;\nisoBandEdgeBL[168] = isoBandEdgeLB[168] = 18;\nisoBandEdgeRT[8] = isoBandEdgeBL[8] = 9;\nisoBandEdgeRB[8] = isoBandEdgeBR[8] = 12;\nisoBandEdgeRT[162] = isoBandEdgeBL[162] = 9;\nisoBandEdgeRB[162] = isoBandEdgeBR[162] = 12;\nisoBandEdgeRT[32] = isoBandEdgeTR[32] = 4;\nisoBandEdgeRB[32] = isoBandEdgeTL[32] = 1;\nisoBandEdgeRT[138] = isoBandEdgeTR[138] = 4;\nisoBandEdgeRB[138] = isoBandEdgeTL[138] = 1;\nisoBandEdgeLB[128] = isoBandEdgeTR[128] = 21;\nisoBandEdgeLT[128] = isoBandEdgeTL[128] = 22;\nisoBandEdgeLB[42] = isoBandEdgeTR[42] = 21;\nisoBandEdgeLT[42] = isoBandEdgeTL[42] = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) {\n  return [p07(c), p05(c)];\n}; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) {\n  return [p06(c), p04(c)];\n}; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) {\n  return [p02(c), p00(c)];\n}; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) {\n  return [p01(c), p03(c)];\n}; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) {\n  return [p02(c), p04(c)];\n}; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) {\n  return [p06(c), p00(c)];\n}; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) {\n  return [p05(c), p03(c)];\n}; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) {\n  return [p01(c), p07(c)];\n}; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n  return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n  var BandGrid = { rows: rows, cols: cols, cells: [] };\n\n  var maxV = minV + Math.abs(bandwidth);\n\n  for (var j = 0; j < rows; ++j) {\n    BandGrid.cells[j] = [];\n    for (var i = 0; i < cols; ++i) {\n      /*  compose the 4-trit corner representation */\n      var cval = 0;\n\n      var tl = data[j + 1][i];\n      var tr = data[j + 1][i + 1];\n      var br = data[j][i + 1];\n      var bl = data[j][i];\n\n      if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n        continue;\n      }\n\n      cval |= tl < minV ? 0 : tl > maxV ? 128 : 64;\n      cval |= tr < minV ? 0 : tr > maxV ? 32 : 16;\n      cval |= br < minV ? 0 : br > maxV ? 8 : 4;\n      cval |= bl < minV ? 0 : bl > maxV ? 2 : 1;\n\n      var cval_real = +cval;\n\n      /* resolve ambiguity via averaging */\n      var flipped = 0;\n      if (\n        cval === 17 /* 0101 */ ||\n        cval === 18 /* 0102 */ ||\n        cval === 33 /* 0201 */ ||\n        cval === 34 /* 0202 */ ||\n        cval === 38 /* 0212 */ ||\n        cval === 68 /* 1010 */ ||\n        cval === 72 /* 1020 */ ||\n        cval === 98 /* 1202 */ ||\n        cval === 102 /* 1212 */ ||\n        cval === 132 /* 2010 */ ||\n        cval === 136 /* 2020 */ ||\n        cval === 137 /* 2021 */ ||\n        cval === 152 /* 2120 */ ||\n        cval === 153 /* 2121 */\n      ) {\n        var average = (tl + tr + br + bl) / 4;\n        /* set flipped state */\n        flipped = average > maxV ? 2 : average < minV ? 0 : 1;\n\n        /* adjust cval for flipped cases */\n\n        /* 8-sided cases */\n        if (cval === 34) {\n          if (flipped === 1) {\n            cval = 35;\n          } else if (flipped === 0) {\n            cval = 136;\n          }\n        } else if (cval === 136) {\n          if (flipped === 1) {\n            cval = 35;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 34;\n          }\n        } else if (cval === 17) {\n          /* 6-sided polygon cases */\n          if (flipped === 1) {\n            cval = 155;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 153;\n          }\n        } else if (cval === 68) {\n          if (flipped === 1) {\n            cval = 103;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 102;\n          }\n        } else if (cval === 153) {\n          if (flipped === 1) cval = 155;\n        } else if (cval === 102) {\n          if (flipped === 1) cval = 103;\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          if (flipped < 2) {\n            cval = 156;\n            flipped = 1;\n          }\n        } else if (cval === 137) {\n          if (flipped < 2) {\n            cval = 139;\n            flipped = 1;\n          }\n        } else if (cval === 98) {\n          if (flipped < 2) {\n            cval = 99;\n            flipped = 1;\n          }\n        } else if (cval === 38) {\n          if (flipped < 2) {\n            cval = 39;\n            flipped = 1;\n          }\n        } else if (cval === 18) {\n          if (flipped > 0) {\n            cval = 156;\n            flipped = 4;\n          } else {\n            cval = 152;\n          }\n        } else if (cval === 33) {\n          if (flipped > 0) {\n            cval = 139;\n            flipped = 4;\n          } else {\n            cval = 137;\n          }\n        } else if (cval === 72) {\n          if (flipped > 0) {\n            cval = 99;\n            flipped = 4;\n          } else {\n            cval = 98;\n          }\n        } else if (cval === 132) {\n          if (flipped > 0) {\n            cval = 39;\n            flipped = 4;\n          } else {\n            cval = 38;\n          }\n        }\n      }\n\n      /* add cell to BandGrid if it contains at least one polygon-side */\n      if (cval != 0 && cval != 170) {\n        var topleft,\n          topright,\n          bottomleft,\n          bottomright,\n          righttop,\n          rightbottom,\n          lefttop,\n          leftbottom;\n\n        topleft = topright = bottomleft = bottomright = righttop = rightbottom = lefttop = leftbottom = 0.5;\n\n        var edges = [];\n\n        /* do interpolation here */\n        /* 1st Triangles */\n        if (cval === 1) {\n          /* 0001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 169) {\n          /* 2221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 4) {\n          /* 0010 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 166) {\n          /* 2212 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 16) {\n          /* 0100 */\n          righttop = interpolateX(minV, br, tr);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 154) {\n          /* 2122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 64) {\n          /* 1000 */\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 106) {\n          /* 1222 */\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 168) {\n          /* 2nd Trapezoids */\n          /* 2220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 2) {\n          /* 0002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 162) {\n          /* 2202 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 8) {\n          /* 0020 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 138) {\n          /* 2022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 32) {\n          /* 0200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 42) {\n          /* 0222 */\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 128) {\n          /* 2000 */\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        }\n\n        /* 3rd rectangle cases */\n        if (cval === 5) {\n          /* 0011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 165) {\n          /* 2211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 20) {\n          /* 0110 */\n          bottomright = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 150) {\n          /* 2112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 80) {\n          /* 1100 */\n          righttop = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 90) {\n          /* 1122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 65) {\n          /* 1001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 105) {\n          /* 1221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 160) {\n          /* 2200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 10) {\n          /* 0022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 130) {\n          /* 2002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 40) {\n          /* 0220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 101) {\n          /* 4th single pentagon cases */\n          /* 1211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 69) {\n          /* 1011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 149) {\n          /* 2111 */\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 21) {\n          /* 0111 */\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 86) {\n          /* 1112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 84) {\n          /* 1110 */\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 89) {\n          /* 1121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 81) {\n          /* 1101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 96) {\n          /* 1200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 74) {\n          /* 1022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 24) {\n          /* 0120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 146) {\n          /* 2102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 6) {\n          /* 0012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 164) {\n          /* 2210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 129) {\n          /* 2001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 41) {\n          /* 0221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 66) {\n          /* 1002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 104) {\n          /* 1220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeTL[cval]);\n        } else if (cval === 144) {\n          /* 2100 */\n          righttop = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 26) {\n          /* 0122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 36) {\n          /* 0210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 134) {\n          /* 2012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 9) {\n          /* 0021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 161) {\n          /* 2201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 37) {\n          /* 5th single hexagon cases */\n          /* 0211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 133) {\n          /* 2011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 148) {\n          /* 2110 */\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 22) {\n          /* 0112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 82) {\n          /* 1102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 88) {\n          /* 1120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 73) {\n          /* 1021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 97) {\n          /* 1201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 145) {\n          /* 2101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 25) {\n          /* 0121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 70) {\n          /* 1012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 100) {\n          /* 1210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 34) {\n          /* 8-sided cases */\n          /* 0202 || 2020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 35) {\n          /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 136) {\n          /* 2020 || 0202 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 153) {\n          /* 6-sided polygon cases */\n          /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 102) {\n          /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 155) {\n          /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 103) {\n          /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 156) {\n          /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 137) {\n          /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 139) {\n          /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 98) {\n          /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 99) {\n          /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 38) {\n          /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 39) {\n          /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 85) {\n          righttop = 1;\n          rightbottom = 0;\n          bottomright = 1;\n          bottomleft = 0;\n          leftbottom = 0;\n          lefttop = 1;\n          topleft = 0;\n          topright = 1;\n        }\n\n        if (\n          topleft < 0 ||\n          topleft > 1 ||\n          topright < 0 ||\n          topright > 1 ||\n          righttop < 0 ||\n          righttop > 1 ||\n          bottomright < 0 ||\n          bottomright > 1 ||\n          leftbottom < 0 ||\n          leftbottom > 1 ||\n          lefttop < 0 ||\n          lefttop > 1\n        ) {\n          console.log(\n            \"MarchingSquaresJS-isoBands: \" +\n              cval +\n              \" \" +\n              cval_real +\n              \" \" +\n              tl +\n              \",\" +\n              tr +\n              \",\" +\n              br +\n              \",\" +\n              bl +\n              \" \" +\n              flipped +\n              \" \" +\n              topleft +\n              \" \" +\n              topright +\n              \" \" +\n              righttop +\n              \" \" +\n              rightbottom +\n              \" \" +\n              bottomright +\n              \" \" +\n              bottomleft +\n              \" \" +\n              leftbottom +\n              \" \" +\n              lefttop\n          );\n        }\n\n        BandGrid.cells[j][i] = {\n          cval: cval,\n          cval_real: cval_real,\n          flipped: flipped,\n          topleft: topleft,\n          topright: topright,\n          righttop: righttop,\n          rightbottom: rightbottom,\n          bottomright: bottomright,\n          bottomleft: bottomleft,\n          leftbottom: leftbottom,\n          lefttop: lefttop,\n          edges: edges,\n        };\n      }\n    }\n  }\n\n  return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n  var areas = [];\n  var rows = grid.rows;\n  var cols = grid.cols;\n  var currentPolygon = [];\n\n  for (var j = 0; j < rows; j++) {\n    for (var i = 0; i < cols; i++) {\n      if (\n        typeof grid.cells[j][i] !== \"undefined\" &&\n        grid.cells[j][i].edges.length > 0\n      ) {\n        /* trace back polygon path starting from this cell */\n\n        var cell = grid.cells[j][i];\n\n        /* get start coordinates */\n\n        var prev = getStartXY(cell),\n          next = null,\n          p = i,\n          q = j;\n\n        if (prev !== null) {\n          currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n          //console.log(cell);\n          //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n        }\n\n        do {\n          //console.log(p + \",\" + q);\n          //console.log(grid.cells[q][p]);\n          //console.log(grid.cells[q][p].edges);\n          //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n          next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n          if (next !== null) {\n            //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n            currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n            p += next.x;\n            q += next.y;\n            prev = next;\n          } else {\n            //console.log(\"getExitXY() returned null!\");\n            break;\n          }\n          //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n          /* special case, where we've reached the grid boundaries */\n          if (\n            q < 0 ||\n            q >= rows ||\n            p < 0 ||\n            p >= cols ||\n            typeof grid.cells[q][p] === \"undefined\"\n          ) {\n            /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n            /* set back coordinates of current cell */\n            p -= next.x;\n            q -= next.y;\n\n            //console.log(\"reached boundary at \" + p + \" \" + q);\n\n            var missing = traceOutOfGridPath(\n              grid,\n              p,\n              q,\n              next.x,\n              next.y,\n              next.o\n            );\n            if (missing !== null) {\n              missing.path.forEach(function (pp) {\n                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                currentPolygon.push(pp);\n              });\n              p = missing.i;\n              q = missing.j;\n              prev = missing;\n            } else {\n              break;\n            }\n            //console.log(grid.cells[q][p]);\n          }\n        } while (\n          typeof grid.cells[q][p] !== \"undefined\" &&\n          grid.cells[q][p].edges.length > 0\n        );\n\n        areas.push(currentPolygon);\n        //console.log(\"next polygon\");\n        //console.log(currentPolygon);\n        currentPolygon = [];\n        if (grid.cells[j][i].edges.length > 0) i--;\n      }\n    }\n  }\n  return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n  var cell = grid.cells[j][i];\n  var cval = cell.cval_real;\n  var p = i + d_x,\n    q = j + d_y;\n  var path = [];\n  var closed = false;\n\n  while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    if (\n      typeof grid.cells[q] === \"undefined\" ||\n      typeof grid.cells[q][p] === \"undefined\"\n    ) {\n      //console.log(\"which is undefined\");\n      /* we can't move on, so we have to change direction to proceed further */\n\n      /* go back to previous cell */\n      q -= d_y;\n      p -= d_x;\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n\n      /* check where we've left defined cells of the grid... */\n      if (d_y === -1) {\n        /* we came from top */\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node3) {\n            /* lower left node is within range, so we move left */\n            path.push([p, q]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node2) {\n            /* lower right node is within range, so we move right */\n            path.push([p + 1, q]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n          } else {\n            /* close the path */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node3) {\n          path.push([p, q]);\n          d_x = -1;\n          d_y = 0;\n          d_o = 0;\n        } else if (cval & Node2) {\n          path.push([p + cell.bottomright, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 1;\n          closed = true;\n          break;\n        } else {\n          path.push([p + cell.bottomleft, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 0;\n          closed = true;\n          break;\n        }\n      } else if (d_y === 1) {\n        /* we came from bottom */\n        //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node1) {\n            /* top right node is within range, so we move right */\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (!(cval & Node0)) {\n            /* found entry within same cell */\n            path.push([p + cell.topright, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          } else {\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node1) {\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n        } else {\n          /* move right */\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n          //console.log(\"wtf\");\n          //break;\n        }\n      } else if (d_x === -1) {\n        /* we came from right */\n        //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          //console.log(\"continue at bottom\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else if (!(cval & Node3)) {\n            /* there has to be an entry into the regular grid again! */\n            //console.log(\"exiting top\");\n            path.push([p, q + cell.lefttop]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            break;\n          } else {\n            //console.log(\"exiting bottom\");\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          //console.log(\"continue at top\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else {\n            /* */\n            console.log(\"MarchingSquaresJS-isoBands: wtf\");\n            break;\n          }\n        }\n      } else if (d_x === 1) {\n        /* we came from left */\n        //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit bottom */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          /* exit top */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (!(cval & Node1)) {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          } else {\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            break;\n          }\n        }\n      } else {\n        /* we came from the same cell */\n        console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");\n        break;\n      }\n    } else {\n      /* try to find an entry into the regular grid again! */\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n      //console.log(\"which is defined\");\n\n      if (d_x === -1) {\n        if (d_o === 0) {\n          /* try to go downwards */\n          if (\n            typeof grid.cells[q - 1] !== \"undefined\" &&\n            typeof grid.cells[q - 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (cval & Node3) {\n            /* proceed searching in x-direction */\n            //console.log(\"proceeding in x-direction!\");\n            path.push([p, q]);\n          } else {\n            /* we must have found an entry into the regular grid */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else if (cval & Node0) {\n          /* proceed searchin in x-direction */\n          console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\");\n        } else {\n          /* we must have found an entry into the regular grid */\n          console.log(\n            \"MarchingSquaresJS-isoBands: found entry from top at \" + p + \",\" + q\n          );\n          break;\n        }\n      } else if (d_x === 1) {\n        if (d_o === 0) {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        } else {\n          /* try to go upwards */\n          if (\n            typeof grid.cells[q + 1] !== \"undefined\" &&\n            typeof grid.cells[q + 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else if (cval & Node1) {\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        }\n      } else if (d_y === -1) {\n        if (d_o === 1) {\n          /* try to go right */\n          if (typeof grid.cells[q][p + 1] !== \"undefined\") {\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            /* found entry into regular grid! */\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from top at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else if (d_y === 1) {\n        if (d_o === 0) {\n          //console.log(\"we came from bottom left and proceed to the left\");\n          /* try to go left */\n          if (typeof grid.cells[q][p - 1] !== \"undefined\") {\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          //console.log(\"we came from bottom right and proceed to the right\");\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else {\n        console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");\n        break;\n      }\n    }\n\n    p += d_x;\n    q += d_y;\n    //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n    if (p === i && q === j) {\n      /* bail out, once we've closed a circle path */\n      break;\n    }\n  }\n\n  //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  return { path: path, i: p, j: q, x: d_x, y: d_y, o: d_o };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n  delete cell.edges[edgeIdx];\n  for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n    cell.edges[k - 1] = cell.edges[k];\n  }\n  cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n  if (cell.edges.length > 0) {\n    var e = cell.edges[cell.edges.length - 1];\n    //console.log(\"starting with edge \" + e);\n    var cval = cell.cval_real;\n    switch (e) {\n      case 0:\n        if (cval & Node1) {\n          /* node 1 within range */\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          /* node 1 below or above threshold */\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 1:\n        if (cval & Node2) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 2:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 3:\n        if (cval & Node3) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 4:\n        if (cval & Node1) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 5:\n        if (cval & Node2) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 6:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 7:\n        if (cval & Node3) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 8:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 9:\n        if (cval & Node3) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 10:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 11:\n        if (cval & Node0) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 12:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 13:\n        if (cval & Node3) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 14:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 15:\n        if (cval & Node0) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 16:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 17:\n        if (cval & Node0) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 18:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 19:\n        if (cval & Node0) {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 20:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 21:\n        if (cval & Node1) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 22:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 23:\n        if (cval & Node1) {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      default:\n        console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n        console.log(cell);\n        break;\n    }\n  }\n\n  return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n  var e,\n    id_x,\n    d_x,\n    d_y,\n    cval = cell.cval;\n  var d_o;\n\n  switch (x) {\n    case -1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeRB[cval];\n          d_x = isoBandNextXRB[cval];\n          d_y = isoBandNextYRB[cval];\n          d_o = isoBandNextORB[cval];\n          break;\n        default:\n          e = isoBandEdgeRT[cval];\n          d_x = isoBandNextXRT[cval];\n          d_y = isoBandNextYRT[cval];\n          d_o = isoBandNextORT[cval];\n          break;\n      }\n      break;\n    case 1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeLB[cval];\n          d_x = isoBandNextXLB[cval];\n          d_y = isoBandNextYLB[cval];\n          d_o = isoBandNextOLB[cval];\n          break;\n        default:\n          e = isoBandEdgeLT[cval];\n          d_x = isoBandNextXLT[cval];\n          d_y = isoBandNextYLT[cval];\n          d_o = isoBandNextOLT[cval];\n          break;\n      }\n      break;\n    default:\n      switch (y) {\n        case -1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeTL[cval];\n              d_x = isoBandNextXTL[cval];\n              d_y = isoBandNextYTL[cval];\n              d_o = isoBandNextOTL[cval];\n              break;\n            default:\n              e = isoBandEdgeTR[cval];\n              d_x = isoBandNextXTR[cval];\n              d_y = isoBandNextYTR[cval];\n              d_o = isoBandNextOTR[cval];\n              break;\n          }\n          break;\n        case 1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeBL[cval];\n              d_x = isoBandNextXBL[cval];\n              d_y = isoBandNextYBL[cval];\n              d_o = isoBandNextOBL[cval];\n              break;\n            default:\n              e = isoBandEdgeBR[cval];\n              d_x = isoBandNextXBR[cval];\n              d_y = isoBandNextYBR[cval];\n              d_o = isoBandNextOBR[cval];\n              break;\n          }\n          break;\n      }\n      break;\n  }\n\n  id_x = cell.edges.indexOf(e);\n  if (typeof cell.edges[id_x] !== \"undefined\") {\n    deleteEdge(cell, id_x);\n  } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n    return null;\n  }\n\n  cval = cell.cval_real;\n\n  switch (e) {\n    case 0:\n      if (cval & Node1) {\n        /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n      } else {\n        /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 1:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 2:\n      if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 3:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 4:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 5:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 6:\n      if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 7:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 8:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 9:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 10:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 11:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 12:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 13:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 14:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 15:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 16:\n      if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 17:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 18:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 19:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomleft;\n        y = 0;\n      }\n      break;\n    case 20:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 21:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 22:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 23:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.lefttop;\n      }\n      break;\n    default:\n      console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n      console.log(cell);\n      return null;\n  }\n\n  if (\n    typeof x === \"undefined\" ||\n    typeof y === \"undefined\" ||\n    typeof d_x === \"undefined\" ||\n    typeof d_y === \"undefined\" ||\n    typeof d_o === \"undefined\"\n  ) {\n    console.log(\"MarchingSquaresJS-isoBands: undefined value!\");\n    console.log(cell);\n    console.log(x + \" \" + y + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  }\n  return { p: [x, y], x: d_x, y: d_y, o: d_o };\n}\n\nfunction BandGrid2Areas(grid) {\n  var areas = [];\n  var area_idx = 0;\n\n  grid.cells.forEach(function (g, j) {\n    g.forEach(function (gg, i) {\n      if (typeof gg !== \"undefined\") {\n        var a = polygon_table[gg.cval](gg);\n        if (typeof a === \"object\" && isArray(a)) {\n          if (typeof a[0] === \"object\" && isArray(a[0])) {\n            if (typeof a[0][0] === \"object\" && isArray(a[0][0])) {\n              a.forEach(function (aa) {\n                aa.forEach(function (aaa) {\n                  aaa[0] += i;\n                  aaa[1] += j;\n                });\n                areas[area_idx++] = aa;\n              });\n            } else {\n              a.forEach(function (aa) {\n                aa[0] += i;\n                aa[1] += j;\n              });\n              areas[area_idx++] = a;\n            }\n          } else {\n            console.log(\n              \"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\"\n            );\n          }\n        } else {\n          console.log(\n            \"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\"\n          );\n        }\n      }\n    });\n  });\n\n  return areas;\n}\n\n/**\n * Takes a square or rectangular grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points - must be square or rectangular\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var commonProperties = options.commonProperties || {};\n  var breaksProperties = options.breaksProperties || [];\n\n  // Validation\n  collectionOf(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject(commonProperties))\n    throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties))\n    throw new Error(\"breaksProperties is not an Array\");\n\n  // Isoband methods\n  var matrix = gridToMatrix(pointGrid, { zProperty: zProperty, flip: true });\n  var contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n\n  var multipolygons = contours.map(function (contour, index) {\n    if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    }\n    // collect all properties\n    var contourProperties = objectAssign(\n      {},\n      commonProperties,\n      breaksProperties[index]\n    );\n    contourProperties[zProperty] = contour[zProperty];\n    var multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n\n  return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n  var contours = [];\n  for (var i = 1; i < breaks.length; i++) {\n    var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n    var upperBand = +breaks[i];\n\n    var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n    // as per GeoJson rules for creating a Polygon, make sure the first element\n    // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n    // and any subsequent elements represent interior rings (i.e. smaller area);\n    // this avoids rendering issues of the MultiPolygons on the map\n    var nestedRings = orderByArea(isobandsCoords);\n    var groupedRings = groupNestedRings(nestedRings);\n    var obj = {};\n    obj[\"groupedRings\"] = groupedRings;\n    obj[property] = lowerBand + \"-\" + upperBand;\n    contours.push(obj);\n  }\n  return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points) {\n  // get dimensions (on the map) of the original grid\n  var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n  var originalWidth = gridBbox[2] - gridBbox[0];\n  var originalHeigth = gridBbox[3] - gridBbox[1];\n\n  // get origin, which is the first point of the last row on the rectangular data on the map\n  var x0 = gridBbox[0];\n  var y0 = gridBbox[1];\n  // get number of cells per side\n  var matrixWidth = matrix[0].length - 1;\n  var matrixHeight = matrix.length - 1;\n  // calculate the scaling factor between matrix and rectangular grid on the map\n  var scaleX = originalWidth / matrixWidth;\n  var scaleY = originalHeigth / matrixHeight;\n\n  var resize = function (point) {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  };\n\n  // resize and shift each point/line of the isobands\n  contours.forEach(function (contour) {\n    contour.groupedRings.forEach(function (lineRingSet) {\n      lineRingSet.forEach(function (lineRing) {\n        lineRing.forEach(resize);\n      });\n    });\n  });\n  return contours;\n}\n\n/*  utility functions */\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n  var ringsWithArea = [];\n  var areas = [];\n  ringsCoords.forEach(function (coords) {\n    // var poly = polygon([points]);\n    var ringArea = area(polygon([coords]));\n    // create an array of areas value\n    areas.push(ringArea);\n    // associate each lineRing with its area\n    ringsWithArea.push({ ring: coords, area: ringArea });\n  });\n  areas.sort(function (a, b) {\n    // bigger --> smaller\n    return b - a;\n  });\n  // create a new array of linearRings coordinates ordered by their area\n  var orderedByArea = [];\n  areas.forEach(function (area) {\n    for (var lr = 0; lr < ringsWithArea.length; lr++) {\n      if (ringsWithArea[lr].area === area) {\n        orderedByArea.push(ringsWithArea[lr].ring);\n        ringsWithArea.splice(lr, 1);\n        break;\n      }\n    }\n  });\n  return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n  // create a list of the (coordinates of) LinearRings\n  var lrList = orderedLinearRings.map(function (lr) {\n    return { lrCoordinates: lr, grouped: false };\n  });\n  var groupedLinearRingsCoords = [];\n  while (!allGrouped(lrList)) {\n    for (var i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        // create new group starting with the larger not already grouped ring\n        var group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n        // group all the rings contained by the outermost ring\n        for (var j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            var lrPoly = polygon([lrList[j].lrCoordinates]);\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        }\n        // insert the new group\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n  return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n  var points = explode(testPolygon);\n  for (var i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isobands;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}