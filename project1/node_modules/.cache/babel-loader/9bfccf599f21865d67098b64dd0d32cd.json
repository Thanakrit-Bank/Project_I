{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\n\n\nfunction bbox(geojson) {\n  var result = [Infinity, Infinity, -Infinity, -Infinity];\n  meta_1.coordEach(geojson, function (coord) {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\n\nbbox[\"default\"] = bbox;\nexports.default = bbox;","map":{"version":3,"names":["Object","defineProperty","exports","value","meta_1","require","bbox","geojson","result","Infinity","coordEach","coord","default"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/bbox/dist/js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAcC,OAAd,EAAuB;EACnB,IAAIC,MAAM,GAAG,CAACC,QAAD,EAAWA,QAAX,EAAqB,CAACA,QAAtB,EAAgC,CAACA,QAAjC,CAAb;EACAL,MAAM,CAACM,SAAP,CAAiBH,OAAjB,EAA0B,UAAUI,KAAV,EAAiB;IACvC,IAAIH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAAjB;IACH;;IACD,IAAIH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAArB,EAA0B;MACtBH,MAAM,CAAC,CAAD,CAAN,GAAYG,KAAK,CAAC,CAAD,CAAjB;IACH;EACJ,CAbD;EAcA,OAAOH,MAAP;AACH;;AACDF,IAAI,CAAC,SAAD,CAAJ,GAAkBA,IAAlB;AACAJ,OAAO,CAACU,OAAR,GAAkBN,IAAlB"},"metadata":{},"sourceType":"script"}