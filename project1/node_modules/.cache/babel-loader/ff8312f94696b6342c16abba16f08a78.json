{"ast":null,"code":"import _regeneratorRuntime from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Project/Mix_Project/Project_I/project1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// var data = require('../data/nc.json')\n// var data = require('../data/nc.json')\nvar url = 'http://127.0.0.1:5000/get_grid';\nexport default function getGridNC() {\n  var response = fetchData(url);\n  console.log(response);\n  return response;\n}\n\nfunction fetchData(_x) {\n  return _fetchData.apply(this, arguments);\n}\n\nfunction _fetchData() {\n  _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {\n    var reqOptions;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reqOptions = {\n              method: \"get\",\n              headers: {\n                \"x-access-token\": \"test\"\n              }\n            };\n            _context.next = 3;\n            return fetch(url, reqOptions).then(function (r) {\n              return r.json();\n            }).then(function (error) {\n              console.error(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchData.apply(this, arguments);\n}","map":{"version":3,"names":["url","getGridNC","response","fetchData","console","log","reqOptions","method","headers","fetch","then","r","json","error"],"sources":["D:/Project/Mix_Project/Project_I/project1/src/components/getGrid.jsx"],"sourcesContent":["// var data = require('../data/nc.json')\r\n// var data = require('../data/nc.json')\r\nconst url = 'http://127.0.0.1:5000/get_grid'\r\nexport default function getGridNC() {\r\n    var response = fetchData(url)\r\n    console.log(response);\r\n    return response\r\n}\r\n\r\nasync function fetchData(url) {\r\n    const reqOptions ={\r\n      method:\"get\", \r\n      headers:{\"x-access-token\": \"test\"},\r\n    }\r\n      await fetch(url, reqOptions)\r\n        .then(r => {return r.json()})\r\n        .then((error) => {\r\n          console.error(error);\r\n        });\r\n  }\r\n"],"mappings":";;AAAA;AACA;AACA,IAAMA,GAAG,GAAG,gCAAZ;AACA,eAAe,SAASC,SAAT,GAAqB;EAChC,IAAIC,QAAQ,GAAGC,SAAS,CAACH,GAAD,CAAxB;EACAI,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACA,OAAOA,QAAP;AACH;;SAEcC,S;;;;;0EAAf,iBAAyBH,GAAzB;IAAA;IAAA;MAAA;QAAA;UAAA;YACUM,UADV,GACsB;cAChBC,MAAM,EAAC,KADS;cAEhBC,OAAO,EAAC;gBAAC,kBAAkB;cAAnB;YAFQ,CADtB;YAAA;YAAA,OAKYC,KAAK,CAACT,GAAD,EAAMM,UAAN,CAAL,CACHI,IADG,CACE,UAAAC,CAAC,EAAI;cAAC,OAAOA,CAAC,CAACC,IAAF,EAAP;YAAgB,CADxB,EAEHF,IAFG,CAEE,UAACG,KAAD,EAAW;cACfT,OAAO,CAACS,KAAR,CAAcA,KAAd;YACD,CAJG,CALZ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C"},"metadata":{},"sourceType":"module"}