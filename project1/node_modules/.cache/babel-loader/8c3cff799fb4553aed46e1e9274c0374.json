{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Project_I\\\\project1\\\\src\\\\components\\\\MyMapClass.jsx\";\nimport React, { Component } from \"react\";\nimport { GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Legend from \"./Legend\";\nimport legendItems from \"../entities/LegendItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapGeoJson = /*#__PURE__*/function (_Component) {\n  _inherits(MapGeoJson, _Component);\n\n  var _super = _createSuper(MapGeoJson);\n\n  function MapGeoJson() {\n    var _this;\n\n    _classCallCheck(this, MapGeoJson);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      center: [13.2955977, 102.2090103],\n      zoom: 6,\n      url: 'http://127.0.0.1:5000/get_grid' // url: 'http://127.0.0.1:5000/get_spei/Mae Hong Son',\n      // url:'http://127.0.0.1:5000/get_province/',\n\n    };\n\n    _this.onLatChange = function (e) {\n      _this.fetchData(_this.state.url + _this.state.province);\n\n      _this.setState({\n        province: e.target.value\n      });\n\n      console.log('go to fech');\n    };\n\n    return _this;\n  }\n\n  _createClass(MapGeoJson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(this.state.url);\n      console.log('did mount');\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(url) {\n      var _this2 = this;\n\n      var reqOptions = {\n        method: \"get\",\n        headers: {\n          \"x-access-token\": \"test\"\n        }\n      };\n      var request = fetch(url, reqOptions);\n      console.log('feching'); // return request\n\n      request.then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        _this2.setState({\n          data: data\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return (\n        /*#__PURE__*/\n        // <div>\n        //   <div style={{textAlign:'right'}}>\n        //       <span >\n        //         <select onChange={(e) => this.onLatChange(e)}>\n        //           <option value='all' defaultValue>All Province</option>\n        //           {this.state.all_P.map((p) => {\n        //             return (<option value={p}>{p}</option>) \n        //           })}\n        //         </select>\n        //       </span>\n        //   </div>\n        _jsxDEV(MapContainer, {\n          center: this.state.center,\n          zoom: this.state.zoom,\n          scrollWheelZoom: true,\n          style: {\n            height: '95vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU\",\n            attribution: \"<a href=\\\"https://www.maptiler.com/copyright/\\\" target=\\\"_blank\\\">\\xA9 MapTiler</a> <a href=\\\"https://www.openstreetmap.org/copyright\\\" target=\\\"_blank\\\">\\xA9 OpenStreetMap contributors</a>\",\n            maxZoom: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), console.log('render!!'), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n            children: [this.state.data.map(function (data) {\n              var myStyleGrid = {\n                color: \"white\",\n                weight: 0,\n                opacity: 0.5,\n                fillColor: 'white'\n              };\n\n              if (data.properties.index < 600) {\n                myStyleGrid.fillColor = '#FFEDA0';\n              } else if (data.properties.index < 700) {\n                myStyleGrid.fillColor = '#FED976';\n              } else if (data.properties.index < 800) {\n                myStyleGrid.fillColor = '#FEB24C';\n              } else if (data.properties.index < 900) {\n                myStyleGrid.fillColor = '#FD8D3C';\n              } else if (data.properties.index < 1000) {\n                myStyleGrid.fillColor = '#FC4E2A';\n              } else if (data.properties.index < 1100) {\n                myStyleGrid.fillColor = '#E31A1C';\n              } else if (data.properties.index < 1200) {\n                myStyleGrid.fillColor = '#BD0026';\n              } else if (data.properties.index < 1300) {\n                myStyleGrid.fillColor = '#800026';\n              }\n\n              return /*#__PURE__*/_jsxDEV(GeoJSON, {\n                data: data,\n                style: myStyleGrid,\n                children: [console.log(data), /*#__PURE__*/_jsxDEV(Popup, {\n                  children: [\" \", data.properties.index, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, _this3)]\n              }, data.properties.grid_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, _this3);\n            }), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      );\n    }\n  }]);\n\n  return MapGeoJson;\n}(Component);\n\nexport default MapGeoJson;","map":{"version":3,"names":["React","Component","GeoJSON","MapContainer","TileLayer","Popup","FeatureGroup","Legend","legendItems","MapGeoJson","state","data","center","zoom","url","onLatChange","e","fetchData","province","setState","target","value","console","log","reqOptions","method","headers","request","fetch","then","r","json","error","height","map","myStyleGrid","color","weight","opacity","fillColor","properties","index","grid_id"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/src/components/MyMapClass.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup} from 'react-leaflet' \r\nimport 'leaflet/dist/leaflet.css' \r\nimport Legend from \"./Legend\";\r\nimport legendItems from \"../entities/LegendItem\";\r\n\r\nclass MapGeoJson extends Component {\r\n        state = { \r\n                    data:[],\r\n                    center:[13.2955977,102.2090103],\r\n                    zoom:6,\r\n                    url: 'http://127.0.0.1:5000/get_grid',\r\n                    // url: 'http://127.0.0.1:5000/get_spei/Mae Hong Son',\r\n                    // url:'http://127.0.0.1:5000/get_province/',\r\n                    } \r\n  \r\n    componentDidMount() {\r\n        this.fetchData(this.state.url);\r\n        \r\n        console.log('did mount');\r\n    }\r\n\r\n    fetchData(url) {\r\n      const reqOptions ={\r\n        method:\"get\", \r\n        headers:{\"x-access-token\": \"test\"},\r\n      }\r\n        let request = fetch(url, reqOptions);\r\n        console.log('feching');\r\n        // return request\r\n        request\r\n          .then(r => r.json())\r\n          .then(data => {\r\n            this.setState({\r\n              data: data\r\n            });\r\n          }, (error) => {\r\n            console.error(error);\r\n          });\r\n    }\r\n\r\n    onLatChange = (e) => {\r\n      this.fetchData(this.state.url + this.state.province);\r\n      this.setState({\r\n        province: e.target.value,\r\n      })\r\n      console.log('go to fech');\r\n    } \r\n    \r\n    render() { \r\n        return (\r\n          // <div>\r\n          //   <div style={{textAlign:'right'}}>\r\n          //       <span >\r\n          //         <select onChange={(e) => this.onLatChange(e)}>\r\n          //           <option value='all' defaultValue>All Province</option>\r\n          //           {this.state.all_P.map((p) => {\r\n          //             return (<option value={p}>{p}</option>) \r\n          //           })}\r\n          //         </select>\r\n          //       </span>\r\n          //   </div>\r\n\r\n            <MapContainer center={this.state.center} zoom={this.state.zoom} scrollWheelZoom={true} style={{height:'95vh'}}>\r\n                <TileLayer\r\n                    url='https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU'\r\n                    attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n                    maxZoom= {20}\r\n                /> \r\n\r\n                {console.log('render!!')}\r\n                <FeatureGroup>\r\n\r\n                  {this.state.data.map(data => {\r\n\r\n                    var myStyleGrid = {\r\n                        color: \"white\",\r\n                        weight: 0,\r\n                        opacity: 0.5,\r\n                        fillColor: 'white',\r\n                    }\r\n                    \r\n                    if(data.properties.index < 600){\r\n                      myStyleGrid.fillColor = '#FFEDA0'\r\n                    }else if(data.properties.index < 700){\r\n                      myStyleGrid.fillColor = '#FED976'\r\n                    }else if(data.properties.index < 800){\r\n                      myStyleGrid.fillColor = '#FEB24C'\r\n                    }else if(data.properties.index < 900){\r\n                      myStyleGrid.fillColor = '#FD8D3C'\r\n                    }else if(data.properties.index < 1000){\r\n                      myStyleGrid.fillColor = '#FC4E2A'\r\n                    }else if(data.properties.index < 1100){\r\n                      myStyleGrid.fillColor = '#E31A1C'\r\n                    }else if(data.properties.index < 1200){\r\n                      myStyleGrid.fillColor = '#BD0026'\r\n                    }else if(data.properties.index < 1300){\r\n                      myStyleGrid.fillColor = '#800026'\r\n                    }\r\n                    \r\n                    return (\r\n                    <GeoJSON key={data.properties.grid_id}  data={data} style={myStyleGrid}>\r\n                      {console.log(data)}\r\n                      <Popup> {data.properties.index} </Popup>\r\n                      {/* <Legend /> */}\r\n                    </GeoJSON>)\r\n                  })}\r\n                  <Legend />\r\n                </FeatureGroup>\r\n            </MapContainer>\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapGeoJson;"],"mappings":"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"},"metadata":{},"sourceType":"module"}