{"ast":null,"code":"// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","map":{"version":3,"names":["Adder","reset","prototype","constructor","s","t","add","y","temp","valueOf","adder","a","b","x","bv","av"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/d3-geo/src/adder.js"],"sourcesContent":["// Adds floating point numbers with twice the normal precision.\r\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\r\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\r\n// 305–363 (1997).\r\n// Code adapted from GeographicLib by Charles F. F. Karney,\r\n// http://geographiclib.sourceforge.net/\r\n\r\nexport default function() {\r\n  return new Adder;\r\n}\r\n\r\nfunction Adder() {\r\n  this.reset();\r\n}\r\n\r\nAdder.prototype = {\r\n  constructor: Adder,\r\n  reset: function() {\r\n    this.s = // rounded value\r\n    this.t = 0; // exact error\r\n  },\r\n  add: function(y) {\r\n    add(temp, y, this.t);\r\n    add(this, temp.s, this.s);\r\n    if (this.s) this.t += temp.t;\r\n    else this.s = temp.t;\r\n  },\r\n  valueOf: function() {\r\n    return this.s;\r\n  }\r\n};\r\n\r\nvar temp = new Adder;\r\n\r\nfunction add(adder, a, b) {\r\n  var x = adder.s = a + b,\r\n      bv = x - a,\r\n      av = x - bv;\r\n  adder.t = (a - av) + (b - bv);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,YAAW;EACxB,OAAO,IAAIA,KAAJ,EAAP;AACD;;AAED,SAASA,KAAT,GAAiB;EACf,KAAKC,KAAL;AACD;;AAEDD,KAAK,CAACE,SAAN,GAAkB;EAChBC,WAAW,EAAEH,KADG;EAEhBC,KAAK,EAAE,iBAAW;IAChB,KAAKG,CAAL,GAAS;IACT,KAAKC,CAAL,GAAS,CADT,CADgB,CAEJ;EACb,CALe;EAMhBC,GAAG,EAAE,aAASC,CAAT,EAAY;IACfD,IAAG,CAACE,IAAD,EAAOD,CAAP,EAAU,KAAKF,CAAf,CAAH;;IACAC,IAAG,CAAC,IAAD,EAAOE,IAAI,CAACJ,CAAZ,EAAe,KAAKA,CAApB,CAAH;;IACA,IAAI,KAAKA,CAAT,EAAY,KAAKC,CAAL,IAAUG,IAAI,CAACH,CAAf,CAAZ,KACK,KAAKD,CAAL,GAASI,IAAI,CAACH,CAAd;EACN,CAXe;EAYhBI,OAAO,EAAE,mBAAW;IAClB,OAAO,KAAKL,CAAZ;EACD;AAde,CAAlB;AAiBA,IAAII,IAAI,GAAG,IAAIR,KAAJ,EAAX;;AAEA,SAASM,IAAT,CAAaI,KAAb,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;EACxB,IAAIC,CAAC,GAAGH,KAAK,CAACN,CAAN,GAAUO,CAAC,GAAGC,CAAtB;EAAA,IACIE,EAAE,GAAGD,CAAC,GAAGF,CADb;EAAA,IAEII,EAAE,GAAGF,CAAC,GAAGC,EAFb;EAGAJ,KAAK,CAACL,CAAN,GAAWM,CAAC,GAAGI,EAAL,IAAYH,CAAC,GAAGE,EAAhB,CAAV;AACD"},"metadata":{},"sourceType":"module"}