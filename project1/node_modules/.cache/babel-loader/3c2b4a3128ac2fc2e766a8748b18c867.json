{"ast":null,"code":"import GeojsonEquality from \"geojson-equality\";\nimport cleanCoords from \"@turf/clean-coords\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Determine whether two geometries of the same type have identical X,Y coordinate values.\n * See http://edndoc.esri.com/arcsde/9.0/general_topics/understand_spatial_relations.htm\n *\n * @name booleanEqual\n * @param {Geometry|Feature} feature1 GeoJSON input\n * @param {Geometry|Feature} feature2 GeoJSON input\n * @returns {boolean} true if the objects are equal, false otherwise\n * @example\n * var pt1 = turf.point([0, 0]);\n * var pt2 = turf.point([0, 0]);\n * var pt3 = turf.point([1, 1]);\n *\n * turf.booleanEqual(pt1, pt2);\n * //= true\n * turf.booleanEqual(pt2, pt3);\n * //= false\n */\n\nfunction booleanEqual(feature1, feature2) {\n  var type1 = getGeom(feature1).type;\n  var type2 = getGeom(feature2).type;\n  if (type1 !== type2) return false;\n  var equality = new GeojsonEquality({\n    precision: 6\n  });\n  return equality.compare(cleanCoords(feature1), cleanCoords(feature2));\n}\n\nexport default booleanEqual;","map":{"version":3,"names":["GeojsonEquality","cleanCoords","getGeom","booleanEqual","feature1","feature2","type1","type","type2","equality","precision","compare"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/boolean-equal/dist/es/index.js"],"sourcesContent":["import GeojsonEquality from \"geojson-equality\";\nimport cleanCoords from \"@turf/clean-coords\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Determine whether two geometries of the same type have identical X,Y coordinate values.\n * See http://edndoc.esri.com/arcsde/9.0/general_topics/understand_spatial_relations.htm\n *\n * @name booleanEqual\n * @param {Geometry|Feature} feature1 GeoJSON input\n * @param {Geometry|Feature} feature2 GeoJSON input\n * @returns {boolean} true if the objects are equal, false otherwise\n * @example\n * var pt1 = turf.point([0, 0]);\n * var pt2 = turf.point([0, 0]);\n * var pt3 = turf.point([1, 1]);\n *\n * turf.booleanEqual(pt1, pt2);\n * //= true\n * turf.booleanEqual(pt2, pt3);\n * //= false\n */\nfunction booleanEqual(feature1, feature2) {\n    var type1 = getGeom(feature1).type;\n    var type2 = getGeom(feature2).type;\n    if (type1 !== type2)\n        return false;\n    var equality = new GeojsonEquality({ precision: 6 });\n    return equality.compare(cleanCoords(feature1), cleanCoords(feature2));\n}\nexport default booleanEqual;\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;EACtC,IAAIC,KAAK,GAAGJ,OAAO,CAACE,QAAD,CAAP,CAAkBG,IAA9B;EACA,IAAIC,KAAK,GAAGN,OAAO,CAACG,QAAD,CAAP,CAAkBE,IAA9B;EACA,IAAID,KAAK,KAAKE,KAAd,EACI,OAAO,KAAP;EACJ,IAAIC,QAAQ,GAAG,IAAIT,eAAJ,CAAoB;IAAEU,SAAS,EAAE;EAAb,CAApB,CAAf;EACA,OAAOD,QAAQ,CAACE,OAAT,CAAiBV,WAAW,CAACG,QAAD,CAA5B,EAAwCH,WAAW,CAACI,QAAD,CAAnD,CAAP;AACH;;AACD,eAAeF,YAAf"},"metadata":{},"sourceType":"module"}