{"ast":null,"code":"import earcut from 'earcut';\nimport { polygon } from '@turf/helpers';\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} poly the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var poly = turf.polygon([[[11, 0], [22, 4], [31, 0], [31, 11], [21, 15], [11, 11], [11, 0]]]);\n * var triangles = turf.tesselate(poly);\n *\n * //addToMap\n * var addToMap = [poly, triangles]\n */\n\nfunction tesselate(poly) {\n  if (!poly.geometry || poly.geometry.type !== \"Polygon\" && poly.geometry.type !== \"MultiPolygon\") {\n    throw new Error(\"input must be a Polygon or MultiPolygon\");\n  }\n\n  var fc = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n\n  if (poly.geometry.type === \"Polygon\") {\n    fc.features = processPolygon(poly.geometry.coordinates);\n  } else {\n    poly.geometry.coordinates.forEach(function (coordinates) {\n      fc.features = fc.features.concat(processPolygon(coordinates));\n    });\n  }\n\n  return fc;\n}\n\nfunction processPolygon(coordinates) {\n  var data = flattenCoords(coordinates);\n  var dim = 2;\n  var result = earcut(data.vertices, data.holes, dim);\n  var features = [];\n  var vertices = [];\n  result.forEach(function (vert, i) {\n    var index = result[i];\n    vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n  });\n\n  for (var i = 0; i < vertices.length; i += 3) {\n    var coords = vertices.slice(i, i + 3);\n    coords.push(vertices[i]);\n    features.push(polygon([coords]));\n  }\n\n  return features;\n}\n\nfunction flattenCoords(data) {\n  var dim = data[0][0].length,\n      result = {\n    vertices: [],\n    holes: [],\n    dimensions: dim\n  },\n      holeIndex = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].length; j++) {\n      for (var d = 0; d < dim; d++) {\n        result.vertices.push(data[i][j][d]);\n      }\n    }\n\n    if (i > 0) {\n      holeIndex += data[i - 1].length;\n      result.holes.push(holeIndex);\n    }\n  }\n\n  return result;\n}\n\nexport default tesselate;","map":{"version":3,"names":["earcut","polygon","tesselate","poly","geometry","type","Error","fc","features","processPolygon","coordinates","forEach","concat","data","flattenCoords","dim","result","vertices","holes","vert","i","index","push","length","coords","slice","dimensions","holeIndex","j","d"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/tesselate/dist/es/index.js"],"sourcesContent":["import earcut from 'earcut';\nimport { polygon } from '@turf/helpers';\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} poly the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var poly = turf.polygon([[[11, 0], [22, 4], [31, 0], [31, 11], [21, 15], [11, 11], [11, 0]]]);\n * var triangles = turf.tesselate(poly);\n *\n * //addToMap\n * var addToMap = [poly, triangles]\n */\nfunction tesselate(poly) {\n  if (\n    !poly.geometry ||\n    (poly.geometry.type !== \"Polygon\" && poly.geometry.type !== \"MultiPolygon\")\n  ) {\n    throw new Error(\"input must be a Polygon or MultiPolygon\");\n  }\n\n  var fc = { type: \"FeatureCollection\", features: [] };\n\n  if (poly.geometry.type === \"Polygon\") {\n    fc.features = processPolygon(poly.geometry.coordinates);\n  } else {\n    poly.geometry.coordinates.forEach(function (coordinates) {\n      fc.features = fc.features.concat(processPolygon(coordinates));\n    });\n  }\n\n  return fc;\n}\n\nfunction processPolygon(coordinates) {\n  var data = flattenCoords(coordinates);\n  var dim = 2;\n  var result = earcut(data.vertices, data.holes, dim);\n\n  var features = [];\n  var vertices = [];\n\n  result.forEach(function (vert, i) {\n    var index = result[i];\n    vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n  });\n\n  for (var i = 0; i < vertices.length; i += 3) {\n    var coords = vertices.slice(i, i + 3);\n    coords.push(vertices[i]);\n    features.push(polygon([coords]));\n  }\n\n  return features;\n}\n\nfunction flattenCoords(data) {\n  var dim = data[0][0].length,\n    result = { vertices: [], holes: [], dimensions: dim },\n    holeIndex = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].length; j++) {\n      for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n    }\n    if (i > 0) {\n      holeIndex += data[i - 1].length;\n      result.holes.push(holeIndex);\n    }\n  }\n\n  return result;\n}\n\nexport default tesselate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}