{"ast":null,"code":"import polygonClipping from \"polygon-clipping\";\nimport { getGeom } from \"@turf/invariant\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\n/**\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate Properties to output Feature\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\n\nfunction union(poly1, poly2, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var geom1 = getGeom(poly1);\n  var geom2 = getGeom(poly2);\n  var unioned = polygonClipping.union(geom1.coordinates, geom2.coordinates);\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return polygon(unioned[0], options.properties);else return multiPolygon(unioned, options.properties);\n}\n\nexport default union;","map":{"version":3,"names":["polygonClipping","getGeom","multiPolygon","polygon","union","poly1","poly2","options","geom1","geom2","unioned","coordinates","length","properties"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/union/dist/es/index.js"],"sourcesContent":["import polygonClipping from \"polygon-clipping\";\nimport { getGeom } from \"@turf/invariant\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\n/**\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate Properties to output Feature\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n    var unioned = polygonClipping.union(geom1.coordinates, geom2.coordinates);\n    if (unioned.length === 0)\n        return null;\n    if (unioned.length === 1)\n        return polygon(unioned[0], options.properties);\n    else\n        return multiPolygon(unioned, options.properties);\n}\nexport default union;\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,eAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;EAClC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,KAAK,GAAGP,OAAO,CAACI,KAAD,CAAnB;EACA,IAAII,KAAK,GAAGR,OAAO,CAACK,KAAD,CAAnB;EACA,IAAII,OAAO,GAAGV,eAAe,CAACI,KAAhB,CAAsBI,KAAK,CAACG,WAA5B,EAAyCF,KAAK,CAACE,WAA/C,CAAd;EACA,IAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EACI,OAAO,IAAP;EACJ,IAAIF,OAAO,CAACE,MAAR,KAAmB,CAAvB,EACI,OAAOT,OAAO,CAACO,OAAO,CAAC,CAAD,CAAR,EAAaH,OAAO,CAACM,UAArB,CAAd,CADJ,KAGI,OAAOX,YAAY,CAACQ,OAAD,EAAUH,OAAO,CAACM,UAAlB,CAAnB;AACP;;AACD,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}