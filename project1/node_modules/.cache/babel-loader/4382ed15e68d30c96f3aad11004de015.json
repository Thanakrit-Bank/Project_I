{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Mix_Project\\\\Project_I\\\\project1\\\\src\\\\components\\\\MainMap.jsx\";\nimport React from 'react';\nimport { GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup, LayersControl } from 'react-leaflet';\nimport Legend from \"./Legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainMap() {\n  var _this = this;\n\n  var BaseLayer = LayersControl.BaseLayer;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: this.state.center,\n    zoom: this.state.zoom,\n    scrollWheelZoom: true,\n    style: {\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n      children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n        checked: true,\n        name: \"Satellite View\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n          maxZoom: 20,\n          subdomains: ['mt1', 'mt2', 'mt3']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n        name: \"OpenStreetMap.Mapik\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n        name: \"maptiler\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU\",\n          attribution: \"<a href=\\\"https://www.maptiler.com/copyright/\\\" target=\\\"_blank\\\">\\xA9 MapTiler</a> <a href=\\\"https://www.openstreetmap.org/copyright\\\" target=\\\"_blank\\\">\\xA9 OpenStreetMap contributors</a>\",\n          maxZoom: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), console.log('render!!'), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n      children: this.state.data.map(function (data) {\n        var myStyleGrid = {\n          color: \"white\",\n          weight: 0,\n          opacity: 0,\n          fillColor: 'white'\n        };\n\n        if (data.properties.index < 600) {\n          myStyleGrid.fillColor = '#FFEDA0';\n        } else if (data.properties.index < 700) {\n          myStyleGrid.fillColor = '#FED976';\n        } else if (data.properties.index < 800) {\n          myStyleGrid.fillColor = '#FEB24C';\n        } else if (data.properties.index < 900) {\n          myStyleGrid.fillColor = '#FD8D3C';\n        } else if (data.properties.index < 1000) {\n          myStyleGrid.fillColor = '#FC4E2A';\n        } else if (data.properties.index < 1100) {\n          myStyleGrid.fillColor = '#E31A1C';\n        } else if (data.properties.index < 1200) {\n          myStyleGrid.fillColor = '#BD0026';\n        } else if (data.properties.index < 1300) {\n          myStyleGrid.fillColor = '#800026';\n        }\n\n        return /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: data,\n          style: myStyleGrid,\n          children: [console.log(data), /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\" \", data.properties.index, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, _this)]\n        }, data.properties.grid_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MainMap;\nexport default MainMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainMap\");","map":{"version":3,"names":["React","GeoJSON","MapContainer","TileLayer","Popup","FeatureGroup","LayersControl","Legend","MainMap","BaseLayer","state","center","zoom","height","console","log","data","map","myStyleGrid","color","weight","opacity","fillColor","properties","index","grid_id"],"sources":["D:/Project/Mix_Project/Project_I/project1/src/components/MainMap.jsx"],"sourcesContent":["import React from 'react'\r\nimport {GeoJSON, MapContainer, TileLayer, Popup, FeatureGroup,LayersControl} from 'react-leaflet' \r\nimport Legend from \"./Legend\";\r\n\r\nfunction MainMap() {\r\n    const {BaseLayer} = LayersControl;\r\n    return (\r\n        <MapContainer center={this.state.center} zoom={this.state.zoom} scrollWheelZoom={true} style={{height:'80vh'}}>\r\n            <LayersControl>\r\n                <BaseLayer checked name=\"Satellite View\">\r\n                    <TileLayer\r\n                        url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                        maxZoom= {20}\r\n                        subdomains={['mt1','mt2','mt3']}\r\n                    />\r\n                </BaseLayer>\r\n\r\n                <BaseLayer name=\"OpenStreetMap.Mapik\">\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    />\r\n                </BaseLayer>\r\n\r\n                <BaseLayer name=\"maptiler\">\r\n                    <TileLayer\r\n                        url='https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=UWwVBYXDjNUkBGiF7hvU'\r\n                        attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n                        maxZoom= {20}\r\n                    /> \r\n                </BaseLayer>\r\n            </LayersControl>\r\n\r\n            {console.log('render!!')}\r\n            <FeatureGroup>\r\n\r\n                {this.state.data.map(data => {\r\n\r\n                var myStyleGrid = {\r\n                    color: \"white\",\r\n                    weight: 0,\r\n                    opacity: 0,\r\n                    fillColor: 'white',\r\n                }\r\n                \r\n                if(data.properties.index < 600){\r\n                    myStyleGrid.fillColor = '#FFEDA0'\r\n                }else if(data.properties.index < 700){\r\n                    myStyleGrid.fillColor = '#FED976'\r\n                }else if(data.properties.index < 800){\r\n                    myStyleGrid.fillColor = '#FEB24C'\r\n                }else if(data.properties.index < 900){\r\n                    myStyleGrid.fillColor = '#FD8D3C'\r\n                }else if(data.properties.index < 1000){\r\n                    myStyleGrid.fillColor = '#FC4E2A'\r\n                }else if(data.properties.index < 1100){\r\n                    myStyleGrid.fillColor = '#E31A1C'\r\n                }else if(data.properties.index < 1200){\r\n                    myStyleGrid.fillColor = '#BD0026'\r\n                }else if(data.properties.index < 1300){\r\n                    myStyleGrid.fillColor = '#800026'\r\n                }\r\n                \r\n                return (\r\n                <GeoJSON key={data.properties.grid_id}  data={data} style={myStyleGrid}>\r\n                    {console.log(data)}\r\n                    <Popup> {data.properties.index} </Popup>\r\n                </GeoJSON>)\r\n                })}\r\n            \r\n            </FeatureGroup>\r\n            <Legend/>\r\n        </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MainMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,YAAjD,EAA8DC,aAA9D,QAAkF,eAAlF;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACf,IAAOC,SAAP,GAAoBH,aAApB,CAAOG,SAAP;EACA,oBACI,QAAC,YAAD;IAAc,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAjC;IAAyC,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAA1D;IAAgE,eAAe,EAAE,IAAjF;IAAuF,KAAK,EAAE;MAACC,MAAM,EAAC;IAAR,CAA9F;IAAA,wBACI,QAAC,aAAD;MAAA,wBACI,QAAC,SAAD;QAAW,OAAO,MAAlB;QAAmB,IAAI,EAAC,gBAAxB;QAAA,uBACI,QAAC,SAAD;UACI,GAAG,EAAC,oDADR;UAEI,OAAO,EAAG,EAFd;UAGI,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;QAHhB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI,QAAC,SAAD;QAAW,IAAI,EAAC,qBAAhB;QAAA,uBACI,QAAC,SAAD;UACI,GAAG,EAAC,oDADR;UAEI,WAAW,EAAC;QAFhB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ,eAgBI,QAAC,SAAD;QAAW,IAAI,EAAC,UAAhB;QAAA,uBACI,QAAC,SAAD;UACI,GAAG,EAAC,+EADR;UAEI,WAAW,EAAC,+LAFhB;UAGI,OAAO,EAAG;QAHd;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EA0BKC,OAAO,CAACC,GAAR,CAAY,UAAZ,CA1BL,eA2BI,QAAC,YAAD;MAAA,UAEK,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,GAAhB,CAAoB,UAAAD,IAAI,EAAI;QAE7B,IAAIE,WAAW,GAAG;UACdC,KAAK,EAAE,OADO;UAEdC,MAAM,EAAE,CAFM;UAGdC,OAAO,EAAE,CAHK;UAIdC,SAAS,EAAE;QAJG,CAAlB;;QAOA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,GAA3B,EAA+B;UAC3BN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFD,MAEM,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,GAA3B,EAA+B;UACjCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,GAA3B,EAA+B;UACjCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,GAA3B,EAA+B;UACjCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,IAA3B,EAAgC;UAClCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,IAA3B,EAAgC;UAClCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,IAA3B,EAAgC;UAClCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH,CAFK,MAEA,IAAGN,IAAI,CAACO,UAAL,CAAgBC,KAAhB,GAAwB,IAA3B,EAAgC;UAClCN,WAAW,CAACI,SAAZ,GAAwB,SAAxB;QACH;;QAED,oBACA,QAAC,OAAD;UAAwC,IAAI,EAAEN,IAA9C;UAAoD,KAAK,EAAEE,WAA3D;UAAA,WACKJ,OAAO,CAACC,GAAR,CAAYC,IAAZ,CADL,eAEI,QAAC,KAAD;YAAA,gBAASA,IAAI,CAACO,UAAL,CAAgBC,KAAzB;UAAA;YAAA;YAAA;YAAA;UAAA,SAFJ;QAAA,GAAcR,IAAI,CAACO,UAAL,CAAgBE,OAA9B;UAAA;UAAA;UAAA;QAAA,SADA;MAKC,CAhCA;IAFL;MAAA;MAAA;MAAA;IAAA,QA3BJ,eAgEI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAhEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoEH;;KAtEQjB,O;AAwET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}