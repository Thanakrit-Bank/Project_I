{"ast":null,"code":"import { orientationIndex } from \"./util.js\";\n/**\n * Node\n */\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(coordinates) {\n    this.id = Node.buildId(coordinates);\n    this.coordinates = coordinates; //< {Number[]}\n\n    this.innerEdges = []; //< {Edge[]}\n    // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n\n    this.outerEdges = []; //< {Edge[]}\n\n    this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n  }\n\n  Node.buildId = function (coordinates) {\n    return coordinates.join(\",\");\n  };\n\n  Node.prototype.removeInnerEdge = function (edge) {\n    this.innerEdges = this.innerEdges.filter(function (e) {\n      return e.from.id !== edge.from.id;\n    });\n  };\n\n  Node.prototype.removeOuterEdge = function (edge) {\n    this.outerEdges = this.outerEdges.filter(function (e) {\n      return e.to.id !== edge.to.id;\n    });\n  };\n  /**\n   * Outer edges are stored CCW order.\n   *\n   * @memberof Node\n   * @param {Edge} edge - Edge to add as an outerEdge.\n   */\n\n\n  Node.prototype.addOuterEdge = function (edge) {\n    this.outerEdges.push(edge);\n    this.outerEdgesSorted = false;\n  };\n  /**\n   * Sorts outer edges in CCW way.\n   *\n   * @memberof Node\n   * @private\n   */\n\n\n  Node.prototype.sortOuterEdges = function () {\n    var _this = this;\n\n    if (!this.outerEdgesSorted) {\n      //this.outerEdges.sort((a, b) => a.compareTo(b));\n      // Using this comparator in order to be deterministic\n      this.outerEdges.sort(function (a, b) {\n        var aNode = a.to,\n            bNode = b.to;\n        if (aNode.coordinates[0] - _this.coordinates[0] >= 0 && bNode.coordinates[0] - _this.coordinates[0] < 0) return 1;\n        if (aNode.coordinates[0] - _this.coordinates[0] < 0 && bNode.coordinates[0] - _this.coordinates[0] >= 0) return -1;\n\n        if (aNode.coordinates[0] - _this.coordinates[0] === 0 && bNode.coordinates[0] - _this.coordinates[0] === 0) {\n          if (aNode.coordinates[1] - _this.coordinates[1] >= 0 || bNode.coordinates[1] - _this.coordinates[1] >= 0) return aNode.coordinates[1] - bNode.coordinates[1];\n          return bNode.coordinates[1] - aNode.coordinates[1];\n        }\n\n        var det = orientationIndex(_this.coordinates, aNode.coordinates, bNode.coordinates);\n        if (det < 0) return 1;\n        if (det > 0) return -1;\n        var d1 = Math.pow(aNode.coordinates[0] - _this.coordinates[0], 2) + Math.pow(aNode.coordinates[1] - _this.coordinates[1], 2),\n            d2 = Math.pow(bNode.coordinates[0] - _this.coordinates[0], 2) + Math.pow(bNode.coordinates[1] - _this.coordinates[1], 2);\n        return d1 - d2;\n      });\n      this.outerEdgesSorted = true;\n    }\n  };\n  /**\n   * Retrieves outer edges.\n   *\n   * They are sorted if they aren't in the CCW order.\n   *\n   * @memberof Node\n   * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n   */\n\n\n  Node.prototype.getOuterEdges = function () {\n    this.sortOuterEdges();\n    return this.outerEdges;\n  };\n\n  Node.prototype.getOuterEdge = function (i) {\n    this.sortOuterEdges();\n    return this.outerEdges[i];\n  };\n\n  Node.prototype.addInnerEdge = function (edge) {\n    this.innerEdges.push(edge);\n  };\n\n  return Node;\n}();\n\nexport default Node;","map":{"version":3,"names":["orientationIndex","Node","coordinates","id","buildId","innerEdges","outerEdges","outerEdgesSorted","join","prototype","removeInnerEdge","edge","filter","e","from","removeOuterEdge","to","addOuterEdge","push","sortOuterEdges","_this","sort","a","b","aNode","bNode","det","d1","Math","pow","d2","getOuterEdges","getOuterEdge","i","addInnerEdge"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/polygonize/dist/es/lib/Node.js"],"sourcesContent":["import { orientationIndex } from \"./util.js\";\n/**\n * Node\n */\nvar Node = /** @class */ (function () {\n    function Node(coordinates) {\n        this.id = Node.buildId(coordinates);\n        this.coordinates = coordinates; //< {Number[]}\n        this.innerEdges = []; //< {Edge[]}\n        // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n        this.outerEdges = []; //< {Edge[]}\n        this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n    }\n    Node.buildId = function (coordinates) {\n        return coordinates.join(\",\");\n    };\n    Node.prototype.removeInnerEdge = function (edge) {\n        this.innerEdges = this.innerEdges.filter(function (e) { return e.from.id !== edge.from.id; });\n    };\n    Node.prototype.removeOuterEdge = function (edge) {\n        this.outerEdges = this.outerEdges.filter(function (e) { return e.to.id !== edge.to.id; });\n    };\n    /**\n     * Outer edges are stored CCW order.\n     *\n     * @memberof Node\n     * @param {Edge} edge - Edge to add as an outerEdge.\n     */\n    Node.prototype.addOuterEdge = function (edge) {\n        this.outerEdges.push(edge);\n        this.outerEdgesSorted = false;\n    };\n    /**\n     * Sorts outer edges in CCW way.\n     *\n     * @memberof Node\n     * @private\n     */\n    Node.prototype.sortOuterEdges = function () {\n        var _this = this;\n        if (!this.outerEdgesSorted) {\n            //this.outerEdges.sort((a, b) => a.compareTo(b));\n            // Using this comparator in order to be deterministic\n            this.outerEdges.sort(function (a, b) {\n                var aNode = a.to, bNode = b.to;\n                if (aNode.coordinates[0] - _this.coordinates[0] >= 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] < 0)\n                    return 1;\n                if (aNode.coordinates[0] - _this.coordinates[0] < 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] >= 0)\n                    return -1;\n                if (aNode.coordinates[0] - _this.coordinates[0] === 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] === 0) {\n                    if (aNode.coordinates[1] - _this.coordinates[1] >= 0 ||\n                        bNode.coordinates[1] - _this.coordinates[1] >= 0)\n                        return aNode.coordinates[1] - bNode.coordinates[1];\n                    return bNode.coordinates[1] - aNode.coordinates[1];\n                }\n                var det = orientationIndex(_this.coordinates, aNode.coordinates, bNode.coordinates);\n                if (det < 0)\n                    return 1;\n                if (det > 0)\n                    return -1;\n                var d1 = Math.pow(aNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(aNode.coordinates[1] - _this.coordinates[1], 2), d2 = Math.pow(bNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(bNode.coordinates[1] - _this.coordinates[1], 2);\n                return d1 - d2;\n            });\n            this.outerEdgesSorted = true;\n        }\n    };\n    /**\n     * Retrieves outer edges.\n     *\n     * They are sorted if they aren't in the CCW order.\n     *\n     * @memberof Node\n     * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n     */\n    Node.prototype.getOuterEdges = function () {\n        this.sortOuterEdges();\n        return this.outerEdges;\n    };\n    Node.prototype.getOuterEdge = function (i) {\n        this.sortOuterEdges();\n        return this.outerEdges[i];\n    };\n    Node.prototype.addInnerEdge = function (edge) {\n        this.innerEdges.push(edge);\n    };\n    return Node;\n}());\nexport default Node;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}