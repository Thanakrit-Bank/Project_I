{"ast":null,"code":"import destination from \"@turf/destination\";\nimport { polygon } from \"@turf/helpers\";\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\n\nfunction circle(center, radius, options) {\n  if (options === void 0) {\n    options = {};\n  } // default params\n\n\n  var steps = options.steps || 64;\n  var properties = options.properties ? options.properties : !Array.isArray(center) && center.type === \"Feature\" && center.properties ? center.properties : {}; // main\n\n  var coordinates = [];\n\n  for (var i = 0; i < steps; i++) {\n    coordinates.push(destination(center, radius, i * -360 / steps, options).geometry.coordinates);\n  }\n\n  coordinates.push(coordinates[0]);\n  return polygon([coordinates], properties);\n}\n\nexport default circle;","map":{"version":3,"names":["destination","polygon","circle","center","radius","options","steps","properties","Array","isArray","type","coordinates","i","push","geometry"],"sources":["D:/Project/Mix_Project/Project_I/project1/node_modules/@turf/circle/dist/es/index.js"],"sourcesContent":["import destination from \"@turf/destination\";\nimport { polygon, } from \"@turf/helpers\";\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return polygon([coordinates], properties);\n}\nexport default circle;\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,SAASC,OAAT,QAAyB,eAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyC;EACrC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe,CADJ,CAErC;;;EACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,EAA7B;EACA,IAAIC,UAAU,GAAGF,OAAO,CAACE,UAAR,GACXF,OAAO,CAACE,UADG,GAEX,CAACC,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAD,IAA0BA,MAAM,CAACO,IAAP,KAAgB,SAA1C,IAAuDP,MAAM,CAACI,UAA9D,GACIJ,MAAM,CAACI,UADX,GAEI,EAJV,CAJqC,CASrC;;EACA,IAAII,WAAW,GAAG,EAAlB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,EAA5B,EAAgC;IAC5BD,WAAW,CAACE,IAAZ,CAAiBb,WAAW,CAACG,MAAD,EAASC,MAAT,EAAkBQ,CAAC,GAAG,CAAC,GAAN,GAAaN,KAA9B,EAAqCD,OAArC,CAAX,CAAyDS,QAAzD,CACZH,WADL;EAEH;;EACDA,WAAW,CAACE,IAAZ,CAAiBF,WAAW,CAAC,CAAD,CAA5B;EACA,OAAOV,OAAO,CAAC,CAACU,WAAD,CAAD,EAAgBJ,UAAhB,CAAd;AACH;;AACD,eAAeL,MAAf"},"metadata":{},"sourceType":"module"}