{"ast":null,"code":"import { feature, featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\n/**\r\n * Combines a {@link FeatureCollection} of {@link Point}, {@link LineString}, or {@link Polygon} features\r\n * into {@link MultiPoint}, {@link MultiLineString}, or {@link MultiPolygon} features.\r\n *\r\n * @name combine\r\n * @param {FeatureCollection<Point|LineString|Polygon>} fc a FeatureCollection of any type\r\n * @returns {FeatureCollection<MultiPoint|MultiLineString|MultiPolygon>} a FeatureCollection of corresponding type to input\r\n * @example\r\n * var fc = turf.featureCollection([\r\n *   turf.point([19.026432, 47.49134]),\r\n *   turf.point([19.074497, 47.509548])\r\n * ]);\r\n *\r\n * var combined = turf.combine(fc);\r\n *\r\n * //addToMap\r\n * var addToMap = [combined]\r\n */\n\nfunction combine(fc) {\n  var groups = {\n    MultiPoint: {\n      coordinates: [],\n      properties: []\n    },\n    MultiLineString: {\n      coordinates: [],\n      properties: []\n    },\n    MultiPolygon: {\n      coordinates: [],\n      properties: []\n    }\n  };\n  featureEach(fc, function (feature) {\n    var _a, _b, _c;\n\n    var _d;\n\n    switch ((_d = feature.geometry) === null || _d === void 0 ? void 0 : _d.type) {\n      case \"Point\":\n        groups.MultiPoint.coordinates.push(feature.geometry.coordinates);\n        groups.MultiPoint.properties.push(feature.properties);\n        break;\n\n      case \"MultiPoint\":\n        (_a = groups.MultiPoint.coordinates).push.apply(_a, feature.geometry.coordinates);\n\n        groups.MultiPoint.properties.push(feature.properties);\n        break;\n\n      case \"LineString\":\n        groups.MultiLineString.coordinates.push(feature.geometry.coordinates);\n        groups.MultiLineString.properties.push(feature.properties);\n        break;\n\n      case \"MultiLineString\":\n        (_b = groups.MultiLineString.coordinates).push.apply(_b, feature.geometry.coordinates);\n\n        groups.MultiLineString.properties.push(feature.properties);\n        break;\n\n      case \"Polygon\":\n        groups.MultiPolygon.coordinates.push(feature.geometry.coordinates);\n        groups.MultiPolygon.properties.push(feature.properties);\n        break;\n\n      case \"MultiPolygon\":\n        (_c = groups.MultiPolygon.coordinates).push.apply(_c, feature.geometry.coordinates);\n\n        groups.MultiPolygon.properties.push(feature.properties);\n        break;\n\n      default:\n        break;\n    }\n  });\n  return featureCollection(Object.keys(groups).filter(function (key) {\n    return groups[key].coordinates.length;\n  }).sort().map(function (key) {\n    var geometry = {\n      type: key,\n      coordinates: groups[key].coordinates\n    };\n    var properties = {\n      collectedProperties: groups[key].properties\n    };\n    return feature(geometry, properties);\n  }));\n}\n\nexport default combine;","map":{"version":3,"names":["feature","featureCollection","featureEach","combine","fc","groups","MultiPoint","coordinates","properties","MultiLineString","MultiPolygon","_a","_b","_c","_d","geometry","type","push","apply","Object","keys","filter","key","length","sort","map","collectedProperties"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/combine/dist/es/index.js"],"sourcesContent":["import { feature, featureCollection, } from \"@turf/helpers\";\r\nimport { featureEach } from \"@turf/meta\";\r\n/**\r\n * Combines a {@link FeatureCollection} of {@link Point}, {@link LineString}, or {@link Polygon} features\r\n * into {@link MultiPoint}, {@link MultiLineString}, or {@link MultiPolygon} features.\r\n *\r\n * @name combine\r\n * @param {FeatureCollection<Point|LineString|Polygon>} fc a FeatureCollection of any type\r\n * @returns {FeatureCollection<MultiPoint|MultiLineString|MultiPolygon>} a FeatureCollection of corresponding type to input\r\n * @example\r\n * var fc = turf.featureCollection([\r\n *   turf.point([19.026432, 47.49134]),\r\n *   turf.point([19.074497, 47.509548])\r\n * ]);\r\n *\r\n * var combined = turf.combine(fc);\r\n *\r\n * //addToMap\r\n * var addToMap = [combined]\r\n */\r\nfunction combine(fc) {\r\n    var groups = {\r\n        MultiPoint: {\r\n            coordinates: [],\r\n            properties: [],\r\n        },\r\n        MultiLineString: {\r\n            coordinates: [],\r\n            properties: [],\r\n        },\r\n        MultiPolygon: {\r\n            coordinates: [],\r\n            properties: [],\r\n        },\r\n    };\r\n    featureEach(fc, function (feature) {\r\n        var _a, _b, _c;\r\n        var _d;\r\n        switch ((_d = feature.geometry) === null || _d === void 0 ? void 0 : _d.type) {\r\n            case \"Point\":\r\n                groups.MultiPoint.coordinates.push(feature.geometry.coordinates);\r\n                groups.MultiPoint.properties.push(feature.properties);\r\n                break;\r\n            case \"MultiPoint\":\r\n                (_a = groups.MultiPoint.coordinates).push.apply(_a, feature.geometry.coordinates);\r\n                groups.MultiPoint.properties.push(feature.properties);\r\n                break;\r\n            case \"LineString\":\r\n                groups.MultiLineString.coordinates.push(feature.geometry.coordinates);\r\n                groups.MultiLineString.properties.push(feature.properties);\r\n                break;\r\n            case \"MultiLineString\":\r\n                (_b = groups.MultiLineString.coordinates).push.apply(_b, feature.geometry.coordinates);\r\n                groups.MultiLineString.properties.push(feature.properties);\r\n                break;\r\n            case \"Polygon\":\r\n                groups.MultiPolygon.coordinates.push(feature.geometry.coordinates);\r\n                groups.MultiPolygon.properties.push(feature.properties);\r\n                break;\r\n            case \"MultiPolygon\":\r\n                (_c = groups.MultiPolygon.coordinates).push.apply(_c, feature.geometry.coordinates);\r\n                groups.MultiPolygon.properties.push(feature.properties);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n    return featureCollection(Object.keys(groups)\r\n        .filter(function (key) {\r\n        return groups[key].coordinates.length;\r\n    })\r\n        .sort()\r\n        .map(function (key) {\r\n        var geometry = { type: key, coordinates: groups[key].coordinates };\r\n        var properties = { collectedProperties: groups[key].properties };\r\n        return feature(geometry, properties);\r\n    }));\r\n}\r\nexport default combine;\r\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,iBAAlB,QAA4C,eAA5C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;EACjB,IAAIC,MAAM,GAAG;IACTC,UAAU,EAAE;MACRC,WAAW,EAAE,EADL;MAERC,UAAU,EAAE;IAFJ,CADH;IAKTC,eAAe,EAAE;MACbF,WAAW,EAAE,EADA;MAEbC,UAAU,EAAE;IAFC,CALR;IASTE,YAAY,EAAE;MACVH,WAAW,EAAE,EADH;MAEVC,UAAU,EAAE;IAFF;EATL,CAAb;EAcAN,WAAW,CAACE,EAAD,EAAK,UAAUJ,OAAV,EAAmB;IAC/B,IAAIW,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;IACA,IAAIC,EAAJ;;IACA,QAAQ,CAACA,EAAE,GAAGd,OAAO,CAACe,QAAd,MAA4B,IAA5B,IAAoCD,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACE,IAAxE;MACI,KAAK,OAAL;QACIX,MAAM,CAACC,UAAP,CAAkBC,WAAlB,CAA8BU,IAA9B,CAAmCjB,OAAO,CAACe,QAAR,CAAiBR,WAApD;QACAF,MAAM,CAACC,UAAP,CAAkBE,UAAlB,CAA6BS,IAA7B,CAAkCjB,OAAO,CAACQ,UAA1C;QACA;;MACJ,KAAK,YAAL;QACI,CAACG,EAAE,GAAGN,MAAM,CAACC,UAAP,CAAkBC,WAAxB,EAAqCU,IAArC,CAA0CC,KAA1C,CAAgDP,EAAhD,EAAoDX,OAAO,CAACe,QAAR,CAAiBR,WAArE;;QACAF,MAAM,CAACC,UAAP,CAAkBE,UAAlB,CAA6BS,IAA7B,CAAkCjB,OAAO,CAACQ,UAA1C;QACA;;MACJ,KAAK,YAAL;QACIH,MAAM,CAACI,eAAP,CAAuBF,WAAvB,CAAmCU,IAAnC,CAAwCjB,OAAO,CAACe,QAAR,CAAiBR,WAAzD;QACAF,MAAM,CAACI,eAAP,CAAuBD,UAAvB,CAAkCS,IAAlC,CAAuCjB,OAAO,CAACQ,UAA/C;QACA;;MACJ,KAAK,iBAAL;QACI,CAACI,EAAE,GAAGP,MAAM,CAACI,eAAP,CAAuBF,WAA7B,EAA0CU,IAA1C,CAA+CC,KAA/C,CAAqDN,EAArD,EAAyDZ,OAAO,CAACe,QAAR,CAAiBR,WAA1E;;QACAF,MAAM,CAACI,eAAP,CAAuBD,UAAvB,CAAkCS,IAAlC,CAAuCjB,OAAO,CAACQ,UAA/C;QACA;;MACJ,KAAK,SAAL;QACIH,MAAM,CAACK,YAAP,CAAoBH,WAApB,CAAgCU,IAAhC,CAAqCjB,OAAO,CAACe,QAAR,CAAiBR,WAAtD;QACAF,MAAM,CAACK,YAAP,CAAoBF,UAApB,CAA+BS,IAA/B,CAAoCjB,OAAO,CAACQ,UAA5C;QACA;;MACJ,KAAK,cAAL;QACI,CAACK,EAAE,GAAGR,MAAM,CAACK,YAAP,CAAoBH,WAA1B,EAAuCU,IAAvC,CAA4CC,KAA5C,CAAkDL,EAAlD,EAAsDb,OAAO,CAACe,QAAR,CAAiBR,WAAvE;;QACAF,MAAM,CAACK,YAAP,CAAoBF,UAApB,CAA+BS,IAA/B,CAAoCjB,OAAO,CAACQ,UAA5C;QACA;;MACJ;QACI;IA1BR;EA4BH,CA/BU,CAAX;EAgCA,OAAOP,iBAAiB,CAACkB,MAAM,CAACC,IAAP,CAAYf,MAAZ,EACpBgB,MADoB,CACb,UAAUC,GAAV,EAAe;IACvB,OAAOjB,MAAM,CAACiB,GAAD,CAAN,CAAYf,WAAZ,CAAwBgB,MAA/B;EACH,CAHwB,EAIpBC,IAJoB,GAKpBC,GALoB,CAKhB,UAAUH,GAAV,EAAe;IACpB,IAAIP,QAAQ,GAAG;MAAEC,IAAI,EAAEM,GAAR;MAAaf,WAAW,EAAEF,MAAM,CAACiB,GAAD,CAAN,CAAYf;IAAtC,CAAf;IACA,IAAIC,UAAU,GAAG;MAAEkB,mBAAmB,EAAErB,MAAM,CAACiB,GAAD,CAAN,CAAYd;IAAnC,CAAjB;IACA,OAAOR,OAAO,CAACe,QAAD,EAAWP,UAAX,CAAd;EACH,CATwB,CAAD,CAAxB;AAUH;;AACD,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}