{"ast":null,"code":"import { getCoord } from '@turf/invariant';\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function Coord(lon, lat) {\n  this.lon = lon;\n  this.lat = lat;\n  this.x = D2R * lon;\n  this.y = D2R * lat;\n};\n\nCoord.prototype.view = function () {\n  return String(this.lon).slice(0, 4) + \",\" + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function () {\n  var anti_lat = -1 * this.lat;\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\n  return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function LineString() {\n  this.coords = [];\n  this.length = 0;\n};\n\nLineString.prototype.move_to = function (coord) {\n  this.length++;\n  this.coords.push(coord);\n};\n\nvar Arc = function Arc(properties) {\n  this.properties = properties || {};\n  this.geometries = [];\n};\n\nArc.prototype.json = function () {\n  if (this.geometries.length <= 0) {\n    return {\n      geometry: {\n        type: \"LineString\",\n        coordinates: null\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  } else if (this.geometries.length === 1) {\n    return {\n      geometry: {\n        type: \"LineString\",\n        coordinates: this.geometries[0].coords\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  } else {\n    var multiline = [];\n\n    for (var i = 0; i < this.geometries.length; i++) {\n      multiline.push(this.geometries[i].coords);\n    }\n\n    return {\n      geometry: {\n        type: \"MultiLineString\",\n        coordinates: multiline\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  }\n}; // TODO - output proper multilinestring\n\n\nArc.prototype.wkt = function () {\n  var wkt_string = \"\";\n  var wkt = \"LINESTRING(\";\n\n  var collect = function collect(c) {\n    wkt += c[0] + \" \" + c[1] + \",\";\n  };\n\n  for (var i = 0; i < this.geometries.length; i++) {\n    if (this.geometries[i].coords.length === 0) {\n      return \"LINESTRING(empty)\";\n    } else {\n      var coords = this.geometries[i].coords;\n      coords.forEach(collect);\n      wkt_string += wkt.substring(0, wkt.length - 1) + \")\";\n    }\n  }\n\n  return wkt_string;\n};\n/*\r\n * http://en.wikipedia.org/wiki/Great-circle_distance\r\n *\r\n */\n\n\nvar GreatCircle = function GreatCircle(start, end, properties) {\n  if (!start || start.x === undefined || start.y === undefined) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n\n  if (!end || end.x === undefined || end.y === undefined) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n\n  this.start = new Coord(start.x, start.y);\n  this.end = new Coord(end.x, end.y);\n  this.properties = properties || {};\n  var w = this.start.x - this.end.x;\n  var h = this.start.y - this.end.y;\n  var z = Math.pow(Math.sin(h / 2.0), 2) + Math.cos(this.start.y) * Math.cos(this.end.y) * Math.pow(Math.sin(w / 2.0), 2);\n  this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n  if (this.g === Math.PI) {\n    throw new Error(\"it appears \" + start.view() + \" and \" + end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n  } else if (isNaN(this.g)) {\n    throw new Error(\"could not calculate great circle between \" + start + \" and \" + end);\n  }\n};\n/*\r\n * http://williams.best.vwh.net/avform.htm#Intermediate\r\n */\n\n\nGreatCircle.prototype.interpolate = function (f) {\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\n  var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n  var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n  var lon = R2D * Math.atan2(y, x);\n  return [lon, lat];\n};\n/*\r\n * Generate points along the great circle\r\n */\n\n\nGreatCircle.prototype.Arc = function (npoints, options) {\n  var first_pass = [];\n\n  if (!npoints || npoints <= 2) {\n    first_pass.push([this.start.lon, this.start.lat]);\n    first_pass.push([this.end.lon, this.end.lat]);\n  } else {\n    var delta = 1.0 / (npoints - 1);\n\n    for (var i = 0; i < npoints; ++i) {\n      var step = delta * i;\n      var pair = this.interpolate(step);\n      first_pass.push(pair);\n    }\n  }\n  /* partial port of dateline handling from:\r\n      gdal/ogr/ogrgeometryfactory.cpp\r\n        TODO - does not handle all wrapping scenarios yet\r\n    */\n\n\n  var bHasBigDiff = false;\n  var dfMaxSmallDiffLong = 0; // from http://www.gdal.org/ogr2ogr.html\n  // -datelineoffset:\n  // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\n  var dfLeftBorderX = 180 - dfDateLineOffset;\n  var dfRightBorderX = -180 + dfDateLineOffset;\n  var dfDiffSpace = 360 - dfDateLineOffset; // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n\n  for (var j = 1; j < first_pass.length; ++j) {\n    var dfPrevX = first_pass[j - 1][0];\n    var dfX = first_pass[j][0];\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\n\n    if (dfDiffLong > dfDiffSpace && (dfX > dfLeftBorderX && dfPrevX < dfRightBorderX || dfPrevX > dfLeftBorderX && dfX < dfRightBorderX)) {\n      bHasBigDiff = true;\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\n      dfMaxSmallDiffLong = dfDiffLong;\n    }\n  }\n\n  var poMulti = [];\n\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n    var poNewLS = [];\n    poMulti.push(poNewLS);\n\n    for (var k = 0; k < first_pass.length; ++k) {\n      var dfX0 = parseFloat(first_pass[k][0]);\n\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\n        var dfX2 = parseFloat(first_pass[k][0]);\n        var dfY2 = parseFloat(first_pass[k][1]);\n\n        if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 === 180 && k + 1 < first_pass.length && first_pass[k - 1][0] > -180 && first_pass[k - 1][0] < dfRightBorderX) {\n          poNewLS.push([-180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 === -180 && k + 1 < first_pass.length && first_pass[k - 1][0] > dfLeftBorderX && first_pass[k - 1][0] < 180) {\n          poNewLS.push([180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        }\n\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n          // swap dfX1, dfX2\n          var tmpX = dfX1;\n          dfX1 = dfX2;\n          dfX2 = tmpX; // swap dfY1, dfY2\n\n          var tmpY = dfY1;\n          dfY1 = dfY2;\n          dfY2 = tmpY;\n        }\n\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n          dfX2 += 360;\n        }\n\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n          poNewLS = [];\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n          poMulti.push(poNewLS);\n        } else {\n          poNewLS = [];\n          poMulti.push(poNewLS);\n        }\n\n        poNewLS.push([dfX0, first_pass[k][1]]);\n      } else {\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n      }\n    }\n  } else {\n    // add normally\n    var poNewLS0 = [];\n    poMulti.push(poNewLS0);\n\n    for (var l = 0; l < first_pass.length; ++l) {\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n    }\n  }\n\n  var arc = new Arc(this.properties);\n\n  for (var m = 0; m < poMulti.length; ++m) {\n    var line = new LineString();\n    arc.geometries.push(line);\n    var points = poMulti[m];\n\n    for (var j0 = 0; j0 < points.length; ++j0) {\n      line.move_to(points[j0]);\n    }\n  }\n\n  return arc;\n};\n/**\r\n * Calculate great circles routes as {@link LineString} or {@link MultiLineString}.\r\n * If the `start` and `end` points span the antimeridian, the resulting feature will\r\n * be split into a `MultiLineString`.\r\n *\r\n * @name greatCircle\r\n * @param {Coord} start source point feature\r\n * @param {Coord} end destination point feature\r\n * @param {Object} [options={}] Optional parameters\r\n * @param {Object} [options.properties={}] line feature properties\r\n * @param {number} [options.npoints=100] number of points\r\n * @param {number} [options.offset=10] offset controls the likelyhood that lines will\r\n * be split which cross the dateline. The higher the number the more likely.\r\n * @returns {Feature<LineString | MultiLineString>} great circle line feature\r\n * @example\r\n * var start = turf.point([-122, 48]);\r\n * var end = turf.point([-77, 39]);\r\n *\r\n * var greatCircle = turf.greatCircle(start, end, {properties: {name: 'Seattle to DC'}});\r\n *\r\n * //addToMap\r\n * var addToMap = [start, end, greatCircle]\r\n */\n\n\nfunction greatCircle(start, end, options) {\n  // Optional parameters\n  options = options || {};\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\n  var properties = options.properties;\n  var npoints = options.npoints;\n  var offset = options.offset;\n  start = getCoord(start);\n  end = getCoord(end);\n  properties = properties || {};\n  npoints = npoints || 100;\n  offset = offset || 10;\n  var generator = new GreatCircle({\n    x: start[0],\n    y: start[1]\n  }, {\n    x: end[0],\n    y: end[1]\n  }, properties);\n  var line = generator.Arc(npoints, {\n    offset: offset\n  });\n  return line.json();\n}\n\nexport default greatCircle;","map":{"version":3,"names":["getCoord","D2R","Math","PI","R2D","Coord","lon","lat","x","y","prototype","view","String","slice","antipode","anti_lat","anti_lon","LineString","coords","length","move_to","coord","push","Arc","properties","geometries","json","geometry","type","coordinates","multiline","i","wkt","wkt_string","collect","c","forEach","substring","GreatCircle","start","end","undefined","Error","w","h","z","pow","sin","cos","g","asin","sqrt","isNaN","interpolate","f","A","B","atan2","npoints","options","first_pass","delta","step","pair","bHasBigDiff","dfMaxSmallDiffLong","dfDateLineOffset","offset","dfLeftBorderX","dfRightBorderX","dfDiffSpace","j","dfPrevX","dfX","dfDiffLong","abs","poMulti","poNewLS","k","dfX0","parseFloat","dfX1","dfY1","dfX2","dfY2","tmpX","tmpY","dfRatio","dfY","poNewLS0","l","arc","m","line","points","j0","greatCircle","generator"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/great-circle/dist/es/index.js"],"sourcesContent":["import { getCoord } from '@turf/invariant';\r\n\r\nvar D2R = Math.PI / 180;\r\nvar R2D = 180 / Math.PI;\r\n\r\nvar Coord = function (lon, lat) {\r\n  this.lon = lon;\r\n  this.lat = lat;\r\n  this.x = D2R * lon;\r\n  this.y = D2R * lat;\r\n};\r\n\r\nCoord.prototype.view = function () {\r\n  return String(this.lon).slice(0, 4) + \",\" + String(this.lat).slice(0, 4);\r\n};\r\n\r\nCoord.prototype.antipode = function () {\r\n  var anti_lat = -1 * this.lat;\r\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\r\n  return new Coord(anti_lon, anti_lat);\r\n};\r\n\r\nvar LineString = function () {\r\n  this.coords = [];\r\n  this.length = 0;\r\n};\r\n\r\nLineString.prototype.move_to = function (coord) {\r\n  this.length++;\r\n  this.coords.push(coord);\r\n};\r\n\r\nvar Arc = function (properties) {\r\n  this.properties = properties || {};\r\n  this.geometries = [];\r\n};\r\n\r\nArc.prototype.json = function () {\r\n  if (this.geometries.length <= 0) {\r\n    return {\r\n      geometry: { type: \"LineString\", coordinates: null },\r\n      type: \"Feature\",\r\n      properties: this.properties,\r\n    };\r\n  } else if (this.geometries.length === 1) {\r\n    return {\r\n      geometry: { type: \"LineString\", coordinates: this.geometries[0].coords },\r\n      type: \"Feature\",\r\n      properties: this.properties,\r\n    };\r\n  } else {\r\n    var multiline = [];\r\n    for (var i = 0; i < this.geometries.length; i++) {\r\n      multiline.push(this.geometries[i].coords);\r\n    }\r\n    return {\r\n      geometry: { type: \"MultiLineString\", coordinates: multiline },\r\n      type: \"Feature\",\r\n      properties: this.properties,\r\n    };\r\n  }\r\n};\r\n\r\n// TODO - output proper multilinestring\r\nArc.prototype.wkt = function () {\r\n  var wkt_string = \"\";\r\n  var wkt = \"LINESTRING(\";\r\n  var collect = function (c) {\r\n    wkt += c[0] + \" \" + c[1] + \",\";\r\n  };\r\n  for (var i = 0; i < this.geometries.length; i++) {\r\n    if (this.geometries[i].coords.length === 0) {\r\n      return \"LINESTRING(empty)\";\r\n    } else {\r\n      var coords = this.geometries[i].coords;\r\n      coords.forEach(collect);\r\n      wkt_string += wkt.substring(0, wkt.length - 1) + \")\";\r\n    }\r\n  }\r\n  return wkt_string;\r\n};\r\n\r\n/*\r\n * http://en.wikipedia.org/wiki/Great-circle_distance\r\n *\r\n */\r\nvar GreatCircle = function (start, end, properties) {\r\n  if (!start || start.x === undefined || start.y === undefined) {\r\n    throw new Error(\r\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\r\n    );\r\n  }\r\n  if (!end || end.x === undefined || end.y === undefined) {\r\n    throw new Error(\r\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\r\n    );\r\n  }\r\n  this.start = new Coord(start.x, start.y);\r\n  this.end = new Coord(end.x, end.y);\r\n  this.properties = properties || {};\r\n\r\n  var w = this.start.x - this.end.x;\r\n  var h = this.start.y - this.end.y;\r\n  var z =\r\n    Math.pow(Math.sin(h / 2.0), 2) +\r\n    Math.cos(this.start.y) *\r\n      Math.cos(this.end.y) *\r\n      Math.pow(Math.sin(w / 2.0), 2);\r\n  this.g = 2.0 * Math.asin(Math.sqrt(z));\r\n\r\n  if (this.g === Math.PI) {\r\n    throw new Error(\r\n      \"it appears \" +\r\n        start.view() +\r\n        \" and \" +\r\n        end.view() +\r\n        \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\"\r\n    );\r\n  } else if (isNaN(this.g)) {\r\n    throw new Error(\r\n      \"could not calculate great circle between \" + start + \" and \" + end\r\n    );\r\n  }\r\n};\r\n\r\n/*\r\n * http://williams.best.vwh.net/avform.htm#Intermediate\r\n */\r\nGreatCircle.prototype.interpolate = function (f) {\r\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\r\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\r\n  var x =\r\n    A * Math.cos(this.start.y) * Math.cos(this.start.x) +\r\n    B * Math.cos(this.end.y) * Math.cos(this.end.x);\r\n  var y =\r\n    A * Math.cos(this.start.y) * Math.sin(this.start.x) +\r\n    B * Math.cos(this.end.y) * Math.sin(this.end.x);\r\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\r\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\r\n  var lon = R2D * Math.atan2(y, x);\r\n  return [lon, lat];\r\n};\r\n\r\n/*\r\n * Generate points along the great circle\r\n */\r\nGreatCircle.prototype.Arc = function (npoints, options) {\r\n  var first_pass = [];\r\n  if (!npoints || npoints <= 2) {\r\n    first_pass.push([this.start.lon, this.start.lat]);\r\n    first_pass.push([this.end.lon, this.end.lat]);\r\n  } else {\r\n    var delta = 1.0 / (npoints - 1);\r\n    for (var i = 0; i < npoints; ++i) {\r\n      var step = delta * i;\r\n      var pair = this.interpolate(step);\r\n      first_pass.push(pair);\r\n    }\r\n  }\r\n  /* partial port of dateline handling from:\r\n      gdal/ogr/ogrgeometryfactory.cpp\r\n\r\n      TODO - does not handle all wrapping scenarios yet\r\n    */\r\n  var bHasBigDiff = false;\r\n  var dfMaxSmallDiffLong = 0;\r\n  // from http://www.gdal.org/ogr2ogr.html\r\n  // -datelineoffset:\r\n  // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\r\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\r\n  var dfLeftBorderX = 180 - dfDateLineOffset;\r\n  var dfRightBorderX = -180 + dfDateLineOffset;\r\n  var dfDiffSpace = 360 - dfDateLineOffset;\r\n\r\n  // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\r\n  for (var j = 1; j < first_pass.length; ++j) {\r\n    var dfPrevX = first_pass[j - 1][0];\r\n    var dfX = first_pass[j][0];\r\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\r\n    if (\r\n      dfDiffLong > dfDiffSpace &&\r\n      ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) ||\r\n        (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))\r\n    ) {\r\n      bHasBigDiff = true;\r\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\r\n      dfMaxSmallDiffLong = dfDiffLong;\r\n    }\r\n  }\r\n\r\n  var poMulti = [];\r\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\r\n    var poNewLS = [];\r\n    poMulti.push(poNewLS);\r\n    for (var k = 0; k < first_pass.length; ++k) {\r\n      var dfX0 = parseFloat(first_pass[k][0]);\r\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\r\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\r\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\r\n        var dfX2 = parseFloat(first_pass[k][0]);\r\n        var dfY2 = parseFloat(first_pass[k][1]);\r\n        if (\r\n          dfX1 > -180 &&\r\n          dfX1 < dfRightBorderX &&\r\n          dfX2 === 180 &&\r\n          k + 1 < first_pass.length &&\r\n          first_pass[k - 1][0] > -180 &&\r\n          first_pass[k - 1][0] < dfRightBorderX\r\n        ) {\r\n          poNewLS.push([-180, first_pass[k][1]]);\r\n          k++;\r\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\r\n          continue;\r\n        } else if (\r\n          dfX1 > dfLeftBorderX &&\r\n          dfX1 < 180 &&\r\n          dfX2 === -180 &&\r\n          k + 1 < first_pass.length &&\r\n          first_pass[k - 1][0] > dfLeftBorderX &&\r\n          first_pass[k - 1][0] < 180\r\n        ) {\r\n          poNewLS.push([180, first_pass[k][1]]);\r\n          k++;\r\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\r\n          continue;\r\n        }\r\n\r\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\r\n          // swap dfX1, dfX2\r\n          var tmpX = dfX1;\r\n          dfX1 = dfX2;\r\n          dfX2 = tmpX;\r\n          // swap dfY1, dfY2\r\n          var tmpY = dfY1;\r\n          dfY1 = dfY2;\r\n          dfY2 = tmpY;\r\n        }\r\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\r\n          dfX2 += 360;\r\n        }\r\n\r\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\r\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\r\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\r\n          poNewLS.push([\r\n            first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180,\r\n            dfY,\r\n          ]);\r\n          poNewLS = [];\r\n          poNewLS.push([\r\n            first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180,\r\n            dfY,\r\n          ]);\r\n          poMulti.push(poNewLS);\r\n        } else {\r\n          poNewLS = [];\r\n          poMulti.push(poNewLS);\r\n        }\r\n        poNewLS.push([dfX0, first_pass[k][1]]);\r\n      } else {\r\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\r\n      }\r\n    }\r\n  } else {\r\n    // add normally\r\n    var poNewLS0 = [];\r\n    poMulti.push(poNewLS0);\r\n    for (var l = 0; l < first_pass.length; ++l) {\r\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\r\n    }\r\n  }\r\n\r\n  var arc = new Arc(this.properties);\r\n  for (var m = 0; m < poMulti.length; ++m) {\r\n    var line = new LineString();\r\n    arc.geometries.push(line);\r\n    var points = poMulti[m];\r\n    for (var j0 = 0; j0 < points.length; ++j0) {\r\n      line.move_to(points[j0]);\r\n    }\r\n  }\r\n  return arc;\r\n};\r\n\r\n/**\r\n * Calculate great circles routes as {@link LineString} or {@link MultiLineString}.\r\n * If the `start` and `end` points span the antimeridian, the resulting feature will\r\n * be split into a `MultiLineString`.\r\n *\r\n * @name greatCircle\r\n * @param {Coord} start source point feature\r\n * @param {Coord} end destination point feature\r\n * @param {Object} [options={}] Optional parameters\r\n * @param {Object} [options.properties={}] line feature properties\r\n * @param {number} [options.npoints=100] number of points\r\n * @param {number} [options.offset=10] offset controls the likelyhood that lines will\r\n * be split which cross the dateline. The higher the number the more likely.\r\n * @returns {Feature<LineString | MultiLineString>} great circle line feature\r\n * @example\r\n * var start = turf.point([-122, 48]);\r\n * var end = turf.point([-77, 39]);\r\n *\r\n * var greatCircle = turf.greatCircle(start, end, {properties: {name: 'Seattle to DC'}});\r\n *\r\n * //addToMap\r\n * var addToMap = [start, end, greatCircle]\r\n */\r\nfunction greatCircle(start, end, options) {\r\n  // Optional parameters\r\n  options = options || {};\r\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\r\n  var properties = options.properties;\r\n  var npoints = options.npoints;\r\n  var offset = options.offset;\r\n\r\n  start = getCoord(start);\r\n  end = getCoord(end);\r\n  properties = properties || {};\r\n  npoints = npoints || 100;\r\n  offset = offset || 10;\r\n\r\n  var generator = new GreatCircle(\r\n    { x: start[0], y: start[1] },\r\n    { x: end[0], y: end[1] },\r\n    properties\r\n  );\r\n\r\n  var line = generator.Arc(npoints, { offset: offset });\r\n\r\n  return line.json();\r\n}\r\n\r\nexport default greatCircle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}