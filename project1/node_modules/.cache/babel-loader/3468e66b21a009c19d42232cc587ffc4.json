{"ast":null,"code":"import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","map":{"version":3,"names":["cartesian","abs","asin","atan2","cos","epsilon","radians","sqrt","transformer","maxDepth","cosMinDistance","project","delta2","resample","resampleNone","point","x","y","stream","resampleLineTo","x0","y0","lambda0","a0","b0","c0","x1","y1","lambda1","a1","b1","c1","depth","dx","dy","d2","a","b","c","m","phi2","lambda2","p","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","lineStart","lineEnd","polygonStart","ringStart","polygonEnd","NaN","linePoint","lambda","phi","ringPoint","ringEnd"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/d3-geo/src/projection/resample.js"],"sourcesContent":["import {cartesian} from \"../cartesian\";\r\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\r\nimport {transformer} from \"../transform\";\r\n\r\nvar maxDepth = 16, // maximum depth of subdivision\r\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\r\n\r\nexport default function(project, delta2) {\r\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\r\n}\r\n\r\nfunction resampleNone(project) {\r\n  return transformer({\r\n    point: function(x, y) {\r\n      x = project(x, y);\r\n      this.stream.point(x[0], x[1]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction resample(project, delta2) {\r\n\r\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\r\n    var dx = x1 - x0,\r\n        dy = y1 - y0,\r\n        d2 = dx * dx + dy * dy;\r\n    if (d2 > 4 * delta2 && depth--) {\r\n      var a = a0 + a1,\r\n          b = b0 + b1,\r\n          c = c0 + c1,\r\n          m = sqrt(a * a + b * b + c * c),\r\n          phi2 = asin(c /= m),\r\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\r\n          p = project(lambda2, phi2),\r\n          x2 = p[0],\r\n          y2 = p[1],\r\n          dx2 = x2 - x0,\r\n          dy2 = y2 - y0,\r\n          dz = dy * dx2 - dx * dy2;\r\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\r\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\r\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\r\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\r\n        stream.point(x2, y2);\r\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\r\n      }\r\n    }\r\n  }\r\n  return function(stream) {\r\n    var lambda00, x00, y00, a00, b00, c00, // first point\r\n        lambda0, x0, y0, a0, b0, c0; // previous point\r\n\r\n    var resampleStream = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\r\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\r\n    };\r\n\r\n    function point(x, y) {\r\n      x = project(x, y);\r\n      stream.point(x[0], x[1]);\r\n    }\r\n\r\n    function lineStart() {\r\n      x0 = NaN;\r\n      resampleStream.point = linePoint;\r\n      stream.lineStart();\r\n    }\r\n\r\n    function linePoint(lambda, phi) {\r\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n      stream.point(x0, y0);\r\n    }\r\n\r\n    function lineEnd() {\r\n      resampleStream.point = point;\r\n      stream.lineEnd();\r\n    }\r\n\r\n    function ringStart() {\r\n      lineStart();\r\n      resampleStream.point = ringPoint;\r\n      resampleStream.lineEnd = ringEnd;\r\n    }\r\n\r\n    function ringPoint(lambda, phi) {\r\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n      resampleStream.point = linePoint;\r\n    }\r\n\r\n    function ringEnd() {\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\r\n      resampleStream.lineEnd = lineEnd;\r\n      lineEnd();\r\n    }\r\n\r\n    return resampleStream;\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}