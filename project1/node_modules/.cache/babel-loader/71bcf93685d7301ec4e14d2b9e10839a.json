{"ast":null,"code":"import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport clone from '@turf/clone';\nimport { featureEach } from '@turf/meta';\n/**\r\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and/or {@link MultiPolygon|multipolygons} and performs a spatial join.\r\n *\r\n * @name tag\r\n * @param {FeatureCollection<Point>} points input points\r\n * @param {FeatureCollection<Polygon|MultiPolygon>} polygons input (multi)polygons\r\n * @param {string} field property in `polygons` to add to joined {<Point>} features\r\n * @param {string} outField property in `points` in which to store joined property from `polygons`\r\n * @returns {FeatureCollection<Point>} points with `containingPolyId` property containing values from `polyId`\r\n * @example\r\n * var pt1 = turf.point([-77, 44]);\r\n * var pt2 = turf.point([-77, 38]);\r\n * var poly1 = turf.polygon([[\r\n *   [-81, 41],\r\n *   [-81, 47],\r\n *   [-72, 47],\r\n *   [-72, 41],\r\n *   [-81, 41]\r\n * ]], {pop: 3000});\r\n * var poly2 = turf.polygon([[\r\n *   [-81, 35],\r\n *   [-81, 41],\r\n *   [-72, 41],\r\n *   [-72, 35],\r\n *   [-81, 35]\r\n * ]], {pop: 1000});\r\n *\r\n * var points = turf.featureCollection([pt1, pt2]);\r\n * var polygons = turf.featureCollection([poly1, poly2]);\r\n *\r\n * var tagged = turf.tag(points, polygons, 'pop', 'population');\r\n *\r\n * //addToMap\r\n * var addToMap = [tagged, polygons]\r\n */\n\nfunction tag(points, polygons, field, outField) {\n  // prevent mutations\n  points = clone(points);\n  polygons = clone(polygons);\n  featureEach(points, function (pt) {\n    if (!pt.properties) pt.properties = {};\n    featureEach(polygons, function (poly) {\n      if (pt.properties[outField] === undefined) {\n        if (booleanPointInPolygon(pt, poly)) pt.properties[outField] = poly.properties[field];\n      }\n    });\n  });\n  return points;\n}\n\nexport default tag;","map":{"version":3,"names":["booleanPointInPolygon","clone","featureEach","tag","points","polygons","field","outField","pt","properties","poly","undefined"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/tag/dist/es/index.js"],"sourcesContent":["import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\r\nimport clone from '@turf/clone';\r\nimport { featureEach } from '@turf/meta';\r\n\r\n/**\r\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and/or {@link MultiPolygon|multipolygons} and performs a spatial join.\r\n *\r\n * @name tag\r\n * @param {FeatureCollection<Point>} points input points\r\n * @param {FeatureCollection<Polygon|MultiPolygon>} polygons input (multi)polygons\r\n * @param {string} field property in `polygons` to add to joined {<Point>} features\r\n * @param {string} outField property in `points` in which to store joined property from `polygons`\r\n * @returns {FeatureCollection<Point>} points with `containingPolyId` property containing values from `polyId`\r\n * @example\r\n * var pt1 = turf.point([-77, 44]);\r\n * var pt2 = turf.point([-77, 38]);\r\n * var poly1 = turf.polygon([[\r\n *   [-81, 41],\r\n *   [-81, 47],\r\n *   [-72, 47],\r\n *   [-72, 41],\r\n *   [-81, 41]\r\n * ]], {pop: 3000});\r\n * var poly2 = turf.polygon([[\r\n *   [-81, 35],\r\n *   [-81, 41],\r\n *   [-72, 41],\r\n *   [-72, 35],\r\n *   [-81, 35]\r\n * ]], {pop: 1000});\r\n *\r\n * var points = turf.featureCollection([pt1, pt2]);\r\n * var polygons = turf.featureCollection([poly1, poly2]);\r\n *\r\n * var tagged = turf.tag(points, polygons, 'pop', 'population');\r\n *\r\n * //addToMap\r\n * var addToMap = [tagged, polygons]\r\n */\r\nfunction tag(points, polygons, field, outField) {\r\n  // prevent mutations\r\n  points = clone(points);\r\n  polygons = clone(polygons);\r\n  featureEach(points, function (pt) {\r\n    if (!pt.properties) pt.properties = {};\r\n    featureEach(polygons, function (poly) {\r\n      if (pt.properties[outField] === undefined) {\r\n        if (booleanPointInPolygon(pt, poly))\r\n          pt.properties[outField] = poly.properties[field];\r\n      }\r\n    });\r\n  });\r\n  return points;\r\n}\r\n\r\nexport default tag;\r\n"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,CAAaC,MAAb,EAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,QAAtC,EAAgD;EAC9C;EACAH,MAAM,GAAGH,KAAK,CAACG,MAAD,CAAd;EACAC,QAAQ,GAAGJ,KAAK,CAACI,QAAD,CAAhB;EACAH,WAAW,CAACE,MAAD,EAAS,UAAUI,EAAV,EAAc;IAChC,IAAI,CAACA,EAAE,CAACC,UAAR,EAAoBD,EAAE,CAACC,UAAH,GAAgB,EAAhB;IACpBP,WAAW,CAACG,QAAD,EAAW,UAAUK,IAAV,EAAgB;MACpC,IAAIF,EAAE,CAACC,UAAH,CAAcF,QAAd,MAA4BI,SAAhC,EAA2C;QACzC,IAAIX,qBAAqB,CAACQ,EAAD,EAAKE,IAAL,CAAzB,EACEF,EAAE,CAACC,UAAH,CAAcF,QAAd,IAA0BG,IAAI,CAACD,UAAL,CAAgBH,KAAhB,CAA1B;MACH;IACF,CALU,CAAX;EAMD,CARU,CAAX;EASA,OAAOF,MAAP;AACD;;AAED,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}