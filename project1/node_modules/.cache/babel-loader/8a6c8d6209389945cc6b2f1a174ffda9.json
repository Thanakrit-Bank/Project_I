{"ast":null,"code":"import { polygon, multiPolygon } from '@turf/helpers';\nimport polygonClipping from 'polygon-clipping';\n/**\r\n * Takes any type of {@link Polygon|polygon} and an optional mask and returns a {@link Polygon|polygon} exterior ring with holes.\r\n *\r\n * @name mask\r\n * @param {FeatureCollection|Feature<Polygon|MultiPolygon>} polygon GeoJSON Polygon used as interior rings or holes.\r\n * @param {Feature<Polygon>} [mask] GeoJSON Polygon used as the exterior ring (if undefined, the world extent is used)\r\n * @returns {Feature<Polygon>} Masked Polygon (exterior ring with holes).\r\n * @example\r\n * var polygon = turf.polygon([[[112, -21], [116, -36], [146, -39], [153, -24], [133, -10], [112, -21]]]);\r\n * var mask = turf.polygon([[[90, -55], [170, -55], [170, 10], [90, 10], [90, -55]]]);\r\n *\r\n * var masked = turf.mask(polygon, mask);\r\n *\r\n * //addToMap\r\n * var addToMap = [masked]\r\n */\n\nfunction mask(polygon, mask) {\n  // Define mask\n  var maskPolygon = createMask(mask);\n  var polygonOuters = null;\n  if (polygon.type === \"FeatureCollection\") polygonOuters = unionFc(polygon);else polygonOuters = createGeomFromPolygonClippingOutput(polygonClipping.union(polygon.geometry.coordinates));\n  polygonOuters.geometry.coordinates.forEach(function (contour) {\n    maskPolygon.geometry.coordinates.push(contour[0]);\n  });\n  return maskPolygon;\n}\n\nfunction unionFc(fc) {\n  var unioned = fc.features.length === 2 ? polygonClipping.union(fc.features[0].geometry.coordinates, fc.features[1].geometry.coordinates) : polygonClipping.union.apply(polygonClipping, fc.features.map(function (f) {\n    return f.geometry.coordinates;\n  }));\n  return createGeomFromPolygonClippingOutput(unioned);\n}\n\nfunction createGeomFromPolygonClippingOutput(unioned) {\n  return multiPolygon(unioned);\n}\n/**\r\n * Create Mask Coordinates\r\n *\r\n * @private\r\n * @param {Feature<Polygon>} [mask] default to world if undefined\r\n * @returns {Feature<Polygon>} mask coordinate\r\n */\n\n\nfunction createMask(mask) {\n  var world = [[[180, 90], [-180, 90], [-180, -90], [180, -90], [180, 90]]];\n  var coordinates = mask && mask.geometry.coordinates || world;\n  return polygon(coordinates);\n}\n\nexport default mask;","map":{"version":3,"names":["polygon","multiPolygon","polygonClipping","mask","maskPolygon","createMask","polygonOuters","type","unionFc","createGeomFromPolygonClippingOutput","union","geometry","coordinates","forEach","contour","push","fc","unioned","features","length","apply","map","f","world"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/mask/dist/es/index.js"],"sourcesContent":["import { polygon, multiPolygon } from '@turf/helpers';\r\nimport polygonClipping from 'polygon-clipping';\r\n\r\n/**\r\n * Takes any type of {@link Polygon|polygon} and an optional mask and returns a {@link Polygon|polygon} exterior ring with holes.\r\n *\r\n * @name mask\r\n * @param {FeatureCollection|Feature<Polygon|MultiPolygon>} polygon GeoJSON Polygon used as interior rings or holes.\r\n * @param {Feature<Polygon>} [mask] GeoJSON Polygon used as the exterior ring (if undefined, the world extent is used)\r\n * @returns {Feature<Polygon>} Masked Polygon (exterior ring with holes).\r\n * @example\r\n * var polygon = turf.polygon([[[112, -21], [116, -36], [146, -39], [153, -24], [133, -10], [112, -21]]]);\r\n * var mask = turf.polygon([[[90, -55], [170, -55], [170, 10], [90, 10], [90, -55]]]);\r\n *\r\n * var masked = turf.mask(polygon, mask);\r\n *\r\n * //addToMap\r\n * var addToMap = [masked]\r\n */\r\nfunction mask(polygon, mask) {\r\n  // Define mask\r\n  var maskPolygon = createMask(mask);\r\n\r\n  var polygonOuters = null;\r\n  if (polygon.type === \"FeatureCollection\") polygonOuters = unionFc(polygon);\r\n  else\r\n    polygonOuters = createGeomFromPolygonClippingOutput(\r\n      polygonClipping.union(polygon.geometry.coordinates)\r\n    );\r\n\r\n  polygonOuters.geometry.coordinates.forEach(function (contour) {\r\n    maskPolygon.geometry.coordinates.push(contour[0]);\r\n  });\r\n\r\n  return maskPolygon;\r\n}\r\n\r\nfunction unionFc(fc) {\r\n  var unioned =\r\n    fc.features.length === 2\r\n      ? polygonClipping.union(\r\n          fc.features[0].geometry.coordinates,\r\n          fc.features[1].geometry.coordinates\r\n        )\r\n      : polygonClipping.union.apply(\r\n          polygonClipping,\r\n          fc.features.map(function (f) {\r\n            return f.geometry.coordinates;\r\n          })\r\n        );\r\n  return createGeomFromPolygonClippingOutput(unioned);\r\n}\r\n\r\nfunction createGeomFromPolygonClippingOutput(unioned) {\r\n  return multiPolygon(unioned);\r\n}\r\n\r\n/**\r\n * Create Mask Coordinates\r\n *\r\n * @private\r\n * @param {Feature<Polygon>} [mask] default to world if undefined\r\n * @returns {Feature<Polygon>} mask coordinate\r\n */\r\nfunction createMask(mask) {\r\n  var world = [\r\n    [\r\n      [180, 90],\r\n      [-180, 90],\r\n      [-180, -90],\r\n      [180, -90],\r\n      [180, 90],\r\n    ],\r\n  ];\r\n  var coordinates = (mask && mask.geometry.coordinates) || world;\r\n  return polygon(coordinates);\r\n}\r\n\r\nexport default mask;\r\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcH,OAAd,EAAuBG,IAAvB,EAA6B;EAC3B;EACA,IAAIC,WAAW,GAAGC,UAAU,CAACF,IAAD,CAA5B;EAEA,IAAIG,aAAa,GAAG,IAApB;EACA,IAAIN,OAAO,CAACO,IAAR,KAAiB,mBAArB,EAA0CD,aAAa,GAAGE,OAAO,CAACR,OAAD,CAAvB,CAA1C,KAEEM,aAAa,GAAGG,mCAAmC,CACjDP,eAAe,CAACQ,KAAhB,CAAsBV,OAAO,CAACW,QAAR,CAAiBC,WAAvC,CADiD,CAAnD;EAIFN,aAAa,CAACK,QAAd,CAAuBC,WAAvB,CAAmCC,OAAnC,CAA2C,UAAUC,OAAV,EAAmB;IAC5DV,WAAW,CAACO,QAAZ,CAAqBC,WAArB,CAAiCG,IAAjC,CAAsCD,OAAO,CAAC,CAAD,CAA7C;EACD,CAFD;EAIA,OAAOV,WAAP;AACD;;AAED,SAASI,OAAT,CAAiBQ,EAAjB,EAAqB;EACnB,IAAIC,OAAO,GACTD,EAAE,CAACE,QAAH,CAAYC,MAAZ,KAAuB,CAAvB,GACIjB,eAAe,CAACQ,KAAhB,CACEM,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeP,QAAf,CAAwBC,WAD1B,EAEEI,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeP,QAAf,CAAwBC,WAF1B,CADJ,GAKIV,eAAe,CAACQ,KAAhB,CAAsBU,KAAtB,CACElB,eADF,EAEEc,EAAE,CAACE,QAAH,CAAYG,GAAZ,CAAgB,UAAUC,CAAV,EAAa;IAC3B,OAAOA,CAAC,CAACX,QAAF,CAAWC,WAAlB;EACD,CAFD,CAFF,CANN;EAYA,OAAOH,mCAAmC,CAACQ,OAAD,CAA1C;AACD;;AAED,SAASR,mCAAT,CAA6CQ,OAA7C,EAAsD;EACpD,OAAOhB,YAAY,CAACgB,OAAD,CAAnB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASZ,UAAT,CAAoBF,IAApB,EAA0B;EACxB,IAAIoB,KAAK,GAAG,CACV,CACE,CAAC,GAAD,EAAM,EAAN,CADF,EAEE,CAAC,CAAC,GAAF,EAAO,EAAP,CAFF,EAGE,CAAC,CAAC,GAAF,EAAO,CAAC,EAAR,CAHF,EAIE,CAAC,GAAD,EAAM,CAAC,EAAP,CAJF,EAKE,CAAC,GAAD,EAAM,EAAN,CALF,CADU,CAAZ;EASA,IAAIX,WAAW,GAAIT,IAAI,IAAIA,IAAI,CAACQ,QAAL,CAAcC,WAAvB,IAAuCW,KAAzD;EACA,OAAOvB,OAAO,CAACY,WAAD,CAAd;AACD;;AAED,eAAeT,IAAf"},"metadata":{},"sourceType":"module"}