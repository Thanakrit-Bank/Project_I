{"ast":null,"code":"import { featureCollection } from '@turf/helpers'; // http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\n\n/**\r\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\r\n *\r\n * @name sample\r\n * @param {FeatureCollection} featurecollection set of input features\r\n * @param {number} num number of features to select\r\n * @returns {FeatureCollection} a FeatureCollection with `n` features\r\n * @example\r\n * var points = turf.randomPoint(100, {bbox: [-80, 30, -60, 60]});\r\n *\r\n * var sample = turf.sample(points, 5);\r\n *\r\n * //addToMap\r\n * var addToMap = [points, sample]\r\n * turf.featureEach(sample, function (currentFeature) {\r\n *   currentFeature.properties['marker-size'] = 'large';\r\n *   currentFeature.properties['marker-color'] = '#000';\r\n * });\r\n */\n\nfunction sample(featurecollection, num) {\n  if (!featurecollection) throw new Error(\"featurecollection is required\");\n  if (num === null || num === undefined) throw new Error(\"num is required\");\n  if (typeof num !== \"number\") throw new Error(\"num must be a number\");\n  var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n  return outFC;\n}\n\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n      i = arr.length,\n      min = i - size,\n      temp,\n      index;\n\n  while (i-- > min) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(min);\n}\n\nexport default sample;","map":{"version":3,"names":["featureCollection","sample","featurecollection","num","Error","undefined","outFC","getRandomSubarray","features","arr","size","shuffled","slice","i","length","min","temp","index","Math","floor","random"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/sample/dist/es/index.js"],"sourcesContent":["import { featureCollection } from '@turf/helpers';\r\n\r\n// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\r\n\r\n/**\r\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\r\n *\r\n * @name sample\r\n * @param {FeatureCollection} featurecollection set of input features\r\n * @param {number} num number of features to select\r\n * @returns {FeatureCollection} a FeatureCollection with `n` features\r\n * @example\r\n * var points = turf.randomPoint(100, {bbox: [-80, 30, -60, 60]});\r\n *\r\n * var sample = turf.sample(points, 5);\r\n *\r\n * //addToMap\r\n * var addToMap = [points, sample]\r\n * turf.featureEach(sample, function (currentFeature) {\r\n *   currentFeature.properties['marker-size'] = 'large';\r\n *   currentFeature.properties['marker-color'] = '#000';\r\n * });\r\n */\r\nfunction sample(featurecollection, num) {\r\n  if (!featurecollection) throw new Error(\"featurecollection is required\");\r\n  if (num === null || num === undefined) throw new Error(\"num is required\");\r\n  if (typeof num !== \"number\") throw new Error(\"num must be a number\");\r\n\r\n  var outFC = featureCollection(\r\n    getRandomSubarray(featurecollection.features, num)\r\n  );\r\n  return outFC;\r\n}\r\n\r\nfunction getRandomSubarray(arr, size) {\r\n  var shuffled = arr.slice(0),\r\n    i = arr.length,\r\n    min = i - size,\r\n    temp,\r\n    index;\r\n  while (i-- > min) {\r\n    index = Math.floor((i + 1) * Math.random());\r\n    temp = shuffled[index];\r\n    shuffled[index] = shuffled[i];\r\n    shuffled[i] = temp;\r\n  }\r\n  return shuffled.slice(min);\r\n}\r\n\r\nexport default sample;\r\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,eAAlC,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,iBAAhB,EAAmCC,GAAnC,EAAwC;EACtC,IAAI,CAACD,iBAAL,EAAwB,MAAM,IAAIE,KAAJ,CAAU,+BAAV,CAAN;EACxB,IAAID,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAA5B,EAAuC,MAAM,IAAID,KAAJ,CAAU,iBAAV,CAAN;EACvC,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;EAE7B,IAAIE,KAAK,GAAGN,iBAAiB,CAC3BO,iBAAiB,CAACL,iBAAiB,CAACM,QAAnB,EAA6BL,GAA7B,CADU,CAA7B;EAGA,OAAOG,KAAP;AACD;;AAED,SAASC,iBAAT,CAA2BE,GAA3B,EAAgCC,IAAhC,EAAsC;EACpC,IAAIC,QAAQ,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAf;EAAA,IACEC,CAAC,GAAGJ,GAAG,CAACK,MADV;EAAA,IAEEC,GAAG,GAAGF,CAAC,GAAGH,IAFZ;EAAA,IAGEM,IAHF;EAAA,IAIEC,KAJF;;EAKA,OAAOJ,CAAC,KAAKE,GAAb,EAAkB;IAChBE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,CAAC,GAAG,CAAL,IAAUK,IAAI,CAACE,MAAL,EAArB,CAAR;IACAJ,IAAI,GAAGL,QAAQ,CAACM,KAAD,CAAf;IACAN,QAAQ,CAACM,KAAD,CAAR,GAAkBN,QAAQ,CAACE,CAAD,CAA1B;IACAF,QAAQ,CAACE,CAAD,CAAR,GAAcG,IAAd;EACD;;EACD,OAAOL,QAAQ,CAACC,KAAT,CAAeG,GAAf,CAAP;AACD;;AAED,eAAed,MAAf"},"metadata":{},"sourceType":"module"}