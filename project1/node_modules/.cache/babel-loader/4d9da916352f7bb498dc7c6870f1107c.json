{"ast":null,"code":"import { getCoords } from \"@turf/invariant\";\n/**\r\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\r\n *\r\n * @name booleanClockwise\r\n * @param {Feature<LineString>|LineString|Array<Array<number>>} line to be evaluated\r\n * @returns {boolean} true/false\r\n * @example\r\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\r\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\r\n *\r\n * turf.booleanClockwise(clockwiseRing)\r\n * //=true\r\n * turf.booleanClockwise(counterClockwiseRing)\r\n * //=false\r\n */\n\nexport default function booleanClockwise(line) {\n  var ring = getCoords(line);\n  var sum = 0;\n  var i = 1;\n  var prev;\n  var cur;\n\n  while (i < ring.length) {\n    prev = cur || ring[0];\n    cur = ring[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n\n  return sum > 0;\n}","map":{"version":3,"names":["getCoords","booleanClockwise","line","ring","sum","i","prev","cur","length"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/@turf/boolean-clockwise/dist/es/index.js"],"sourcesContent":["import { getCoords } from \"@turf/invariant\";\r\n/**\r\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\r\n *\r\n * @name booleanClockwise\r\n * @param {Feature<LineString>|LineString|Array<Array<number>>} line to be evaluated\r\n * @returns {boolean} true/false\r\n * @example\r\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\r\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\r\n *\r\n * turf.booleanClockwise(clockwiseRing)\r\n * //=true\r\n * turf.booleanClockwise(counterClockwiseRing)\r\n * //=false\r\n */\r\nexport default function booleanClockwise(line) {\r\n    var ring = getCoords(line);\r\n    var sum = 0;\r\n    var i = 1;\r\n    var prev;\r\n    var cur;\r\n    while (i < ring.length) {\r\n        prev = cur || ring[0];\r\n        cur = ring[i];\r\n        sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\r\n        i++;\r\n    }\r\n    return sum > 0;\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EAC3C,IAAIC,IAAI,GAAGH,SAAS,CAACE,IAAD,CAApB;EACA,IAAIE,GAAG,GAAG,CAAV;EACA,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,IAAJ;EACA,IAAIC,GAAJ;;EACA,OAAOF,CAAC,GAAGF,IAAI,CAACK,MAAhB,EAAwB;IACpBF,IAAI,GAAGC,GAAG,IAAIJ,IAAI,CAAC,CAAD,CAAlB;IACAI,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAV;IACAD,GAAG,IAAI,CAACG,GAAG,CAAC,CAAD,CAAH,GAASD,IAAI,CAAC,CAAD,CAAd,KAAsBC,GAAG,CAAC,CAAD,CAAH,GAASD,IAAI,CAAC,CAAD,CAAnC,CAAP;IACAD,CAAC;EACJ;;EACD,OAAOD,GAAG,GAAG,CAAb;AACH"},"metadata":{},"sourceType":"module"}