{"ast":null,"code":"\"use strict\";\n\nimport { DomUtil } from 'leaflet';\n\nvar splitClassName = function splitClassName(className) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  return className.split(' ').filter(Boolean);\n};\n\nexport var addClassName = function addClassName(container, className) {\n  splitClassName(className).forEach(function (cls) {\n    DomUtil.addClass(container, cls);\n  });\n};\nexport var removeClassName = function removeClassName(container, className) {\n  splitClassName(className).forEach(function (cls) {\n    DomUtil.removeClass(container, cls);\n  });\n};\nexport default (function (container, prevClassName, nextClassName) {\n  if (container != null && nextClassName !== prevClassName) {\n    if (prevClassName != null && prevClassName.length > 0) {\n      removeClassName(container, prevClassName);\n    }\n\n    if (nextClassName != null && nextClassName.length > 0) {\n      addClassName(container, nextClassName);\n    }\n  }\n});","map":{"version":3,"names":["DomUtil","splitClassName","className","split","filter","Boolean","addClassName","container","forEach","cls","addClass","removeClassName","removeClass","prevClassName","nextClassName","length"],"sources":["C:/Users/Administrator/Desktop/Project_I/node_modules/react-leaflet/es/utils/updateClassName.js"],"sourcesContent":["\"use strict\";\n\nimport { DomUtil } from 'leaflet';\n\nvar splitClassName = function splitClassName(className) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  return className.split(' ').filter(Boolean);\n};\n\nexport var addClassName = function addClassName(container, className) {\n  splitClassName(className).forEach(function (cls) {\n    DomUtil.addClass(container, cls);\n  });\n};\nexport var removeClassName = function removeClassName(container, className) {\n  splitClassName(className).forEach(function (cls) {\n    DomUtil.removeClass(container, cls);\n  });\n};\nexport default (function (container, prevClassName, nextClassName) {\n  if (container != null && nextClassName !== prevClassName) {\n    if (prevClassName != null && prevClassName.length > 0) {\n      removeClassName(container, prevClassName);\n    }\n\n    if (nextClassName != null && nextClassName.length > 0) {\n      addClassName(container, nextClassName);\n    }\n  }\n});"],"mappings":"AAAA;;AAEA,SAASA,OAAT,QAAwB,SAAxB;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,SAAxB,EAAmC;EACtD,IAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;IACxBA,SAAS,GAAG,EAAZ;EACD;;EAED,OAAOA,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqBC,MAArB,CAA4BC,OAA5B,CAAP;AACD,CAND;;AAQA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,SAAtB,EAAiCL,SAAjC,EAA4C;EACpED,cAAc,CAACC,SAAD,CAAd,CAA0BM,OAA1B,CAAkC,UAAUC,GAAV,EAAe;IAC/CT,OAAO,CAACU,QAAR,CAAiBH,SAAjB,EAA4BE,GAA5B;EACD,CAFD;AAGD,CAJM;AAKP,OAAO,IAAIE,eAAe,GAAG,SAASA,eAAT,CAAyBJ,SAAzB,EAAoCL,SAApC,EAA+C;EAC1ED,cAAc,CAACC,SAAD,CAAd,CAA0BM,OAA1B,CAAkC,UAAUC,GAAV,EAAe;IAC/CT,OAAO,CAACY,WAAR,CAAoBL,SAApB,EAA+BE,GAA/B;EACD,CAFD;AAGD,CAJM;AAKP,gBAAgB,UAAUF,SAAV,EAAqBM,aAArB,EAAoCC,aAApC,EAAmD;EACjE,IAAIP,SAAS,IAAI,IAAb,IAAqBO,aAAa,KAAKD,aAA3C,EAA0D;IACxD,IAAIA,aAAa,IAAI,IAAjB,IAAyBA,aAAa,CAACE,MAAd,GAAuB,CAApD,EAAuD;MACrDJ,eAAe,CAACJ,SAAD,EAAYM,aAAZ,CAAf;IACD;;IAED,IAAIC,aAAa,IAAI,IAAjB,IAAyBA,aAAa,CAACC,MAAd,GAAuB,CAApD,EAAuD;MACrDT,YAAY,CAACC,SAAD,EAAYO,aAAZ,CAAZ;IACD;EACF;AACF,CAVD"},"metadata":{},"sourceType":"module"}