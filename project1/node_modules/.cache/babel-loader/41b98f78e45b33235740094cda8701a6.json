{"ast":null,"code":"export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","map":{"version":3,"names":["topology","arcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","forEach","i","j","arc","t","length","e","ends","start","end","f","g","push","fg","concat","unshift","gf","p0","p1","transform","dp","flush","k"],"sources":["C:/Users/Administrator/Desktop/Project_I/project1/node_modules/topojson-client/src/stitch.js"],"sourcesContent":["export default function(topology, arcs) {\r\n  var stitchedArcs = {},\r\n      fragmentByStart = {},\r\n      fragmentByEnd = {},\r\n      fragments = [],\r\n      emptyIndex = -1;\r\n\r\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\r\n  arcs.forEach(function(i, j) {\r\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\r\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\r\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\r\n    }\r\n  });\r\n\r\n  arcs.forEach(function(i) {\r\n    var e = ends(i),\r\n        start = e[0],\r\n        end = e[1],\r\n        f, g;\r\n\r\n    if (f = fragmentByEnd[start]) {\r\n      delete fragmentByEnd[f.end];\r\n      f.push(i);\r\n      f.end = end;\r\n      if (g = fragmentByStart[end]) {\r\n        delete fragmentByStart[g.start];\r\n        var fg = g === f ? f : f.concat(g);\r\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\r\n      } else {\r\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\r\n      }\r\n    } else if (f = fragmentByStart[end]) {\r\n      delete fragmentByStart[f.start];\r\n      f.unshift(i);\r\n      f.start = start;\r\n      if (g = fragmentByEnd[start]) {\r\n        delete fragmentByEnd[g.end];\r\n        var gf = g === f ? f : g.concat(f);\r\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\r\n      } else {\r\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\r\n      }\r\n    } else {\r\n      f = [i];\r\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\r\n    }\r\n  });\r\n\r\n  function ends(i) {\r\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\r\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\r\n    else p1 = arc[arc.length - 1];\r\n    return i < 0 ? [p1, p0] : [p0, p1];\r\n  }\r\n\r\n  function flush(fragmentByEnd, fragmentByStart) {\r\n    for (var k in fragmentByEnd) {\r\n      var f = fragmentByEnd[k];\r\n      delete fragmentByStart[f.start];\r\n      delete f.start;\r\n      delete f.end;\r\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\r\n      fragments.push(f);\r\n    }\r\n  }\r\n\r\n  flush(fragmentByEnd, fragmentByStart);\r\n  flush(fragmentByStart, fragmentByEnd);\r\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\r\n\r\n  return fragments;\r\n}\r\n"],"mappings":"AAAA,eAAe,UAASA,QAAT,EAAmBC,IAAnB,EAAyB;EACtC,IAAIC,YAAY,GAAG,EAAnB;EAAA,IACIC,eAAe,GAAG,EADtB;EAAA,IAEIC,aAAa,GAAG,EAFpB;EAAA,IAGIC,SAAS,GAAG,EAHhB;EAAA,IAIIC,UAAU,GAAG,CAAC,CAJlB,CADsC,CAOtC;;EACAL,IAAI,CAACM,OAAL,CAAa,UAASC,CAAT,EAAYC,CAAZ,EAAe;IAC1B,IAAIC,GAAG,GAAGV,QAAQ,CAACC,IAAT,CAAcO,CAAC,GAAG,CAAJ,GAAQ,CAACA,CAAT,GAAaA,CAA3B,CAAV;IAAA,IAAyCG,CAAzC;;IACA,IAAID,GAAG,CAACE,MAAJ,GAAa,CAAb,IAAkB,CAACF,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAnB,IAAgC,CAACA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAArC,EAAgD;MAC9CC,CAAC,GAAGV,IAAI,CAAC,EAAEK,UAAH,CAAR,EAAwBL,IAAI,CAACK,UAAD,CAAJ,GAAmBE,CAA3C,EAA8CP,IAAI,CAACQ,CAAD,CAAJ,GAAUE,CAAxD;IACD;EACF,CALD;EAOAV,IAAI,CAACM,OAAL,CAAa,UAASC,CAAT,EAAY;IACvB,IAAIK,CAAC,GAAGC,IAAI,CAACN,CAAD,CAAZ;IAAA,IACIO,KAAK,GAAGF,CAAC,CAAC,CAAD,CADb;IAAA,IAEIG,GAAG,GAAGH,CAAC,CAAC,CAAD,CAFX;IAAA,IAGII,CAHJ;IAAA,IAGOC,CAHP;;IAKA,IAAID,CAAC,GAAGb,aAAa,CAACW,KAAD,CAArB,EAA8B;MAC5B,OAAOX,aAAa,CAACa,CAAC,CAACD,GAAH,CAApB;MACAC,CAAC,CAACE,IAAF,CAAOX,CAAP;MACAS,CAAC,CAACD,GAAF,GAAQA,GAAR;;MACA,IAAIE,CAAC,GAAGf,eAAe,CAACa,GAAD,CAAvB,EAA8B;QAC5B,OAAOb,eAAe,CAACe,CAAC,CAACH,KAAH,CAAtB;QACA,IAAIK,EAAE,GAAGF,CAAC,KAAKD,CAAN,GAAUA,CAAV,GAAcA,CAAC,CAACI,MAAF,CAASH,CAAT,CAAvB;QACAf,eAAe,CAACiB,EAAE,CAACL,KAAH,GAAWE,CAAC,CAACF,KAAd,CAAf,GAAsCX,aAAa,CAACgB,EAAE,CAACJ,GAAH,GAASE,CAAC,CAACF,GAAZ,CAAb,GAAgCI,EAAtE;MACD,CAJD,MAIO;QACLjB,eAAe,CAACc,CAAC,CAACF,KAAH,CAAf,GAA2BX,aAAa,CAACa,CAAC,CAACD,GAAH,CAAb,GAAuBC,CAAlD;MACD;IACF,CAXD,MAWO,IAAIA,CAAC,GAAGd,eAAe,CAACa,GAAD,CAAvB,EAA8B;MACnC,OAAOb,eAAe,CAACc,CAAC,CAACF,KAAH,CAAtB;MACAE,CAAC,CAACK,OAAF,CAAUd,CAAV;MACAS,CAAC,CAACF,KAAF,GAAUA,KAAV;;MACA,IAAIG,CAAC,GAAGd,aAAa,CAACW,KAAD,CAArB,EAA8B;QAC5B,OAAOX,aAAa,CAACc,CAAC,CAACF,GAAH,CAApB;QACA,IAAIO,EAAE,GAAGL,CAAC,KAAKD,CAAN,GAAUA,CAAV,GAAcC,CAAC,CAACG,MAAF,CAASJ,CAAT,CAAvB;QACAd,eAAe,CAACoB,EAAE,CAACR,KAAH,GAAWG,CAAC,CAACH,KAAd,CAAf,GAAsCX,aAAa,CAACmB,EAAE,CAACP,GAAH,GAASC,CAAC,CAACD,GAAZ,CAAb,GAAgCO,EAAtE;MACD,CAJD,MAIO;QACLpB,eAAe,CAACc,CAAC,CAACF,KAAH,CAAf,GAA2BX,aAAa,CAACa,CAAC,CAACD,GAAH,CAAb,GAAuBC,CAAlD;MACD;IACF,CAXM,MAWA;MACLA,CAAC,GAAG,CAACT,CAAD,CAAJ;MACAL,eAAe,CAACc,CAAC,CAACF,KAAF,GAAUA,KAAX,CAAf,GAAmCX,aAAa,CAACa,CAAC,CAACD,GAAF,GAAQA,GAAT,CAAb,GAA6BC,CAAhE;IACD;EACF,CAhCD;;EAkCA,SAASH,IAAT,CAAcN,CAAd,EAAiB;IACf,IAAIE,GAAG,GAAGV,QAAQ,CAACC,IAAT,CAAcO,CAAC,GAAG,CAAJ,GAAQ,CAACA,CAAT,GAAaA,CAA3B,CAAV;IAAA,IAAyCgB,EAAE,GAAGd,GAAG,CAAC,CAAD,CAAjD;IAAA,IAAsDe,EAAtD;IACA,IAAIzB,QAAQ,CAAC0B,SAAb,EAAwBD,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAaf,GAAG,CAACH,OAAJ,CAAY,UAASoB,EAAT,EAAa;MAAEF,EAAE,CAAC,CAAD,CAAF,IAASE,EAAE,CAAC,CAAD,CAAX,EAAgBF,EAAE,CAAC,CAAD,CAAF,IAASE,EAAE,CAAC,CAAD,CAA3B;IAAiC,CAA5D,CAAb,CAAxB,KACKF,EAAE,GAAGf,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAR;IACL,OAAOJ,CAAC,GAAG,CAAJ,GAAQ,CAACiB,EAAD,EAAKD,EAAL,CAAR,GAAmB,CAACA,EAAD,EAAKC,EAAL,CAA1B;EACD;;EAED,SAASG,KAAT,CAAexB,aAAf,EAA8BD,eAA9B,EAA+C;IAC7C,KAAK,IAAI0B,CAAT,IAAczB,aAAd,EAA6B;MAC3B,IAAIa,CAAC,GAAGb,aAAa,CAACyB,CAAD,CAArB;MACA,OAAO1B,eAAe,CAACc,CAAC,CAACF,KAAH,CAAtB;MACA,OAAOE,CAAC,CAACF,KAAT;MACA,OAAOE,CAAC,CAACD,GAAT;MACAC,CAAC,CAACV,OAAF,CAAU,UAASC,CAAT,EAAY;QAAEN,YAAY,CAACM,CAAC,GAAG,CAAJ,GAAQ,CAACA,CAAT,GAAaA,CAAd,CAAZ,GAA+B,CAA/B;MAAmC,CAA3D;MACAH,SAAS,CAACc,IAAV,CAAeF,CAAf;IACD;EACF;;EAEDW,KAAK,CAACxB,aAAD,EAAgBD,eAAhB,CAAL;EACAyB,KAAK,CAACzB,eAAD,EAAkBC,aAAlB,CAAL;EACAH,IAAI,CAACM,OAAL,CAAa,UAASC,CAAT,EAAY;IAAE,IAAI,CAACN,YAAY,CAACM,CAAC,GAAG,CAAJ,GAAQ,CAACA,CAAT,GAAaA,CAAd,CAAjB,EAAmCH,SAAS,CAACc,IAAV,CAAe,CAACX,CAAD,CAAf;EAAsB,CAApF;EAEA,OAAOH,SAAP;AACD"},"metadata":{},"sourceType":"module"}