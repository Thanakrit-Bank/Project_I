'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".dimmer {\r\n    background: rgba(0, 0, 0, 0);\r\n    pointer-events: none;\r\n    cursor: pointer;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 120vw;\r\n    height: 120vh;\r\n    \r\n    transition: 0.3s;\r\n}\r\n\r\n.dimmer-active {\r\n    background: rgba(0, 0, 0, 0.5);\r\n    backdrop-filter: blur(1.5px) saturate(85%);\r\n    pointer-events: visible;\r\n    transition: 0.3s;\r\n}\r\n";
styleInject(css_248z);

var ReactDimmer = function ReactDimmer(_ref) {
  var isOpen = _ref.isOpen,
      exitDimmer = _ref.exitDimmer,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 100 : _ref$zIndex,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,
      _ref$blur = _ref.blur,
      blur = _ref$blur === void 0 ? 0 : _ref$blur,
      _ref$saturate = _ref.saturate,
      saturate = _ref$saturate === void 0 ? 100 : _ref$saturate,
      _ref$transition = _ref.transition,
      transition = _ref$transition === void 0 ? 0.3 : _ref$transition;
  var defaultStyle = {
    zIndex: zIndex.toString(),
    background: 'rgba(0, 0, 0, 0)',
    backdropFilter: "blur(0px) saturate(100%)",
    transition: transition + "s"
  };
  var activeStyle = {
    zIndex: zIndex.toString(),
    background: "rgba(0, 0, 0, " + opacity + ")",
    backdropFilter: "blur(" + blur + "px) saturate(" + saturate + "%)",
    transition: transition + "s"
  };
  return React.createElement("div", {
    style: isOpen ? activeStyle : defaultStyle,
    onClick: function onClick() {
      exitDimmer(false);
    },
    className: "dimmer " + (isOpen ? 'dimmer-active' : '')
  });
};

exports.ReactDimmer = ReactDimmer;
//# sourceMappingURL=react-dimmer.cjs.development.js.map
