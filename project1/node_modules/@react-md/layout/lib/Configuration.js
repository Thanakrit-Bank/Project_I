"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Configuration = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var dialog_1 = require("@react-md/dialog");
var form_1 = require("@react-md/form");
var icon_1 = require("@react-md/icon");
var menu_1 = require("@react-md/menu");
var states_1 = require("@react-md/states");
var utils_1 = require("@react-md/utils");
/**
 * This component allows you to quickly configure different functionality within
 * `react-md` in one place with reasonable defaults.
 */
function Configuration(_a) {
    var onAppResize = _a.onAppResize, children = _a.children, icons = _a.icons, formTheme = _a.formTheme, _b = _a.defaultDir, defaultDir = _b === void 0 ? utils_1.DEFAULT_DIR : _b, _c = _a.phoneMaxWidth, phoneMaxWidth = _c === void 0 ? utils_1.DEFAULT_PHONE_MAX_WIDTH : _c, _d = _a.tabletMinWidth, tabletMinWidth = _d === void 0 ? utils_1.DEFAULT_TABLET_MIN_WIDTH : _d, _e = _a.tabletMaxWidth, tabletMaxWidth = _e === void 0 ? utils_1.DEFAULT_TABLET_MAX_WIDTH : _e, _f = _a.desktopMinWidth, desktopMinWidth = _f === void 0 ? utils_1.DEFAULT_DESKTOP_MIN_WIDTH : _f, _g = _a.desktopLargeMinWidth, desktopLargeMinWidth = _g === void 0 ? utils_1.DEFAULT_DESKTOP_LARGE_MIN_WIDTH : _g, _h = _a.defaultSize, defaultSize = _h === void 0 ? utils_1.DEFAULT_APP_SIZE : _h, _j = _a.rippleTimeout, rippleTimeout = _j === void 0 ? states_1.DEFAULT_RIPPLE_TIMEOUT : _j, _k = _a.rippleClassNames, rippleClassNames = _k === void 0 ? states_1.DEFAULT_RIPPLE_CLASSNAMES : _k, _l = _a.disableRipple, disableRipple = _l === void 0 ? false : _l, _m = _a.disableProgrammaticRipple, disableProgrammaticRipple = _m === void 0 ? false : _m, hoverMode = _a.hoverMode, menuConfiguration = _a.menuConfiguration;
    return ((0, jsx_runtime_1.jsx)(utils_1.Dir, __assign({ defaultDir: defaultDir }, { children: (0, jsx_runtime_1.jsx)(utils_1.AppSizeListener, __assign({ defaultSize: defaultSize, onChange: onAppResize, phoneMaxWidth: phoneMaxWidth, tabletMinWidth: tabletMinWidth, tabletMaxWidth: tabletMaxWidth, desktopMinWidth: desktopMinWidth, desktopLargeMinWidth: desktopLargeMinWidth }, { children: (0, jsx_runtime_1.jsx)(dialog_1.NestedDialogContextProvider, { children: (0, jsx_runtime_1.jsx)(utils_1.UserInteractionModeListener, { children: (0, jsx_runtime_1.jsx)(states_1.StatesConfig, __assign({ disableRipple: disableRipple, disableProgrammaticRipple: disableProgrammaticRipple, rippleTimeout: rippleTimeout, rippleClassNames: rippleClassNames }, { children: (0, jsx_runtime_1.jsx)(utils_1.HoverModeProvider, __assign({}, hoverMode, { children: (0, jsx_runtime_1.jsx)(icon_1.IconProvider, __assign({}, icons, { children: (0, jsx_runtime_1.jsx)(form_1.FormThemeProvider, __assign({}, formTheme, { children: (0, jsx_runtime_1.jsx)(menu_1.MenuConfigurationProvider, __assign({}, menuConfiguration, { children: children })) })) })) })) })) }) }) })) })));
}
exports.Configuration = Configuration;
//# sourceMappingURL=Configuration.js.map