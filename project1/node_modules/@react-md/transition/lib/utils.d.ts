import type { CSSTransitionClassNames, CSSTransitionClassNamesObject, TransitionActions, TransitionTimeout, TransitionTimeoutObject } from "./types";
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export interface TransitionTimeoutOptions extends Required<TransitionActions> {
    timeout: TransitionTimeout;
}
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export declare function getTransitionTimeout({ timeout, appear, enter, exit, }: Readonly<TransitionTimeoutOptions>): Readonly<Required<TransitionTimeoutObject>>;
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export interface CollapseSizing {
    maxHeight?: number;
    paddingTop?: number;
    paddingBottom?: number;
}
/**
 * A small util that will find the max-height, padding-top, and padding-bottom
 * for the provided element. This is really used to be able to transition the
 * max-height value since `max-height: auto` does not transition. The only way
 * to get transition is to change max-height values manually.
 *
 * @remarks \@since 4.0.0
 * @internal
 */
export declare function getElementSizing(element: HTMLElement | null): CollapseSizing;
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export interface TransitionClassNamesOptions extends TransitionTimeoutOptions {
    classNames: CSSTransitionClassNames;
}
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export declare function getTransitionClassNames({ classNames, ...timeoutOptions }: TransitionClassNamesOptions): Readonly<Required<CSSTransitionClassNamesObject>>;
/**
 * @remarks \@since 4.0.0
 * @internal
 */
interface IsWithinViewportOptions {
    fixedElement: HTMLElement;
    fixedToElement: HTMLElement;
}
/**
 * @remarks \@since 4.0.0
 * @internal
 */
export declare function isWithinViewport({ fixedElement, fixedToElement, }: IsWithinViewportOptions): boolean;
export {};
