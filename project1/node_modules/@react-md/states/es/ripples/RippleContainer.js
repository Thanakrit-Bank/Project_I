var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import cn from "classnames";
import { Ripple } from "./Ripple";
export function RippleContainer(_a) {
    var ripples = _a.ripples, className = _a.className, rippleClassName = _a.rippleClassName, timeout = _a.timeout, classNames = _a.classNames, entered = _a.entered, exited = _a.exited;
    return (_jsx("span", __assign({ className: cn("rmd-ripple-container", className) }, { children: ripples.map(function (ripple) { return (_jsx(Ripple, { ripple: ripple, className: rippleClassName, entered: entered, exited: exited, timeout: timeout, classNames: classNames }, ripple.startTime)); }) })));
}
//# sourceMappingURL=RippleContainer.js.map