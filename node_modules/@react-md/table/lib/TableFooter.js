"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TableFooter = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var config_1 = require("./config");
var footer_1 = require("./footer");
var sticky_1 = require("./sticky");
var block = (0, utils_1.bem)("rmd-foot");
/**
 * Creates a `<tfoot>` element with some basic styles. This component will
 * disable the hover effect and line wrapping by default, but the hover effect
 * and line-wrapping can be re-enabled if desired through the `hoverable` and
 * `disableNoWrap` props.
 */
exports.TableFooter = (0, react_1.forwardRef)(function TableFooter(_a, ref) {
    var className = _a.className, _b = _a.hoverable, hoverable = _b === void 0 ? false : _b, propLineWrap = _a.lineWrap, children = _a.children, _c = _a.sticky, sticky = _c === void 0 ? false : _c, props = __rest(_a, ["className", "hoverable", "lineWrap", "children", "sticky"]);
    // update the table configuration with the custom overrides for the `<tfoot>`
    var _d = (0, config_1.useTableConfig)({
        lineWrap: propLineWrap,
        disableHover: !hoverable,
    }), hAlign = _d.hAlign, vAlign = _d.vAlign, lineWrap = _d.lineWrap, disableHover = _d.disableHover, disableBorders = _d.disableBorders;
    var configuration = (0, react_1.useMemo)(function () { return ({
        header: false,
        hAlign: hAlign,
        vAlign: vAlign,
        lineWrap: lineWrap,
        disableBorders: disableBorders,
        disableHover: disableHover,
    }); }, [hAlign, vAlign, lineWrap, disableBorders, disableHover]);
    return ((0, jsx_runtime_1.jsx)(config_1.TableConfigProvider, __assign({ value: configuration }, { children: (0, jsx_runtime_1.jsx)(footer_1.TableFooterProvider, __assign({ value: true }, { children: (0, jsx_runtime_1.jsx)("tfoot", __assign({}, props, { ref: ref, className: (0, classnames_1.default)(block(), className) }, { children: (0, jsx_runtime_1.jsx)(sticky_1.StickyTableProvider, __assign({ value: sticky }, { children: children })) })) })) })));
});
//# sourceMappingURL=TableFooter.js.map