"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabPanel = exports.DEFAULT_TABPANEL_CLASSNAMES = exports.DEFAULT_TABPANEL_TIMEOUT = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var transition_1 = require("@react-md/transition");
var utils_1 = require("@react-md/utils");
var block = (0, utils_1.bem)("rmd-tab-panel");
var prefix = "rmd-tab-panel";
/** @remarks \@since 4.0.0 */
exports.DEFAULT_TABPANEL_TIMEOUT = 150;
/** @remarks \@since 4.0.0 */
exports.DEFAULT_TABPANEL_CLASSNAMES = {
    enter: "".concat(prefix, "--enter"),
    enterActive: "".concat(prefix, "--enter-active ").concat(prefix, "--animate"),
    exit: "".concat(prefix, "--exit"),
    exitActive: "".concat(prefix, "--exit-active ").concat(prefix, "--animate"),
};
/**
 * This component renders an accessible tab panel with enter and exit
 * animations.  This probably should only be used internally as it relies on the
 * `TabPanels` component along with the `TransitionGroup` from
 * `react-transition-group` to work as expected.
 */
exports.TabPanel = (0, react_1.forwardRef)(function TabPanel(_a, nodeRef) {
    var propClassName = _a.className, appear = _a.appear, enter = _a.enter, exit = _a.exit, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExit = _a.onExit, onExiting = _a.onExiting, onExited = _a.onExited, _b = _a.timeout, timeout = _b === void 0 ? exports.DEFAULT_TABPANEL_TIMEOUT : _b, _c = _a.classNames, classNames = _c === void 0 ? exports.DEFAULT_TABPANEL_CLASSNAMES : _c, _d = _a.transitionIn, transitionIn = _d === void 0 ? true : _d, temporary = _a.temporary, children = _a.children, hidden = _a.hidden, props = __rest(_a, ["className", "appear", "enter", "exit", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "timeout", "classNames", "transitionIn", "temporary", "children", "hidden"]);
    var _e = (0, transition_1.useCSSTransition)({
        nodeRef: nodeRef,
        timeout: timeout,
        classNames: classNames,
        className: (0, classnames_1.default)(block(), propClassName),
        transitionIn: transitionIn && !hidden,
        appear: appear,
        enter: enter,
        exit: exit,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited,
        temporary: temporary,
    }), elementProps = _e.elementProps, rendered = _e.rendered;
    if (!rendered) {
        return null;
    }
    return ((0, jsx_runtime_1.jsx)("div", __assign({}, props, elementProps, { role: "tabpanel", hidden: hidden }, { children: children })));
});
//# sourceMappingURL=TabPanel.js.map