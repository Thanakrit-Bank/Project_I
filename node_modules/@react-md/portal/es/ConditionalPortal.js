var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { Portal } from "./Portal";
/**
 * This is a very simple component that is used in other places within react-md
 * to conditionally render the children within a portal or not based on general
 * portal config props.
 */
export function ConditionalPortal(_a) {
    var portal = _a.portal, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, children = _a.children;
    if (!portal && !portalInto && !portalIntoId) {
        return _jsx(_Fragment, { children: children });
    }
    return (_jsx(Portal, __assign({ into: portalInto, intoId: portalIntoId }, { children: children })));
}
//# sourceMappingURL=ConditionalPortal.js.map