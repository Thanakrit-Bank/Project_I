"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FixedDialog = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var transition_1 = require("@react-md/transition");
var utils_1 = require("@react-md/utils");
var Dialog_1 = require("./Dialog");
var DEFAULT_CLASSNAMES = {
    appear: "rmd-dialog--fixed-enter",
    appearActive: "rmd-dialog--fixed-enter-active",
    enter: "rmd-dialog--fixed-enter",
    enterActive: "rmd-dialog--fixed-enter-active",
    exit: "rmd-dialog--fixed-exit",
    exitActive: "rmd-dialog--fixed-exit-active",
};
/**
 * The `FixedDialog` is a wrapper for the `Dialog` component that can be used to
 * be fix itself to another element. Another term for this component might be a
 * "Pop out Dialog".
 */
exports.FixedDialog = (0, react_1.forwardRef)(function FixedDialog(_a, nodeRef) {
    var fixedTo = _a.fixedTo, propStyle = _a.style, _b = _a.anchor, anchor = _b === void 0 ? utils_1.TOP_INNER_RIGHT_ANCHOR : _b, options = _a.options, getOptions = _a.getOptions, children = _a.children, className = _a.className, _c = _a.classNames, classNames = _c === void 0 ? DEFAULT_CLASSNAMES : _c, _d = _a.overlayHidden, overlayHidden = _d === void 0 ? true : _d, _e = _a.disableScrollLock, disableScrollLock = _e === void 0 ? true : _e, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExited = _a.onExited, props = __rest(_a, ["fixedTo", "style", "anchor", "options", "getOptions", "children", "className", "classNames", "overlayHidden", "disableScrollLock", "onEnter", "onEntering", "onEntered", "onExited"]);
    var onRequestClose = props.onRequestClose;
    var _f = (0, transition_1.useFixedPositioning)(__assign(__assign({ nodeRef: nodeRef, style: propStyle, transformOrigin: true, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExited: onExited, anchor: anchor, fixedTo: fixedTo, onScroll: /* istanbul ignore next */ function (_event, _a) {
            var visible = _a.visible;
            if (!visible) {
                onRequestClose();
            }
        } }, options), { getFixedPositionOptions: getOptions })), ref = _f.ref, style = _f.style, callbacks = _f.callbacks;
    return ((0, jsx_runtime_1.jsx)(Dialog_1.Dialog, __assign({}, props, callbacks, { ref: ref, type: "custom", style: style, className: (0, classnames_1.default)("rmd-dialog--fixed", className), classNames: classNames, overlayHidden: overlayHidden, disableScrollLock: disableScrollLock }, { children: children })));
});
//# sourceMappingURL=FixedDialog.js.map