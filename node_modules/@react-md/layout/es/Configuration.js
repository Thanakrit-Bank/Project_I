var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { NestedDialogContextProvider } from "@react-md/dialog";
import { FormThemeProvider } from "@react-md/form";
import { IconProvider } from "@react-md/icon";
import { MenuConfigurationProvider } from "@react-md/menu";
import { DEFAULT_RIPPLE_CLASSNAMES, DEFAULT_RIPPLE_TIMEOUT, StatesConfig, } from "@react-md/states";
import { AppSizeListener, DEFAULT_APP_SIZE, DEFAULT_DESKTOP_LARGE_MIN_WIDTH, DEFAULT_DESKTOP_MIN_WIDTH, DEFAULT_DIR, DEFAULT_PHONE_MAX_WIDTH, DEFAULT_TABLET_MAX_WIDTH, DEFAULT_TABLET_MIN_WIDTH, Dir, HoverModeProvider, UserInteractionModeListener, } from "@react-md/utils";
/**
 * This component allows you to quickly configure different functionality within
 * `react-md` in one place with reasonable defaults.
 */
export function Configuration(_a) {
    var onAppResize = _a.onAppResize, children = _a.children, icons = _a.icons, formTheme = _a.formTheme, _b = _a.defaultDir, defaultDir = _b === void 0 ? DEFAULT_DIR : _b, _c = _a.phoneMaxWidth, phoneMaxWidth = _c === void 0 ? DEFAULT_PHONE_MAX_WIDTH : _c, _d = _a.tabletMinWidth, tabletMinWidth = _d === void 0 ? DEFAULT_TABLET_MIN_WIDTH : _d, _e = _a.tabletMaxWidth, tabletMaxWidth = _e === void 0 ? DEFAULT_TABLET_MAX_WIDTH : _e, _f = _a.desktopMinWidth, desktopMinWidth = _f === void 0 ? DEFAULT_DESKTOP_MIN_WIDTH : _f, _g = _a.desktopLargeMinWidth, desktopLargeMinWidth = _g === void 0 ? DEFAULT_DESKTOP_LARGE_MIN_WIDTH : _g, _h = _a.defaultSize, defaultSize = _h === void 0 ? DEFAULT_APP_SIZE : _h, _j = _a.rippleTimeout, rippleTimeout = _j === void 0 ? DEFAULT_RIPPLE_TIMEOUT : _j, _k = _a.rippleClassNames, rippleClassNames = _k === void 0 ? DEFAULT_RIPPLE_CLASSNAMES : _k, _l = _a.disableRipple, disableRipple = _l === void 0 ? false : _l, _m = _a.disableProgrammaticRipple, disableProgrammaticRipple = _m === void 0 ? false : _m, hoverMode = _a.hoverMode, menuConfiguration = _a.menuConfiguration;
    return (_jsx(Dir, __assign({ defaultDir: defaultDir }, { children: _jsx(AppSizeListener, __assign({ defaultSize: defaultSize, onChange: onAppResize, phoneMaxWidth: phoneMaxWidth, tabletMinWidth: tabletMinWidth, tabletMaxWidth: tabletMaxWidth, desktopMinWidth: desktopMinWidth, desktopLargeMinWidth: desktopLargeMinWidth }, { children: _jsx(NestedDialogContextProvider, { children: _jsx(UserInteractionModeListener, { children: _jsx(StatesConfig, __assign({ disableRipple: disableRipple, disableProgrammaticRipple: disableProgrammaticRipple, rippleTimeout: rippleTimeout, rippleClassNames: rippleClassNames }, { children: _jsx(HoverModeProvider, __assign({}, hoverMode, { children: _jsx(IconProvider, __assign({}, icons, { children: _jsx(FormThemeProvider, __assign({}, formTheme, { children: _jsx(MenuConfigurationProvider, __assign({}, menuConfiguration, { children: children })) })) })) })) })) }) }) })) })));
}
//# sourceMappingURL=Configuration.js.map