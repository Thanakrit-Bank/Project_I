"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardHeader = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var icon_1 = require("@react-md/icon");
var utils_1 = require("@react-md/utils");
var CardHeaderAddon_1 = require("./CardHeaderAddon");
var block = (0, utils_1.bem)("rmd-card");
/**
 * The header for a `Card`. There should only be up to 1 `CardHeader` within a
 * card and normally contains the `CardTitle` and optionally `CardSubtitle`
 * components. There is also additional functionality built in to render items
 * before or after the main children with some additional spacing.
 */
exports.CardHeader = (0, react_1.forwardRef)(function CardHeader(_a, ref) {
    var _b;
    var _c = _a.align, align = _c === void 0 ? "center" : _c, className = _a.className, contentClassName = _a.contentClassName, children = _a.children, beforeChildren = _a.beforeChildren, afterChildren = _a.afterChildren, props = __rest(_a, ["align", "className", "contentClassName", "children", "beforeChildren", "afterChildren"]);
    return ((0, jsx_runtime_1.jsx)("header", __assign({}, props, { ref: ref, className: (0, classnames_1.default)(block("header", (_b = {},
            _b[align] = align !== "none",
            _b)), className) }, { children: (0, jsx_runtime_1.jsx)(icon_1.TextIconSpacing, __assign({ icon: (0, jsx_runtime_1.jsx)(CardHeaderAddon_1.CardHeaderAddon, { children: beforeChildren }) }, { children: (0, jsx_runtime_1.jsx)(icon_1.TextIconSpacing, __assign({ icon: (0, jsx_runtime_1.jsx)(CardHeaderAddon_1.CardHeaderAddon, { children: afterChildren }), iconAfter: true }, { children: (0, jsx_runtime_1.jsx)("span", __assign({ className: (0, classnames_1.default)(block("header-content"), contentClassName) }, { children: children })) })) })) })));
});
//# sourceMappingURL=CardHeader.js.map