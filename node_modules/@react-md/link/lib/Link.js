"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Link = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var block = (0, utils_1.bem)("rmd-link");
/**
 * The `Link` component is used to render links within your app with a basic
 * styles applied and some additional "security" built-in if using the
 * `rel="_blank"`. This can be used with a browser routing library like
 * `react-router` or `reach-router` by providing the `Link` as the
 * `linkComponent` prop.
 */
exports.Link = (0, react_1.forwardRef)(function Link(_a, ref) {
    var propClassName = _a.className, _b = _a.component, Component = _b === void 0 ? "a" : _b, propHref = _a.href, children = _a.children, propRel = _a.rel, _c = _a.flexCentered, flexCentered = _c === void 0 ? false : _c, _d = _a.preventMaliciousTarget, preventMaliciousTarget = _d === void 0 ? true : _d, props = __rest(_a, ["className", "component", "href", "children", "rel", "flexCentered", "preventMaliciousTarget"]);
    var target = props.target;
    var href = propHref === "" ? undefined : propHref;
    var className = (0, classnames_1.default)(block({ "flex-centered": flexCentered }), propClassName);
    var rel = propRel;
    if (preventMaliciousTarget &&
        typeof rel !== "string" &&
        target === "_blank") {
        rel = "noopener noreferrer";
    }
    return ((0, jsx_runtime_1.jsx)(Component, __assign({}, props, { className: className, ref: ref, rel: rel, href: href }, { children: children })));
});
//# sourceMappingURL=Link.js.map