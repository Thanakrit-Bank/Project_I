import type { ReactElement, ReactNode } from "react";
import type { ToastMessage } from "./MessageQueueContext";
import type { SnackbarProps } from "./Snackbar";
import type { ActionEventHandler } from "./SnackbarQueue";
import type { MessageQueueOptions } from "./useMessageQueue";
export interface MessageQueueProps<M extends ToastMessage> extends MessageQueueOptions<M>, SnackbarProps {
    /**
     * The children are required in this component since the message queue relies
     * on setting up React Context and provide hooks to add a message to the
     * queue. If there are no children, the message queue will not work.
     */
    children: ReactNode;
    /**
     * An optional function to call when the action button is clicked. This will
     * be applied to **all** toasts that appear in this message queue. You will
     * be provided the current message followed by the click event.
     */
    onActionClick?: ActionEventHandler<M>;
}
/**
 * This component is used to be able to create a queue of messages with the
 * `Snackbar` and `Toast` components with a _fairly_ decent API out of the box.
 */
export declare function MessageQueue<M extends ToastMessage = ToastMessage>({ timeout, duplicates, defaultQueue, children, ...props }: MessageQueueProps<M>): ReactElement;
